# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR_P         = @MKDIR_P@
master_top_srcdir  = @master_top_srcdir@
bindir          = @bindir@
exec_prefix     = @exec_prefix@
prefix          = @prefix@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
LIBS            = @LIBS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_LINK         = $(CC)
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LDFLAGS     =  @LDFLAGS@ 

VPATH = .:@srcdir@
INCLUDES = -I../../include -I${master_top_srcdir}/src/include \
    -I../../pmi/simple -I${master_top_srcdir}/src/pmi/simple \
	-I${master_top_srcdir}/src/pm/util 
doc_sources = mpiexec.txt

.SUFFIXES:
.SUFFIXES: .o .lo .c 
.c.o:
	$(C_COMPILE) -c $<
.c.lo:
	$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
clean:  clean-local
	-@rm -f *.o ${srcdir}/*.o mpiexec
	-@rm -f mpiexec.exe
	-@rm -f core core.[0-9]*
	-@rm -f *.lo ${srcdir}/*.lo
	-@rm -f *.irlog*
distclean:  clean distclean-local distclean-xxx remove-makefile
distclean-xxx:
	-@rm -f Makefile config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -f forkerconf.h
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect: mpiexec

mpiexec: mpiexec.o  ../util/libmpiexec.a  
	$(C_LINK) $(CFLAGS) $(LDFLAGS) -o mpiexec mpiexec.o  \
	../util/libmpiexec.a ../../../lib/libmpich.a ${LIBS} 
# --------------------------------------------------------------------------
# Install target
install:  FORCE_TARGET 
	if [ ! -d ${DESTDIR}${exec_prefix} ] ; then $(MKDIR_P) ${DESTDIR}${exec_prefix} ; fi
	if [ ! -d ${DESTDIR}${prefix} ] ; then $(MKDIR_P) ${DESTDIR}${prefix} ; fi
	if [ ! -d ${DESTDIR}${bindir} ] ; then $(MKDIR_P) ${DESTDIR}${bindir} ; fi
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpiexec ${DESTDIR}${bindir}/mpiexec

install-strip:
	$(MAKE) INSTALL_STRIP_FLAG=-s install
uninstall: 
	-rm -f ${DESTDIR}${bindir}/mpiexec
installcheck: 
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  mpiexec.c
ETAGS           = @ETAGS@ @ETAGSADD@
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
tags: TAGS
TAGS: Makefile${HEADERFILES} ${SOURCEFILES}
	here=`cd ../../.. && pwd` ; cd ${srcdir} && $(ETAGS) -o $$here/TAGS --append ${HEADERFILES} ${SOURCEFILES}
# --------------------------------------------------------------------------
# Some C compilers won't take ../libfoo.a as a library, so we use
# -Ldir -llib for each of the libraries instead.
# Force the use of the static, not shared library for mpich and for mpiexec

clean-local:
	@-(cd ../util && $(MAKE) clean)
distclean-local:
	@-rm -f forkerconf.h

# Use the mpich2-build-install target to include mpiexec in the build bin
# directory (all pm's require these targets)
mpich2-build-install: install
mpich2-build-uninstall: uninstall

# A special alternate installation target when using multiple process managers
install-alt: mpiexec
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpiexec $(DESTDIR)${bindir}/mpiexec.gforker


# We use a dummy dependency to ensure that we always go to the util
# directory to see if anything needs to be done	
../util/libmpiexec.a: dummy
dummy:
	cd ../util && $(MAKE)

FORCE_TARGET:

