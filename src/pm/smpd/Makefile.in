# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
AR              = @AR@
RANLIB          = @RANLIB@
INSTALL         = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA    = @INSTALL_DATA@
MKDIR_P         = @MKDIR_P@
master_top_srcdir  = @master_top_srcdir@
top_builddir    = @master_top_builddir@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
prefix          = @prefix@
exec_prefix     = @exec_prefix@
bindir          = @bindir@
DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
MAKE            = @MAKE@
MPILIBNAME      = @MPILIBNAME@
CC              = @CC@
CFLAGS          = @CFLAGS@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
LIBTOOL         = @LIBTOOL@
CC_SHL          = @CC_SHL@
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)

VPATH = .:@srcdir@
win_sources = smpd_job.c smpd_mapdrive.c smpd_register.c smpd_ad.cpp
INCLUDES = -I../../include -I${master_top_srcdir}/src/include \
    -I../../pmi/smpd -I${master_top_srcdir}/src/pmi/smpd

.SUFFIXES:
.SUFFIXES: .o .lo .c 
.c.o:
	$(C_COMPILE) -c $<
.c.lo:
	$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo
.c:
	$(C_COMPILE) -o $* $< $(LDFLAGS) $(LIBS)
apply: 
	$(ACTION) $(ACTION_INPUT)
	(cd ../../mpid/common/sock && $(MAKE) apply )
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f .libstamp0 .libstamp1 
	-@rm -f *.lo ${srcdir}/*.lo
	(cd ../../mpid/common/sock && $(MAKE) clean )
distclean:  clean distclean-local distclean-xxx remove-makefile
distclean-xxx:
	if [ -s ../../mpid/common/sock/Makefile ] ; then (cd ../../mpid/common/sock && $(MAKE) distclean ) ; fi
	-@rm -f Makefile localdefs config.status config.log config.cache *conf.cache config.system
	-@rm -rf autom4te*.cache
	-@rm -f smpdconf.h
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect:
	@(cd ../../mpid/common/sock && ${MAKE} all )
	${MAKE} all-local
all-local: .libstamp0 ../../../lib/lib${MPILIBNAME}.a
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    ${MAKE} .libstamp1 ; \
	fi
	${MAKE} all-postamble

.libstamp0 ../../../lib/lib${MPILIBNAME}.a: smpd_hash.o smpd_authenticate.o \
	smpd_printf.o smpd_read_write.o smpd_user_data.o smpd_connect.o \
	smpd_get_opt.o smpd_launch_process.o smpd_command.o smpd_database.o \
	smpd_state_machine.o smpd_handle_command.o smpd_session.o \
	smpd_start_mgr.o smpd_barrier.o smpd_do_console.o smpd_restart.o \
	smpd_host_util.o smpd_handle_spawn.o 
	${AR} cr ../../../lib/lib${MPILIBNAME}.a $?
	${RANLIB} ../../../lib/lib${MPILIBNAME}.a
	date > .libstamp0
.libstamp1 ../../../lib/lib${MPILIBNAME}.la: smpd_hash.lo \
	smpd_authenticate.lo smpd_printf.lo smpd_read_write.lo \
	smpd_user_data.lo smpd_connect.lo smpd_get_opt.lo \
	smpd_launch_process.lo smpd_command.lo smpd_database.lo \
	smpd_state_machine.lo smpd_handle_command.lo smpd_session.lo \
	smpd_start_mgr.lo smpd_barrier.lo smpd_do_console.lo smpd_restart.lo \
	smpd_host_util.lo smpd_handle_spawn.lo 
	${AR} cr ../../../lib/lib${MPILIBNAME}.la $?
	date > .libstamp1
# --------------------------------------------------------------------------
# Install target
install:  FORCE_TARGET 
	if [ ! -d ${DESTDIR}${exec_prefix} ] ; then $(MKDIR_P) ${DESTDIR}${exec_prefix} ; fi
	if [ ! -d ${DESTDIR}${prefix} ] ; then $(MKDIR_P) ${DESTDIR}${prefix} ; fi
	if [ ! -d ${DESTDIR}${bindir} ] ; then $(MKDIR_P) ${DESTDIR}${bindir} ; fi
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) mpiexec ${DESTDIR}${bindir}/mpiexec
	$(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) smpd ${DESTDIR}${bindir}/smpd

install-strip:
	$(MAKE) INSTALL_STRIP_FLAG=-s install
uninstall: 
	-rm -f ${DESTDIR}${bindir}/mpiexec
	-rm -f ${DESTDIR}${bindir}/smpd
installcheck: 
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
SOURCES         =  smpd_hash.c smpd_authenticate.c smpd_printf.c \
	smpd_read_write.c smpd_user_data.c smpd_connect.c smpd_get_opt.c \
	smpd_launch_process.c smpd_command.c smpd_database.c \
	smpd_state_machine.c smpd_handle_command.c smpd_session.c \
	smpd_start_mgr.c smpd_barrier.c smpd_do_console.c smpd_restart.c \
	smpd_host_util.c smpd_handle_spawn.c 
ETAGS           = @ETAGS@ @ETAGSADD@
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
tags: TAGS
TAGS: Makefile${HEADERFILES} ${SOURCEFILES}
	here=`cd ../../.. && pwd` ; cd ${srcdir} && $(ETAGS) -o $$here/TAGS --append ${HEADERFILES} ${SOURCEFILES}
# --------------------------------------------------------------------------
#mpiexec_SOURCES = mpiexec.c mp_parse_command_line.c
#smpd_SOURCES = smpd.c smpd_cmd_args.c smpd_watchprocs.c
#mpiexec_LDADD = -L../../../lib -L${master_top_srcdir}/lib -lmpich
#mpiexec_DEPADD = ../../../lib/lib${MPILIBNAME}.a
#smpd_LDADD = -L../../../lib -L${master_top_srcdir}/lib -lmpich
#smpd_DEPADD = ../../../lib/lib${MPILIBNAME}.a
all-postamble: mpiexec smpd
mpiexec: mpiexec.o mp_parse_command_line.o mp_parse_oldconfig.o mpiexec_rsh.o ../../../lib/lib${MPILIBNAME}.a
	../../../bin/mpicc -o mpiexec mpiexec.o mp_parse_command_line.o mp_parse_oldconfig.o mpiexec_rsh.o
smpd: smpd.o smpd_cmd_args.o smpd_watchprocs.o ../../../lib/lib${MPILIBNAME}.a
	../../../bin/mpicc -o smpd smpd.o smpd_cmd_args.o smpd_watchprocs.o
distclean-local:
	@-rm -f smpdconf.h

mpich2-build-install: install

mpich2-build-uninstall: uninstall

FORCE_TARGET:

