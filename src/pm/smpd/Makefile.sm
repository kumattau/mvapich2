EXTRA_DIRS = ../../util/mem ./sock
SUBDIRS = sock .
lib${MPILIBNAME}_a_SOURCES = smpd_hash.c smpd_authenticate.c smpd_printf.c \
 smpd_read_write.c smpd_user_data.c smpd_connect.c smpd_get_opt.c \
 smpd_launch_process.c smpd_command.c smpd_database.c smpd_state_machine.c \
 smpd_handle_command.c smpd_session.c smpd_start_mgr.c smpd_barrier.c \
 smpd_do_console.c smpd_restart.c smpd_host_util.c smpd_handle_spawn.c
win_sources = smpd_job.c smpd_mapdrive.c smpd_register.c smpd_ad.cpp smpd_affinitize.c smpd_ccp_util.c smpd_hpc_js_rmk.cpp smpd_hpc_js_bs.cpp smpd_hpc_js_util.cpp
mpiexec_SOURCES = mpiexec.c mp_parse_command_line.c mp_parse_oldconfig.c mpiexec_rsh.c
smpd_SOURCES = smpd.c smpd_cmd_args.c smpd_watchprocs.c

INCLUDES = -I${master_top_srcdir}/src/include -I${master_top_srcdir}/src/pmi/smpd -I${master_top_srcdir}/src/pm/smpd/sock/include -I${master_top_srcdir}/src/pm/smpd/sock/@smpd_sock_name@ -I${top_builddir}/src/include -I${top_builddir}/src/pm/smpd -I${top_builddir}/src/pm/smpd/sock/@smpd_sock_name@ 

mpiexec_LDADD = -L../../../lib -L${master_top_srcdir}/lib -lmpich -lmpl
mpiexec_DEPADD = ../../../lib/lib${MPILIBNAME}.a ../../../lib/libmpl.a
smpd_LDADD = -L../../../lib -L${master_top_srcdir}/lib -lmpich -lmpl
smpd_DEPADD = ../../../lib/lib${MPILIBNAME}.a ../../../lib/libmpl.a

# Rules to build MPL before SMPD
../../../lib/libmpl.a:
	build_prefix=`cd ../../.. && pwd` && \
	for dir in ../../../src/mpl ; do \
	    (cd $$dir && ${MAKE} prefix=$$build_prefix exec_prefix=$$build_prefix \
	    bindir=$$build_prefix/bin install) ; \
	done

all-postamble: mpiexec smpd

install_BIN = mpiexec smpd
distclean-local:
	@-rm -f smpdconf.h
