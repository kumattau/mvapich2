/*
 * Globus device code:          Copyright 2005 Northern Illinois University
 *
 * XXX: INSERT POINTER TO OFFICIAL COPYRIGHT TEXT
 */

#if !defined(MPICH2_MPIDDEFS_H_INCLUDED)
#define MPICH2_MPIDDEFS_H_INCLUDED

/**********************************************************************************************************************************
						BEGIN TOPOLOGY DISCOVERY SECTION
**********************************************************************************************************************************/
/* attribute keys for accessing topology information */
#define MPIG_TOPOLOGY_DEPTHS_KEYVAL ((const int) mpig_topology_depths_keyval)
#define MPIG_TOPOLOGY_COLORS_KEYVAL ((const int) mpig_topology_colors_keyval)
extern int mpig_topology_depths_keyval;
extern int mpig_topology_colors_keyval;

/* topology levels (the order is relevant!) */
#define MPIG_TOPOLOGY_LEVEL_WAN    0  /* communication across a wide area network */
#define MPIG_TOPOLOGY_LEVEL_LAN    1  /* communication within a local area network */
#define MPIG_TOPOLOGY_LEVEL_SAN    2  /*  communication within a system area network */
#define MPIG_TOPOLOGY_LEVEL_VMPI   3  /* communication within a single subjob using an underlying vendor MPI library */
/* Reserved: MPIG_TOPOLOGY_LEVEL_HOST -- communication within a single host (e.g. shared memory) */
/* Reserved: MPIG_TOPOLOGY_LEVEL_PROC -- communication within a single process (intra-process communication) */
#define MPIG_TOPOLOGY_NUM_LEVELS   4  /* number of topology levels */

/* deprecated topology symbols */
#define MPICHX_TOPOLOGY_DEPTHS MPIG_TOPOLOGY_DEPTHS_KEYVAL
#define MPICHX_TOPOLOGY_COLORS MPIG_TOPOLOGY_COLORS_KEYVAL
#define MPICHX_WAN_LEVEL  MPIG_TOPOLOGY_LEVEL_WAN
#define MPICHX_LAN_LEVEL  MPIG_TOPOLOGY_LEVEL_LAN
#define MPICHX_HOST_LEVEL MPIG_TOPOLOGY_LEVEL_SAN
#define MPICHX_VMPI_LEVEL MPIG_TOPOLOGY_LEVEL_VMPI
/**********************************************************************************************************************************
						 END TOPOLOGY DISCOVERY SECTION
**********************************************************************************************************************************/

/**********************************************************************************************************************************
						  BEGIN SYMBOL RENAMING SECTION
**********************************************************************************************************************************/
#if @MPIG_RENAME_SYMBOLS_DEFINED@ /* MPIG_RENAME_SYMBOLS */
/* rename MPI and PMPI symbols if building on top of a vendor MPI */
@MPIG_SYMBOL_MAP_PUBLIC_H@

#if defined(MPIG_BUILDING_MPICH2)
/* rename internal MPICH2 symbols if building on top of a vendor MPI, but only while building MPICH2 */
@MPIG_SYMBOL_MAP_INTERNAL_H@

/* a special case when ROMIO is disabled.  see src/binding/f77/mpi_fortimpl.h. */
#if @ROMIO_ENABLED@ == 0
#undef MPI_File_f2c
#endif

#endif /* defined(MPIG_BUILDING_MPICH2) */
#endif /* MPIG_RENAME_SYMBOLS */
/**********************************************************************************************************************************
						   END SYMBOL RENAMING SECTION
**********************************************************************************************************************************/

/**********************************************************************************************************************************
						     BEGIN DEBUGGING SECTION
**********************************************************************************************************************************/
void mpig_debug_app_printf(const char * filename, const char * funcname, int line, const char * fmt, ...);

/* printf conversion specifiers and other macros to make printing values of types that vary with the platform a little easier */
#define MPIG_HANDLE_FMT      "0x%08x"			/* format for MPICH2 object handles; assumed to be at most 32-bits */
#define MPIG_ERRNO_FMT       "0x%08x"			/* format of an MPI error code; assumed to be at most 32-bits */
#define MPIG_AINT_FMT        @MPIG_AINT_FMT@		/* format for an MPI_Aint */
#define MPIG_SIZE_FMT        @MPIG_SIZE_FMT@		/* format of a size_t (and replated types) */
#define MPIG_PTR_FMT         @MPIG_PTR_FMT@		/* format of a pointer */
#define MPIG_PTR_CAST(ptr_)  ((@MPIG_PTR_CAST@)(ptr_))	/* cast type for a pointer */

#if @MPIG_DEBUG_DEFINED@
#define MPIG_DEBUG_APP_PRINTF(a_) mpig_debug_app_printf a_
#define MPIG_DEBUG_APP_ERROR_PRINT(funcname_, errno_)						\
{												\
    char err_str__[MPI_MAX_ERROR_STRING + 1];							\
    int err_str_len__;										\
    MPI_Error_string((errno_), err_str__, &err_str_len__);					\
    MPIG_DEBUG_APP_PRINTF((__FILE__, (funcname_), __LINE__, "MPI_ERROR: %s", err_str__));	\
}
#else
#define MPIG_DEBUG_APP_PRINTF(a_)
#define MPIG_DEBUG_APP_ERROR_PRINT(funcname_, errno_)
#endif
/**********************************************************************************************************************************
						      END DEBUGGING SECTION
**********************************************************************************************************************************/

#endif /* MPICH2_MPIDDEFS_H_INCLUDED */
