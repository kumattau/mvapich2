# This Makefile.in created by simplemake.  Do not edit

# @configure_input@

# --------------------------------------------------------------------------
all: all-redirect

SHELL           = @SHELL@
bindir          = @bindir@
exec_prefix     = @exec_prefix@
prefix          = @prefix@
abs_builddir    = @abs_builddir@
srcdir          = @srcdir@
abs_srcdir      = @abs_srcdir@
MAKE            = @MAKE@

VPATH = .:@srcdir@

.SUFFIXES:
# Some make programs complain if no suffixes are set
.SUFFIXES: .c .o
apply: 
	$(ACTION) $(ACTION_INPUT)
	for dir in util attr init info comm coll datatype io rma spawn ; do \
		(cd $$dir && ${MAKE} apply ; ) ; done
clean: 
	-@rm -f *.o ${srcdir}/*.o 
	-@rm -f *.lo ${srcdir}/*.lo
	for dir in util attr init info comm coll datatype io rma spawn ; do \
		(cd $$dir && ${MAKE} clean ; ) ; done
distclean:  clean distclean-xxx remove-makefile
distclean-xxx:
	for dir in util attr init info comm coll datatype io rma spawn ; do \
		if [ ! -s $$dir/Makefile ] ; then continue ; fi ;\
		(cd $$dir && ${MAKE} distclean ; ) ; done
	-@rm -f Makefile testlist
	-@rm -rf autom4te*.cache
	-@rm -rf $(DEPS_DIR)
	-@rm -f TAGS
remove-makefile:
	rm -f Makefile
remove-genmakefiles:
	rm -f  Makefile
all-redirect:
	@(cd util && ${MAKE} all )
	@(cd attr && ${MAKE} all )
	@(cd init && ${MAKE} all )
	@(cd info && ${MAKE} all )
	@(cd comm && ${MAKE} all )
	@(cd coll && ${MAKE} all )
	@(cd datatype && ${MAKE} all )
	@(cd io && ${MAKE} all )
	@(cd rma && ${MAKE} all )
	@(cd spawn && ${MAKE} all )

# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
# --------------------------------------------------------------------------
HEADERFILES     = $(HEADERS)
SOURCEFILES     = $(SOURCES)
tags: TAGS
TAGS: Makefile
	for dir in util attr init info comm coll datatype io rma spawn ; do \
		(cd $$dir && ${MAKE} TAGS ; ) ; done
# --------------------------------------------------------------------------

# A special testing target to simplify testing just the C++ code
testing:
	../runtests -srcdir=$(srcdir) -tests=testlist \
		   -mpiexec=$(bindir)/mpiexec \
		   -xmlfile=summary.xml


FORCE_TARGET:

