diff --git a/CHANGELOG b/CHANGELOG
index c86e1d7..3667f8b 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -3,6 +3,50 @@ MVAPICH2 Changelog
 This file briefly describes the changes to the MVAPICH2 software
 package.  The logs are arranged in the "most recent first" order.
 
+MVAPICH2 2.3.2 (08/09/2019)
+
+* Features and Enhancements (since 2.3.1):
+    - Improved performance for inter-node communication
+    - Improved performance for Gather, Reduce, and Allreduce with cyclic
+      hostfile
+        - Thanks to X-ScaleSolutions for the patch
+    - Improved performance for intra-node point-to-point communication
+    - Add support for Mellanox HDR adapters
+    - Add support for Cascade lake systems
+    - Add support for Microsoft Azure platform
+    - Add support for new NUMA-aware hybrid binding policy
+    - Add support for AMD EPYC Rome architecture
+    - Improved multi-rail selection logic
+    - Enhanced heterogeniety detection logic
+    - Enhanced point-to-point and collective tuning for AMD EPYC Rome,
+      Frontera@TACC, Mayer@Sandia, Pitzer@OSC, Summit@ORNL, Lassen@LLNL, and
+      Sierra@LLNL systems
+    - Enhanced point-to-point and collective tuning for Microsoft Azure
+    - Enhance output of MV2_SHOW_CPU_BINDING to include binding policy
+    - Add multiple PVARs and CVARs for point-to-point and collective operations
+ 
+* Bug Fixes (since 2.3.1):
+    - Fix issue with support for DDN Infinite Memory Engine (IME)
+        - Thanks to Judit Planas @EPFL for reporting the issue
+    - Fix issue when compiling with PGI 19.x
+        - Thanks to Timothy S. Carlson @PNNL for reporting the issue
+    - Fix issue with Infiniband build when ib_uverbs module is not loaded
+        - Thanks to Nicolas Morey-Chaisemartin @SUSE for reporting and
+          providing the patch
+    - Fix issues with DPM support
+        - Thanks to Kenneth McElvain@UC Berkeley for reporting the issues
+    - Fix issue with handling datatype based collectives
+    - Fix hang in Get accumulate
+    - Fix to honor scheduler/administrator reservations for CPU binding
+    - Fix issue with CPU binding for non-power-of-two processes
+    - Fix HCA detection logic to select correct tuning tables for single
+      node scenarios
+    - Fix segfault when freeing removed duplicate communicator
+    - Fix issues in handling very large messages with CMA
+    - Fix issue with very large message point-to-point communication
+    - Fix issue with registration cache on large number of nodes
+    - Fix compilation warnings and memory leaks
+
 MVAPICH2 2.3.1 (03/01/2019)
 
 * Features and Enhancements (since 2.3):
diff --git a/configure.ac b/configure.ac
index 03f65aa..40a7239 100644
--- a/configure.ac
+++ b/configure.ac
@@ -456,6 +456,7 @@ AC_ARG_ENABLE([mpit_pvars],
         nem      - All nemesis-related
         rma      - All rma-related
         mv2      - All mvapich2-related
+        mem      - All memory related
         all      - All variables above
 ],[],[enable_mpit_pvars=none])
 
@@ -804,7 +805,7 @@ AC_ARG_ENABLE([hybrid],
                               [enable hybrid communication channel])
               ],
               [],
-              [enable_hybrid=no])
+              [enable_hybrid=yes])
 
 AC_MSG_CHECKING([whether to enable header caching])
 
@@ -2056,11 +2057,13 @@ IFS=","
 for var in $enable_mpit_pvars ; do
     AS_CASE(["$var"],
             [mv2|yes],[enable_pvar_mv2=yes],
+            [mem],[enable_pvar_mem=yes],
             [nem],[enable_pvar_nem=yes],
             [recvq],[enable_pvar_recvq=yes],
             [rma],[enable_pvar_rma=yes],
             [all],
             [enable_pvar_mv2=yes
+	     enable_pvar_mem=yes
              enable_pvar_nem=yes
              enable_pvar_recvq=yes
              enable_pvar_rma=yes],
@@ -2079,6 +2082,14 @@ fi
 AC_DEFINE_UNQUOTED(ENABLE_PVAR_MV2,$status_mv2_pvars,
           [Define to 1 to enable mvapich2-related MPI_T performance variables])
 
+if test -n "$enable_pvar_mem" ; then
+    status_mem_pvars=1
+else
+    status_mem_pvars=0
+fi
+AC_DEFINE_UNQUOTED(ENABLE_PVAR_MEM,$status_mem_pvars,
+          [Define to 1 to enable memory-related MPI_T performance variables])
+
 if test -n "$enable_pvar_nem" ; then
     status_nem_pvars=1
 else
diff --git a/maint/version.m4 b/maint/version.m4
index 0062386..4776a8e 100644
--- a/maint/version.m4
+++ b/maint/version.m4
@@ -17,8 +17,8 @@
 m4_define([MPICH_VERSION_m4],[3.2.1])dnl
 m4_define([MPICH_RELEASE_DATE_m4],[General Availability Release])dnl
 
-m4_define([MVAPICH2_VERSION_m4],[2.3.1])dnl
-m4_define([MVAPICH2_RELEASE_DATE_m4],[Fri Mar 1 22:00:00 EST 2019])dnl
+m4_define([MVAPICH2_VERSION_m4],[2.3.2])dnl
+m4_define([MVAPICH2_RELEASE_DATE_m4],[Fri August 9 22:00:00 EST 2019])dnl
 
 # For libtool ABI versioning rules see:
 # http://www.gnu.org/software/libtool/manual/libtool.html#Updating-version-info
diff --git a/osu_benchmarks/CHANGES b/osu_benchmarks/CHANGES
index b0baeb6..d951561 100644
--- a/osu_benchmarks/CHANGES
+++ b/osu_benchmarks/CHANGES
@@ -1,3 +1,24 @@
+OSU Micro Benchmarks v5.6.2 (08/09/2019)
+
+* New Features & Enhancements
+    - Add support for benchmarking GPU-Aware multi-threaded point-to-point
+      operations
+        * osu_latency_mt
+
+* Bug Fixes (since v5.6.1)
+    - Fix issue with freeing in osu_get_bw benchmark
+    - Fix issues with out of tree builds
+        - Thanks to Joseph Schuchart@HLRS for reporting the issue
+    - Fix incorrect header in osu_mbw_mr benchmark
+    - Fix memory alignment for non-heap allocations in openshmem message rate
+      benchmarks
+        - Thanks to Yossi@Mellanox for pointing out the issue
+
+OSU Micro Benchmarks v5.6.1 (03/15/2019)
+
+* Bug Fixes (since v5.6)
+    - Fix issue with latency computation in osu_latency_mt benchmark.
+
 OSU Micro Benchmarks v5.6 (03/01/2019)
 
 * New Features & Enhancements
diff --git a/osu_benchmarks/README b/osu_benchmarks/README
index 4a89bef..ab0c496 100644
--- a/osu_benchmarks/README
+++ b/osu_benchmarks/README
@@ -44,7 +44,7 @@ following:
                      osu_upc_all_barrier
         do
             echo "Compiling $bench..."
-            upcc $bench.c ../util/osu_util.c -o $bench
+            upcc $bench.c ../util/osu_util_pgas.c ../util/osu_util.c -o $bench
         done
 
 The MPI Multiple Bandwidth / Message Rate (osu_mbw_mr), OpenSHMEM Put Message
@@ -787,6 +787,7 @@ MPI communication using buffers on NVIDIA GPU devices.
     osu_latency        - Latency Test
     osu_mbw_mr         - Multiple Bandwidth / Message Rate Test
     osu_multi_lat      - Multi-pair Latency Test
+    osu_latency_mt     - Multi-threaded Latency Test
     osu_put_latency    - Latency Test for Put
     osu_get_latency    - Latency Test for Get
     osu_put_bw         - Bandwidth Test for Put
diff --git a/osu_benchmarks/configure.ac b/osu_benchmarks/configure.ac
index 2f98738..3da6339 100644
--- a/osu_benchmarks/configure.ac
+++ b/osu_benchmarks/configure.ac
@@ -2,7 +2,7 @@
 # Process this file with autoconf to produce a configure script.
 
 AC_PREREQ([2.59])
-AC_INIT([OSU-Micro-Benchmarks], [5.6], [mvapich-discuss@cse.ohio-state.edu])
+AC_INIT([OSU-Micro-Benchmarks], [5.6.2], [mvapich-discuss@cse.ohio-state.edu])
 AC_CONFIG_SRCDIR([mpi/pt2pt/osu_latency.c])
 
 AM_INIT_AUTOMAKE([foreign])
diff --git a/osu_benchmarks/mpi/collective/Makefile.am b/osu_benchmarks/mpi/collective/Makefile.am
index 418a2e3..e7bb87c 100644
--- a/osu_benchmarks/mpi/collective/Makefile.am
+++ b/osu_benchmarks/mpi/collective/Makefile.am
@@ -9,7 +9,7 @@ SUFFIXES = .cu .cpp
 collectivedir = $(pkglibexecdir)/mpi/collective
 collective_PROGRAMS = osu_alltoallv osu_allgatherv osu_scatterv osu_gatherv osu_reduce_scatter osu_barrier osu_reduce osu_allreduce osu_alltoall osu_bcast osu_gather osu_allgather osu_scatter osu_iallgather osu_ibcast  osu_ialltoall osu_ibarrier osu_igather osu_iscatter osu_iscatterv osu_igatherv osu_iallgatherv osu_ialltoallv osu_ialltoallw osu_ireduce osu_iallreduce
 
-AM_CFLAGS = -I../../util
+AM_CFLAGS = -I${top_srcdir}/util
 
 UTILITIES = ../../util/osu_util.c ../../util/osu_util.h ../../util/osu_util_mpi.c ../../util/osu_util_mpi.h
 if CUDA_KERNELS
diff --git a/osu_benchmarks/mpi/one-sided/Makefile.am b/osu_benchmarks/mpi/one-sided/Makefile.am
index e23fd76..19963af 100644
--- a/osu_benchmarks/mpi/one-sided/Makefile.am
+++ b/osu_benchmarks/mpi/one-sided/Makefile.am
@@ -13,7 +13,7 @@ if MPI3_LIBRARY
     one_sided_PROGRAMS += osu_get_acc_latency osu_fop_latency osu_cas_latency
 endif
 
-AM_CFLAGS = -I../../util
+AM_CFLAGS = -I${top_srcdir}/util
 
 UTILITIES = ../../util/osu_util.c ../../util/osu_util.h ../../util/osu_util_mpi.c ../../util/osu_util_mpi.h
 if CUDA_KERNELS
diff --git a/osu_benchmarks/mpi/one-sided/osu_get_bw.c b/osu_benchmarks/mpi/one-sided/osu_get_bw.c
index b625814..b0acd4b 100644
--- a/osu_benchmarks/mpi/one-sided/osu_get_bw.c
+++ b/osu_benchmarks/mpi/one-sided/osu_get_bw.c
@@ -192,7 +192,7 @@ void run_get_with_flush_local (int rank, enum WINDOW type)
 
         print_bw(rank, size, t);
 
-        MPI_Win_free(&win);
+        free_memory_one_sided(sbuf,rbuf,win,rank);
     }
 }
 
@@ -238,7 +238,7 @@ void run_get_with_flush (int rank, enum WINDOW type)
 
         print_bw(rank, size, t);
 
-        MPI_Win_free(&win);
+        free_memory_one_sided(sbuf,rbuf,win,rank);
     }
 }
 
@@ -282,7 +282,7 @@ void run_get_with_lock_all (int rank, enum WINDOW type)
 
         print_bw(rank, size, t);
 
-        MPI_Win_free(&win);
+        free_memory_one_sided(sbuf,rbuf,win,rank);
     }
 }
 #endif
@@ -329,7 +329,7 @@ void run_get_with_lock(int rank, enum WINDOW type)
 
         print_bw(rank, size, t);
 
-        MPI_Win_free(&win);
+        free_memory_one_sided(sbuf,rbuf,win,rank);
     }
 }
 
@@ -383,7 +383,7 @@ void run_get_with_fence(int rank, enum WINDOW type)
 
         print_bw(rank, size, t);
 
-        MPI_Win_free(&win);
+        free_memory_one_sided(sbuf,rbuf,win,rank);
     }
 }
 
@@ -447,7 +447,7 @@ void run_get_with_pscw(int rank, enum WINDOW type)
 
         MPI_CHECK(MPI_Group_free(&group));
 
-        MPI_Win_free(&win);
+        free_memory_one_sided(sbuf,rbuf,win,rank);
     }
     MPI_CHECK(MPI_Group_free(&comm_group));
 }
diff --git a/osu_benchmarks/mpi/pt2pt/Makefile.am b/osu_benchmarks/mpi/pt2pt/Makefile.am
index adea340..17f85a4 100644
--- a/osu_benchmarks/mpi/pt2pt/Makefile.am
+++ b/osu_benchmarks/mpi/pt2pt/Makefile.am
@@ -9,7 +9,7 @@ SUFFIXES = .cu .cpp
 pt2ptdir = $(pkglibexecdir)/mpi/pt2pt
 pt2pt_PROGRAMS = osu_bibw osu_bw osu_latency osu_mbw_mr osu_multi_lat
 
-AM_CFLAGS = -I../../util
+AM_CFLAGS = -I${top_srcdir}/util
 
 UTILITIES = ../../util/osu_util.c ../../util/osu_util.h ../../util/osu_util_mpi.c ../../util/osu_util_mpi.h
 if CUDA_KERNELS
diff --git a/osu_benchmarks/mpi/pt2pt/osu_latency_mt.c b/osu_benchmarks/mpi/pt2pt/osu_latency_mt.c
index 29ee4b2..d8be9d5 100644
--- a/osu_benchmarks/mpi/pt2pt/osu_latency_mt.c
+++ b/osu_benchmarks/mpi/pt2pt/osu_latency_mt.c
@@ -1,4 +1,4 @@
-#define BENCHMARK "OSU MPI Multi-threaded Latency Test"
+#define BENCHMARK "OSU MPI%s Multi-threaded Latency Test"
 /*
  * Copyright (C) 2002-2019 the Network-Based Computing Laboratory
  * (NBCL), The Ohio State University. 
@@ -145,7 +145,7 @@ int main(int argc, char *argv[])
     if(myid == 0) {
         printf("# Number of Sender threads: %d \n# Number of Receiver threads: %d\n",num_threads_sender,options.num_threads );
     
-        fprintf(stdout, HEADER);
+        print_header(myid, LAT_MT);
         fprintf(stdout, "%-*s%*s\n", 10, "# Size", FIELD_WIDTH, "Latency (us)");
         fflush(stdout);
 
@@ -179,6 +179,7 @@ void * recv_thread(void *arg) {
     unsigned long align_size = sysconf(_SC_PAGESIZE);
     int size, i, val;
     int iter;
+    int myid;
     char * ret = NULL;
     char *s_buf, *r_buf;
     thread_tag_t *thread_id;
@@ -186,14 +187,16 @@ void * recv_thread(void *arg) {
     thread_id = (thread_tag_t *)arg;
     val = thread_id->id;
 
-    if (posix_memalign((void**)&s_buf, align_size, options.max_message_size)) {
-        fprintf(stderr, "Error allocating host memory\n");
-        *ret = '1';
-        return ret;
+    MPI_CHECK(MPI_Comm_rank(MPI_COMM_WORLD, &myid));
+
+    if (NONE != options.accel && init_accel()) {
+        fprintf(stderr, "Error initializing device\n");
+        exit(EXIT_FAILURE);
     }
 
-    if (posix_memalign((void**)&r_buf, align_size, options.max_message_size)) {
-        fprintf(stderr, "Error allocating host memory\n");
+    if (allocate_memory_pt2pt(&s_buf, &r_buf, myid)) {
+        /* Error allocating memory */
+        fprintf(stderr, "Error allocating memory on Rank %d, thread ID %d\n", myid, thread_id->id);
         *ret = '1';
         return ret;
     }
@@ -223,10 +226,8 @@ void * recv_thread(void *arg) {
         }  
 
         /* touch the data */
-        for(i = 0; i < size; i++) {
-            s_buf[i] = 'a';
-            r_buf[i] = 'b';
-        }
+        set_buffer_pt2pt(s_buf, myid, options.accel, 'a', size);
+        set_buffer_pt2pt(r_buf, myid, options.accel, 'b', size);
 
         for(i = val; i < (options.iterations + options.skip); i += options.num_threads) {
             if(options.sender_thread>1) {
@@ -244,8 +245,7 @@ void * recv_thread(void *arg) {
         iter++;
     }
 
-    free(r_buf);
-    free(s_buf);
+    free_memory(s_buf, r_buf, myid);
 
     sleep(1);
 
@@ -256,6 +256,7 @@ void * recv_thread(void *arg) {
 void * send_thread(void *arg) {
     unsigned long align_size = sysconf(_SC_PAGESIZE);
     int size, i, val, iter;
+    int myid;
     char *s_buf, *r_buf;
     double t = 0, latency;
     thread_tag_t *thread_id = (thread_tag_t *)arg;
@@ -263,14 +264,16 @@ void * send_thread(void *arg) {
 
     val = thread_id->id;
 
-    if (posix_memalign((void**)&s_buf, align_size, options.max_message_size)) {
-        fprintf(stderr, "Error allocating host memory\n");
-        *ret = '1';
-        return ret;
+    MPI_CHECK(MPI_Comm_rank(MPI_COMM_WORLD, &myid));
+
+    if (NONE != options.accel && init_accel()) {
+        fprintf(stderr, "Error initializing device\n");
+        exit(EXIT_FAILURE);
     }
 
-    if (posix_memalign((void**)&r_buf, align_size, options.max_message_size)) {
-        fprintf(stderr, "Error allocating host memory\n");
+    if (allocate_memory_pt2pt(&s_buf, &r_buf, myid)) {
+        /* Error allocating memory */
+        fprintf(stderr, "Error allocating memory on Rank %d, thread ID %d\n", myid, thread_id->id);
         *ret = '1';
         return ret;
     }
@@ -301,10 +304,9 @@ void * send_thread(void *arg) {
         }  
 
         /* touch the data */
-        for(i = 0; i < size; i++) {
-            s_buf[i] = 'a';
-            r_buf[i] = 'b';
-        }
+        set_buffer_pt2pt(s_buf, myid, options.accel, 'a', size);
+        set_buffer_pt2pt(r_buf, myid, options.accel, 'b', size);
+
         int flag_print=0;
         for(i = val; i < options.iterations + options.skip; i+=num_threads_sender) {
             if(i == options.skip) {
@@ -333,7 +335,7 @@ void * send_thread(void *arg) {
             t_end = MPI_Wtime ();
             t = t_end - t_start;
 
-            latency = (t) * 1.0e6 / (2.0 * options.iterations);
+            latency = (t) * 1.0e6 / (2.0 * options.iterations / num_threads_sender);
             fprintf(stdout, "%-*d%*.*f\n", 10, size, FIELD_WIDTH, FLOAT_PRECISION,
                     latency);
             fflush(stdout);
@@ -341,8 +343,7 @@ void * send_thread(void *arg) {
         iter++;
     }
 
-    free(r_buf);
-    free(s_buf);
+    free_memory(s_buf, r_buf, myid);
 
     return 0;
 }
diff --git a/osu_benchmarks/mpi/startup/Makefile.am b/osu_benchmarks/mpi/startup/Makefile.am
index 411964f..be57be8 100644
--- a/osu_benchmarks/mpi/startup/Makefile.am
+++ b/osu_benchmarks/mpi/startup/Makefile.am
@@ -1,6 +1,8 @@
 startupdir = $(pkglibexecdir)/mpi/startup
 startup_PROGRAMS = osu_init osu_hello
 
+AM_CFLAGS = -I${top_srcdir}/util
+
 if EMBEDDED_BUILD
     AM_LDFLAGS =
     AM_CPPFLAGS = -I$(top_builddir)/../src/include \
diff --git a/osu_benchmarks/openshmem/Makefile.am b/osu_benchmarks/openshmem/Makefile.am
index c242c4d..82529f9 100644
--- a/osu_benchmarks/openshmem/Makefile.am
+++ b/osu_benchmarks/openshmem/Makefile.am
@@ -8,7 +8,7 @@ openshmem_PROGRAMS = osu_oshm_get osu_oshm_put osu_oshm_put_mr \
 					 osu_oshm_get_nb osu_oshm_put_nb osu_oshm_put_overlap \
 					 osu_oshm_get_mr_nb osu_oshm_put_mr_nb 
 
-AM_CFLAGS = -I../util
+AM_CFLAGS = -I${top_srcdir}/util
 
 UTILITIES = ../util/osu_util.c ../util/osu_util.h ../util/osu_util_pgas.c ../util/osu_util_pgas.h
 
diff --git a/osu_benchmarks/openshmem/osu_oshm_get_mr_nb.c b/osu_benchmarks/openshmem/osu_oshm_get_mr_nb.c
index 24dc6e0..307af6f 100644
--- a/osu_benchmarks/openshmem/osu_oshm_get_mr_nb.c
+++ b/osu_benchmarks/openshmem/osu_oshm_get_mr_nb.c
@@ -210,7 +210,7 @@ main (int argc, char *argv[])
      * Allocate Memory
      */
     use_heap = !strncmp(argv[1], "heap", 10);
-    alignment = use_heap ? sysconf(_SC_PAGESIZE) : 4096;
+    alignment = use_heap ? sysconf(_SC_PAGESIZE) : MESSAGE_ALIGNMENT_MR;
     msg_buffer = allocate_memory(v.me, alignment, use_heap);
     aligned_buffer = align_memory((unsigned long)msg_buffer, alignment);
     memset(aligned_buffer, 0, MAX_MESSAGE_SIZE * OSHM_LOOP_LARGE_MR);
diff --git a/osu_benchmarks/openshmem/osu_oshm_put_mr.c b/osu_benchmarks/openshmem/osu_oshm_put_mr.c
index 3156049..a04a7f4 100644
--- a/osu_benchmarks/openshmem/osu_oshm_put_mr.c
+++ b/osu_benchmarks/openshmem/osu_oshm_put_mr.c
@@ -207,7 +207,7 @@ main (int argc, char *argv[])
      * Allocate Memory
      */
     use_heap = !strncmp(argv[1], "heap", 10);
-    alignment = use_heap ? sysconf(_SC_PAGESIZE) : 4096;
+    alignment = use_heap ? sysconf(_SC_PAGESIZE) : MESSAGE_ALIGNMENT_MR;
     msg_buffer = allocate_memory(v.me, alignment, use_heap);
     aligned_buffer = align_memory((unsigned long)msg_buffer, alignment);
     memset(aligned_buffer, 0, MAX_MESSAGE_SIZE * OSHM_LOOP_LARGE_MR);
diff --git a/osu_benchmarks/openshmem/osu_oshm_put_mr_nb.c b/osu_benchmarks/openshmem/osu_oshm_put_mr_nb.c
index abe32e6..84ba924 100644
--- a/osu_benchmarks/openshmem/osu_oshm_put_mr_nb.c
+++ b/osu_benchmarks/openshmem/osu_oshm_put_mr_nb.c
@@ -207,7 +207,7 @@ main (int argc, char *argv[])
      * Allocate Memory
      */
     use_heap = !strncmp(argv[1], "heap", 10);
-    alignment = use_heap ? sysconf(_SC_PAGESIZE) : 4096;
+    alignment = use_heap ? sysconf(_SC_PAGESIZE) : MESSAGE_ALIGNMENT_MR;
     msg_buffer = allocate_memory(v.me, alignment, use_heap);
     aligned_buffer = align_memory((unsigned long)msg_buffer, alignment);
     memset(aligned_buffer, 0, MAX_MESSAGE_SIZE * OSHM_LOOP_LARGE_MR);
diff --git a/osu_benchmarks/upc/Makefile.am b/osu_benchmarks/upc/Makefile.am
index 5acc171..ceb6f98 100644
--- a/osu_benchmarks/upc/Makefile.am
+++ b/osu_benchmarks/upc/Makefile.am
@@ -6,7 +6,7 @@ upc_PROGRAMS = osu_upc_memget osu_upc_memput osu_upc_all_barrier \
 	       osu_upc_all_gather_all osu_upc_all_gather osu_upc_all_reduce \
 	       osu_upc_all_scatter
 
-AM_CFLAGS = -I../util
+AM_CFLAGS = -I${top_srcdir}/util
 
 UTILITIES = ../util/osu_util.c ../util/osu_util.h  ../util/osu_util_pgas.c ../util/util_pgas.h
 
diff --git a/osu_benchmarks/upcxx/Makefile.am b/osu_benchmarks/upcxx/Makefile.am
index 35698df..5794923 100644
--- a/osu_benchmarks/upcxx/Makefile.am
+++ b/osu_benchmarks/upcxx/Makefile.am
@@ -5,7 +5,7 @@ upcxx_PROGRAMS = osu_upcxx_allgather osu_upcxx_alltoall osu_upcxx_bcast \
 	       osu_upcxx_gather osu_upcxx_reduce osu_upcxx_scatter \
 	       osu_upcxx_async_copy_get osu_upcxx_async_copy_put
 
-AM_CPPFLAGS = -I../util
+AM_CPPFLAGS = -I${top_srcdir}/util
 
 UTILITIES =  ../util/osu_util.c ../util/osu_util.h ../util/osu_util_pgas.c ../util/osu_util_pgas.h
 
diff --git a/osu_benchmarks/util/osu_util.c b/osu_benchmarks/util/osu_util.c
index 40eaf19..c5122b7 100644
--- a/osu_benchmarks/util/osu_util.c
+++ b/osu_benchmarks/util/osu_util.c
@@ -52,8 +52,7 @@ print_header(int rank, int full)
                     default:
                         if (options.subtype == BW && options.bench != MBW_MR) {
                             fprintf(stdout, "%-*s%*s\n", 10, "# Size", FIELD_WIDTH, "Bandwidth (MB/s)");
-                        }
-                        else {
+                        } else if (options.subtype == LAT) {
                             fprintf(stdout, "%-*s%*s\n", 10, "# Size", FIELD_WIDTH, "Latency (us)");
                         }
                         fflush(stdout);
@@ -351,7 +350,6 @@ int process_options (int argc, char *argv[])
         if (accel_enabled) {
             if (options.subtype == LAT_MT) {
                 optstring = "+:x:i:t:m:d:hv";
-                accel_enabled = 0;
             } else if (options.subtype == BW) {
                 optstring = "+:x:i:t:m:d:W:hv";
             } else {
diff --git a/osu_benchmarks/util/osu_util_mpi.c b/osu_benchmarks/util/osu_util_mpi.c
index 4ade21e..eb3ded4 100644
--- a/osu_benchmarks/util/osu_util_mpi.c
+++ b/osu_benchmarks/util/osu_util_mpi.c
@@ -1154,6 +1154,7 @@ int init_accel (void)
                 CUDA_CHECK(cudaGetDeviceCount(&dev_count));
                 dev_id = local_rank % dev_count;
             }
+            CUDA_CHECK(cudaSetDevice(dev_id));
 
             curesult = cuInit(0);
             if (curesult != CUDA_SUCCESS) {
@@ -1165,7 +1166,7 @@ int init_accel (void)
                 return 1;
             }
 
-            curesult = cuCtxCreate(&cuContext, 0, cuDevice);
+            curesult = cuDevicePrimaryCtxRetain(&cuContext, cuDevice);
             if (curesult != CUDA_SUCCESS) {
                 return 1;
             }
@@ -1200,11 +1201,8 @@ int cleanup_accel (void)
 #ifdef _ENABLE_CUDA_
         case MANAGED:
         case CUDA:
-            curesult = cuCtxDestroy(cuContext);
-
-            if (curesult != CUDA_SUCCESS) {
-                return 1;
-            }
+            /* reset the device to release all resources */
+            CUDA_CHECK(cudaDeviceReset());
             break;
 #endif
 #ifdef _ENABLE_OPENACC_
diff --git a/osu_benchmarks/util/osu_util_pgas.h b/osu_benchmarks/util/osu_util_pgas.h
index 66e67f6..dafdad2 100644
--- a/osu_benchmarks/util/osu_util_pgas.h
+++ b/osu_benchmarks/util/osu_util_pgas.h
@@ -14,7 +14,7 @@
 #define UPC_SKIP_SMALL 200
 #define UPC_SKIP_LARGE 10
 
-#define MYBUFSIZE_MR (MAX_MESSAGE_SIZE * OSHM_LOOP_LARGE_MR + MESSAGE_ALIGNMENT)
+#define MYBUFSIZE_MR (MAX_MESSAGE_SIZE * OSHM_LOOP_LARGE_MR + MESSAGE_ALIGNMENT_MR)
 #define SYNC_MODE (UPC_IN_ALLSYNC | UPC_OUT_ALLSYNC)
 
 void usage_oshm_pt2pt(int myid);
diff --git a/src/include/coll_shmem.h b/src/include/coll_shmem.h
index c2b997c..7cf2503 100644
--- a/src/include/coll_shmem.h
+++ b/src/include/coll_shmem.h
@@ -25,6 +25,8 @@
 #include <math.h>
 #include "mpidimpl.h"
 
+#include "mv2_arch_hca_detect.h"
+
 #if defined(_SMP_LIMIC_)
 #define LIMIC_COLL_NUM_COMM  128
 #endif /* #if defined(_SMP_LIMIC_) */ 
@@ -67,7 +69,7 @@
 #define SHMEM_AVAIL(a)                                    \
  ((a & 0xFFFFFFFFFFFFFFF8) - SHMEM_CACHE_LINE_SIZE)
 
-#elif defined(_X86_64_)
+#elif defined(__x86_64__)
 
 #define SHMEM_CACHE_LINE_SIZE 128
 #define SHMEM_ALIGN(a)                                    \
@@ -149,6 +151,7 @@ struct allgatherv_tuning{
     int switchp;
 };
 
+
 #define BCAST_LEN 20
 #define SHMEM_BCAST_FLAGS	1024
 /*
@@ -165,6 +168,7 @@ extern int mv2_shmem_coll_num_procs;
 extern int mv2_shmem_coll_spin_count;
 extern int mv2_enable_shmem_collectives;
 int is_shmem_collectives_enabled();
+extern int mv2_two_level_comm_early_init_threshold;
 
 extern struct coll_runtime mv2_coll_param;
 void MPIDI_CH3I_SHMEM_COLL_GetShmemBuf(int, int, int, void**);
@@ -173,6 +177,8 @@ int create_allgather_comm(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
 
 #define MV2_DEFAULT_COLL_SKIP_TABLE_THRESHOLD 1024
 
+extern int mv2_allred_use_ring;
+
 extern int mv2_coll_skip_table_threshold;
 extern int mv2_enable_skip_tuning_table_search;
 extern int mv2_tune_parameter;
@@ -196,8 +202,11 @@ extern int mv2_enable_ireduce;
 extern int mv2_enable_ireduce_scatter;
 extern int mv2_enable_iallreduce;
 
+/* Enable/Disable MPI_T pvar timers */
+extern int mv2_enable_pvar_timer;
+
 /* Use for collective tuning based on arch detection*/
-int MV2_collectives_arch_init(int heterogeneity);
+int MV2_collectives_arch_init(int heterogeneity, struct coll_info *collective_tuning_info);
 void MV2_collectives_arch_finalize();
 
 /* Use for allgather_osu.c */
@@ -279,6 +288,7 @@ extern int  mv2_alltoall_inplace_old;
 extern int  mv2_use_scatter_dest_alltoallv;
 
 extern int  mv2_allreduce_red_scat_allgather_algo_threshold;
+extern int  mv2_allreduce_ring_algo_threshold;
 extern int  mv2_allgather_ring_algo_threshold;
 extern int  mv2_allgather_cyclic_algo_threshold;
 extern int  mv2_redscat_cyclic_algo_threshold;
@@ -526,6 +536,16 @@ extern int MPIDI_CH3I_SHMEM_Helper_fn(MPIDI_PG_t * pg, int local_id, char **file
                                 char *prefix, int *fd, size_t file_size);
 #endif /* defined(CHANNEL_MRAIL_GEN2) || defined(CHANNEL_NEMESIS_IB) */
 
+static inline int Cyclic_Rank_list_mapper(MPID_Comm * comm_ptr, int idx)
+{
+    return comm_ptr->dev.ch.rank_list[idx];
+};
+
+static inline int Bunch_Rank_list_mapper(MPID_Comm * comm_ptr, int idx)
+{
+    return idx;
+};
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_num_shmem_coll_calls);
 
 int mv2_set_bcast_collective_algorithm();
diff --git a/src/include/mpiimpl.h b/src/include/mpiimpl.h
index 7446980..eedb00e 100644
--- a/src/include/mpiimpl.h
+++ b/src/include/mpiimpl.h
@@ -1317,6 +1317,10 @@ typedef struct MPID_Comm {
     MPIR_Comm_map_t *mapper_head;
     MPIR_Comm_map_t *mapper_tail;
 
+#if ENABLE_PVAR_MV2
+    unsigned long long *sub_comm_counters;
+#endif
+
   /* Other, device-specific information */
 #ifdef MPID_DEV_COMM_DECL
     MPID_DEV_COMM_DECL
diff --git a/src/include/mpimem.h b/src/include/mpimem.h
index fb6f85d..8a6e8cf 100644
--- a/src/include/mpimem.h
+++ b/src/include/mpimem.h
@@ -295,7 +295,7 @@ extern char *strdup( const char * );
 #endif /* USE_MEMORY_TRACING */
 
 #ifdef _OSU_MVAPICH_
-#   if ENABLE_PVAR_MV2
+#   if ENABLE_PVAR_MEM
 #       undef MPIU_Malloc
 #       undef MPIU_Calloc
 #       undef MPIU_Free
@@ -322,7 +322,7 @@ void MPIT_shmdt (void * ptr, int lineno, char const * filename);
 #       define MPIU_Memalign(a,b,c) MPIT_memalign(a, b, c, __LINE__, __FILE__)
 #       define MPIU_Memalign_Free(a) MPIT_memalign_free(a, __LINE__, __FILE__)
 #       define MPIU_shmdt(a)        MPIT_shmdt(a, __LINE__, __FILE__)
-#   else /* ENABLE_PVAR_MV2 */
+#   else /* ENABLE_PVAR_MEM */
 /*
  * Forward declaration of function used to call the real free function
  */
@@ -330,7 +330,7 @@ void Real_Free (void * ptr);
 #       define MPIU_Memalign(a,b,c) posix_memalign(a, b, c)
 #       define MPIU_Memalign_Free(a) Real_Free(a)
 #       define MPIU_shmdt(a) shmdt(a)
-#   endif /* ENABLE_PVAR_MV2 */
+#   endif /* ENABLE_PVAR_MEM */
 #endif /* _OSU_MVAPICH_ */
 
 /* Memory allocation macros. See document. */
diff --git a/src/include/mpit.h b/src/include/mpit.h
index 8429304..ea60183 100644
--- a/src/include/mpit.h
+++ b/src/include/mpit.h
@@ -311,6 +311,11 @@ static inline cvar_table_entry_t * LOOKUP_CVAR_BY_NAME(const char* cvar_name)
 #define MPIR_T_PVAR_ULONG2_COUNTER_DECL_STATIC(MODULE, name_) \
     PVAR_GATED_DECL(MODULE, MPIR_T_PVAR_ULONG2_COUNTER_DECL_STATIC_impl(name_))
 
+#define MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL(MODULE, name_) \
+      PVAR_GATED_DECL(MODULE, MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_impl(name_))  
+#define MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN(MODULE, name_) \
+      PVAR_GATED_DECL(MODULE, MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN_impl(name_))  \
+
 #define MPIR_T_PVAR_UINT_COUNTER_DECL_EXTERN(MODULE, name_) \
     PVAR_GATED_DECL(MODULE, MPIR_T_PVAR_UINT_COUNTER_DECL_EXTERN_impl(name_))
 #define MPIR_T_PVAR_ULONG_COUNTER_DECL_EXTERN(MODULE, name_) \
@@ -331,14 +336,25 @@ static inline cvar_table_entry_t * LOOKUP_CVAR_BY_NAME(const char* cvar_name)
     MPIR_T_PVAR_COUNTER_GET_impl(name_)
 #define MPIR_T_PVAR_COUNTER_INC(MODULE, name_, inc_) \
     PVAR_GATED_ACTION(MODULE, MPIR_T_PVAR_COUNTER_INC_impl(name_, inc_))
+#define MPIR_T_PVAR_COMM_COUNTER_INC(MODULE,name_,inc_,comm) \
+    PVAR_GATED_ACTION(MODULE, MPIR_T_PVAR_COMM_COUNTER_INC_impl(name_, inc_,comm))
+
 #define MPIR_T_PVAR_COUNTER_ADDR(name_) \
     MPIR_T_PVAR_COUNTER_ADDR_impl(name_)
 
+#define MPIR_T_PVAR_COUNTER_BUCKET_INC(MODULE, name_,count,datatype) \
+        PVAR_GATED_ACTION(MODULE, MPIR_T_PVAR_COUNTER_BUCKET_INC_impl(name_, count, datatype))
+
 #define MPIR_T_PVAR_COUNTER_REGISTER_STATIC(MODULE, dtype_, name_, \
             verb_, bind_, flags_, cat_, desc_) \
     PVAR_GATED_ACTION(MODULE, MPIR_T_PVAR_COUNTER_REGISTER_STATIC_impl(dtype_, name_, \
             verb_, bind_, flags_, cat_, desc_))
 
+#define MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC(MODULE, dtype_, name_, count_, \
+            verb_, bind_, flags_, cat_, desc_) \
+    PVAR_GATED_ACTION(MODULE,MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC_impl(dtype_, name_, count_, \
+            verb_, bind_, flags_, cat_, desc_));
+
 #define MPIR_T_PVAR_COUNTER_REGISTER_DYNAMIC(MODULE, dtype_, name_, \
             addr_, count_, verb_, bind_, flags_, get_value_, get_count_, cat_, desc_) \
     PVAR_GATED_ACTION(MODULE, MPIR_T_PVAR_COUNTER_REGISTER_DYNAMIC_impl(dtype_, name_, \
diff --git a/src/include/mpitimpl.h b/src/include/mpitimpl.h
index 652637c..a70a021 100644
--- a/src/include/mpitimpl.h
+++ b/src/include/mpitimpl.h
@@ -215,6 +215,9 @@ typedef struct {
 
     /* Description of the pvar */
     const char *desc;
+
+    //Index (used only if pvar is at sub communicator level)
+    int sub_comm_index;
 } pvar_table_entry_t;
 
 /*
@@ -644,6 +647,17 @@ extern void MPIR_T_PVAR_REGISTER_impl(
 /* MPI_T_PVAR_CLASS_COUNTER (continuous or not)
  */
 
+typedef struct pvar_bucket
+{
+int min;
+int max;
+} pvar_bucket;
+
+#define counter_pvar_array_size 32
+
+extern pvar_bucket counter_pvar_buckets[counter_pvar_array_size];
+extern int num_counter_pvar_buckets;
+
 /* Declaration -- static pvar */
 #define MPIR_T_PVAR_UINT_COUNTER_DECL_impl(name_) \
     unsigned PVAR_COUNTER_##name_;
@@ -659,6 +673,9 @@ extern void MPIR_T_PVAR_REGISTER_impl(
 #define MPIR_T_PVAR_ULONG2_COUNTER_DECL_STATIC_impl(name_) \
     static unsigned long long PVAR_COUNTER_##name_;
 
+#define MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_impl(name_) \
+    unsigned long long *PVAR_COUNTER_##name_;
+
 #define MPIR_T_PVAR_UINT_COUNTER_DECL_EXTERN_impl(name_) \
     extern unsigned PVAR_COUNTER_##name_;
 #define MPIR_T_PVAR_ULONG_COUNTER_DECL_EXTERN_impl(name_) \
@@ -666,6 +683,9 @@ extern void MPIR_T_PVAR_REGISTER_impl(
 #define MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN_impl(name_) \
     extern unsigned long long PVAR_COUNTER_##name_;
 
+#define MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN_impl(name_) \
+    extern unsigned long long *PVAR_COUNTER_##name_;
+
 /* Interfaces through pointer or name */
 #define MPIR_T_PVAR_COUNTER_INIT_VAR_impl(ptr_) \
     do { *(ptr_) = 0; } while (0)
@@ -681,9 +701,52 @@ extern void MPIR_T_PVAR_REGISTER_impl(
     MPIR_T_PVAR_COUNTER_GET_VAR_impl(&PVAR_COUNTER_##name_)
 #define MPIR_T_PVAR_COUNTER_INC_impl(name_, inc_) \
     MPIR_T_PVAR_COUNTER_INC_VAR_impl(&PVAR_COUNTER_##name_, inc_)
+
+#define QUOTE(name) #name
+
+#if ENABLE_PVAR_MV2
+#define MPIR_T_PVAR_COMM_COUNTER_INC_impl(name_, inc_,comm) \
+    do { \
+    name2index_hash_t *hash_entry;\
+    pvar_table_entry_t *pvar;\
+    int pvar_idx;\
+    int seq = MPI_T_PVAR_CLASS_COUNTER - MPIR_T_PVAR_CLASS_FIRST;\
+    char *name = QUOTE(name_);\
+    HASH_FIND_STR(pvar_hashs[seq],name, hash_entry);\
+    if (hash_entry != NULL) {\
+        pvar_idx = hash_entry->idx;\
+        pvar = (pvar_table_entry_t *)utarray_eltptr(pvar_table, pvar_idx);\
+        if(comm->sub_comm_counters!=NULL)\
+           comm->sub_comm_counters[pvar->sub_comm_index]+=inc_;\
+    }\
+    } while(0)  
+#else
+   #define MPIR_T_PVAR_COMM_COUNTER_INC_impl(name_, inc_,comm)
+#endif
+
 #define MPIR_T_PVAR_COUNTER_ADDR_impl(name_) \
     (&PVAR_COUNTER_##name_)
 
+#define MPIR_T_PVAR_COUNTER_BUCKET_INC_impl(name_, count, datatype)\
+        do {\
+        int _pSize = 0;                                                                          \
+        MPID_Datatype_get_size_macro(datatype, _pSize);                                          \
+        int msgsize = count * _pSize;                                                            \
+        if (msgsize < 0) {                                                                       \
+            msgsize = 0;                                                                         \
+        }                                                                                        \
+        int index = -1;                                                                          \
+        int i = 0;                                                                               \
+        while(i < num_counter_pvar_buckets && index == -1){                                      \
+           if((msgsize <= counter_pvar_buckets[i].max && msgsize >=counter_pvar_buckets[i].min)  \
+             || (counter_pvar_buckets[i].max == -1 && msgsize >= counter_pvar_buckets[i].min))   \
+           { index = i; }                                                                        \
+           i++;                                                                                  \
+        }                                                                                        \
+        if(index!=-1)                                                                            \
+        MPIR_T_PVAR_COUNTER_ARRAY_INC_impl(name_, index, 1);                                     \
+        }while(0) 
+
 /* Registration AND initialization to zero for static pvar.  */
 #define MPIR_T_PVAR_COUNTER_REGISTER_STATIC_impl(dtype_, name_, \
             verb_, bind_, flags_, cat_, desc_) \
@@ -700,6 +763,18 @@ extern void MPIR_T_PVAR_REGISTER_impl(
             addr_, 1, MPI_T_ENUM_NULL, verb_, bind_, flags_, NULL, NULL, cat_, desc_); \
     } while (0)
 
+/*Wrapper to aid Registration for bucket pvars (uses the dynamic pvar interface in the end). */
+#define MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC_impl(dtype_, name_, count_, \
+            verb_, bind_, flags_, cat_, desc_) \
+   do {\
+    /*TODO : use MPI defined datatypes*/\
+    PVAR_COUNTER_##name_ = (unsigned long long *)MPIU_Malloc(count_ * sizeof(unsigned long long));\
+    int i = 0;\
+    for(i = 0; i < count_;i++) { PVAR_COUNTER_##name_[i]=0; }\
+    MPIR_T_PVAR_COUNTER_REGISTER_DYNAMIC_impl(dtype_, name_, \
+              PVAR_COUNTER_##name_, count_, verb_, bind_, flags_,NULL, NULL, cat_, desc_);\
+   }while(0)
+
 /* Registration for dynamic pvar w/ or w/o callback. Init is left to users */
 #define MPIR_T_PVAR_COUNTER_REGISTER_DYNAMIC_impl(dtype_, name_, \
             addr_, count_, verb_, bind_, flags_, get_value_, get_count_, cat_, desc_) \
@@ -713,6 +788,11 @@ extern void MPIR_T_PVAR_REGISTER_impl(
             get_count_, cat_, desc_); \
     } while (0)
 
+#define MPIR_T_PVAR_COUNTER_BUCKET_DYNAMIC_FREE(name_) \
+    if(PVAR_COUNTER_##name_) {                         \
+        MPIU_Free(PVAR_COUNTER_##name_);               \
+    }
+
 /* Declaration of a counter array -- static pvar */
 #define MPIR_T_PVAR_UINT_COUNTER_ARRAY_DECL_impl(name_, len_) \
     unsigned PVAR_COUNTER_##name_[len_];
@@ -757,7 +837,7 @@ extern void MPIR_T_PVAR_REGISTER_impl(
 #define MPIR_T_PVAR_COUNTER_ARRAY_GET_impl(name_, idx_) \
     MPIR_T_PVAR_COUNTER_ARRAY_GET_VAR_impl(PVAR_COUNTER_##name_, idx_)
 #define MPIR_T_PVAR_COUNTER_ARRAY_INC_impl(ptr_, idx_, inc_) \
-    MPIR_T_PVAR_COUNTER_ARRAY_INC_VAR_impl(PVAR_COUNTER_##name_, idx_, inc_)
+    MPIR_T_PVAR_COUNTER_ARRAY_INC_VAR_impl(PVAR_COUNTER_##ptr_, idx_, inc_)
 
 /* Registration AND initialization to zero for static counter array  */
 #define MPIR_T_PVAR_COUNTER_ARRAY_REGISTER_STATIC_impl(dtype_, name_, \
@@ -1412,6 +1492,27 @@ static inline int MPIR_T_is_initialized() {
     #define MPIR_PVAR_INC(_mpicoll, _algo, _operation, _count, _datatype)
 #endif /*ENABLE_PVAR_MV2*/
 
+
+/* Helper functions to start/end MV2 PVAR timers */
+
+#if ENABLE_PVAR_MV2
+    #define MPIR_TIMER_START(_optype,_op,_algo)                                                  \
+    do {                                                                                         \
+        if(mv2_enable_pvar_timer)                                                                \
+             MPIR_T_PVAR_TIMER_START(MV2,mv2_##_optype##_timer_##_op##_##_algo);                 \
+    } while (0)                                                                                  
+    #define MPIR_TIMER_END(_optype,_op,_algo)                                                    \
+    do {                                                                                         \
+        if(mv2_enable_pvar_timer)                                                                \
+             MPIR_T_PVAR_TIMER_END(MV2,mv2_##_optype##_timer_##_op##_##_algo);                   \
+    } while(0)
+#else /*ENABLE_PVAR_MV2*/
+    #define MPIR_TIMER_START(_optype,_op,_algo)                                                  
+    #define MPIR_TIMER_END(_optype,_op,_algo)
+#endif /*ENABLE_PVAR_MV2*/
+
+
+
 /* A special strncpy to return strings in behavior defined by MPI_T */
 extern void MPIR_T_strncpy(char *dst, const char *src, int *len);
 
diff --git a/src/include/mv2_mpit.h b/src/include/mv2_mpit.h
index 19205c0..7a05387 100644
--- a/src/include/mv2_mpit.h
+++ b/src/include/mv2_mpit.h
@@ -13,6 +13,7 @@
 
 void MPIT_REGISTER_MV2_VARIABLES (void);
 void MPIT_MEM_REGISTER_PVARS (void);
+void MPIT_FREE_MV2_VARIABLES (void);
 
 void * MPIT_malloc (size_t, int, char const *);
 void * MPIT_calloc (size_t, size_t, int, char const *);
diff --git a/src/mpi/coll/allgather_cuda_osu.c b/src/mpi/coll/allgather_cuda_osu.c
index 1cb91a1..0052985 100644
--- a/src/mpi/coll/allgather_cuda_osu.c
+++ b/src/mpi/coll/allgather_cuda_osu.c
@@ -47,6 +47,7 @@ int MPIR_Allgather_cuda_intra_MV2(const void *sendbuf,
                              MPI_Datatype recvtype,
                              MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,cuda);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -64,6 +65,7 @@ int MPIR_Allgather_cuda_intra_MV2(const void *sendbuf,
     cudaError_t cudaerr;
 
     if (((sendcount == 0) && (sendbuf != MPI_IN_PLACE)) || (recvcount == 0)) {
+        MPIR_TIMER_END(coll,allgather,cuda);
         return MPI_SUCCESS;
     }
 
@@ -428,6 +430,7 @@ int MPIR_Allgather_cuda_intra_MV2(const void *sendbuf,
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,cuda);
     return (mpi_errno);
 }
 /* end:nested */
diff --git a/src/mpi/coll/allgather_osu.c b/src/mpi/coll/allgather_osu.c
index 7ba133c..9304694 100644
--- a/src/mpi/coll/allgather_osu.c
+++ b/src/mpi/coll/allgather_osu.c
@@ -18,6 +18,7 @@
 #include "mpiimpl.h"
 
 #include "datatype.h"
+#include "common_tuning.h"
 #include "coll_shmem.h"
 #include "allgather_tuning.h"
 extern struct coll_runtime mv2_coll_param;
@@ -25,6 +26,18 @@ extern int allgather_tuning_algo;
 extern int allgather_algo_num;
 extern int use_2lvl_allgather;
 
+
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_rd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_bruck);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_ring);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_directspread);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_gather_bcast);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_2lvl_nonblocked);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_2lvl_ring_nonblocked);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_2lvl_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgather_2lvl_ring);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allgather_rd_allgather_comm);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allgather_rd);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allgather_bruck);
@@ -189,6 +202,7 @@ int MPIR_Allgather_Direct_MV2(
           void *recvbuf, int recvcnt, MPI_Datatype recvtype,
     MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,direct);
     int i;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -319,6 +333,7 @@ int MPIR_Allgather_Direct_MV2(
 
     MPIU_CHKLMEM_FREEALL();
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,direct);
     return (mpi_errno);
 }
 
@@ -336,6 +351,7 @@ int MPIR_Allgather_DirectSpread_MV2(
           void *recvbuf, int recvcnt, MPI_Datatype recvtype,
     MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,directspread);
     int i;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -468,6 +484,7 @@ int MPIR_Allgather_DirectSpread_MV2(
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,directspread);
     return (mpi_errno);
 }
 
@@ -483,6 +500,7 @@ int MPIR_Allgather_RD_MV2(const void *sendbuf,
                           MPI_Datatype recvtype, MPID_Comm * comm_ptr,
                           MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,rd);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -843,6 +861,7 @@ int MPIR_Allgather_RD_MV2(const void *sendbuf,
 #endif                          /* MPID_HAS_HETERO */
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,rd);
     return (mpi_errno);
 }
 
@@ -858,7 +877,7 @@ int MPIR_Allgather_Bruck_MV2(const void *sendbuf,
                              MPI_Datatype recvtype, MPID_Comm * comm_ptr,
                              MPIR_Errflag_t *errflag)
 {
-
+    MPIR_TIMER_START(coll,allgather,bruck);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -985,6 +1004,7 @@ int MPIR_Allgather_Bruck_MV2(const void *sendbuf,
     MPIU_Free(tmp);
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,bruck);
     return (mpi_errno);
 }
 
@@ -1000,7 +1020,7 @@ int MPIR_Allgather_Ring_MV2(const void *sendbuf,
                             MPI_Datatype recvtype, MPID_Comm * comm_ptr,
                             MPIR_Errflag_t *errflag)
 {
-
+    MPIR_TIMER_START(coll,allgather,ring);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1058,6 +1078,7 @@ int MPIR_Allgather_Ring_MV2(const void *sendbuf,
     }
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,ring);
     return (mpi_errno);
 }
 
@@ -1071,7 +1092,7 @@ int MPIR_Allgather_gather_bcast_MV2(
           void *recvbuf, int recvcount, MPI_Datatype recvtype,
     MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
-
+    MPIR_TIMER_START(coll,allgather,gather_bcast);
     int comm_size;
     int mpi_errno = MPI_SUCCESS;
     int gather_bcast_root = -1;
@@ -1102,6 +1123,7 @@ int MPIR_Allgather_gather_bcast_MV2(
     }
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,gather_bcast);
     return (mpi_errno);
 }
 
@@ -1309,6 +1331,7 @@ int MPIR_2lvl_Allgather_nonblocked_MV2(
           void *recvbuf, int recvcnt, MPI_Datatype recvtype,
     MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,2lvl_nonblocked);
     int i;
     int mpi_errno = MPI_SUCCESS;
 
@@ -1518,6 +1541,7 @@ int MPIR_2lvl_Allgather_nonblocked_MV2(
     }
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,2lvl_nonblocked);
     return (mpi_errno);
 }
 
@@ -1534,6 +1558,7 @@ int MPIR_2lvl_Allgather_Ring_nonblocked_MV2(
           void *recvbuf, int recvcount, MPI_Datatype recvtype,
     MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,2lvl_ring_nonblocked);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int i;
@@ -1608,6 +1633,7 @@ int MPIR_2lvl_Allgather_Ring_nonblocked_MV2(
     }
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,2lvl_ring_nonblocked);
     return (mpi_errno);
 }
 
@@ -1626,6 +1652,7 @@ int MPIR_2lvl_Allgather_Direct_MV2(
           void *recvbuf, int recvcnt, MPI_Datatype recvtype,
     MPID_Comm *comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,2lvl_direct);
     int i, j;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1901,6 +1928,7 @@ int MPIR_2lvl_Allgather_Direct_MV2(
     MPIU_CHKLMEM_FREEALL();
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,2lvl_direct);
     return (mpi_errno);
 }
 
@@ -1920,6 +1948,7 @@ int MPIR_2lvl_Allgather_Ring_MV2(
           void *recvbuf, int recvcnt, MPI_Datatype recvtype,
     MPID_Comm *comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgather,2lvl_ring);
     int i, j;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -2201,6 +2230,7 @@ int MPIR_2lvl_Allgather_Ring_MV2(
     MPIU_CHKLMEM_FREEALL();
 
   fn_fail:
+    MPIR_TIMER_END(coll,allgather,2lvl_ring);
     return (mpi_errno);
 }
 
@@ -2337,14 +2367,10 @@ int MPIR_Allgather_index_tuned_intra_MV2(const void *sendbuf, int sendcount, MPI
                 mpi_errno = MPIR_2lvl_Allgather_Ring_nonblocked_MV2(sendbuf, sendcount, sendtype, recvbuf, recvcount, recvtype, comm_ptr, errflag);
                 goto fn_cuda_exit;
         }
-        do {
-            if (local_size == mv2_allgather_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_allgather_indexed_num_ppn_conf);
+
+        FIND_PPN_INDEX  (allgather, local_size,conf_index, partial_sub_ok)
+
+
     }
 
     if (partial_sub_ok != 1) {
@@ -2657,14 +2683,11 @@ int MPIR_Allgather_MV2(const void *sendbuf, int sendcount, MPI_Datatype sendtype
             conf_index = 0;
             goto conf_check_end;
         }
-        do {
-            if (local_size == mv2_allgather_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_allgather_num_ppn_conf);
+        
+
+        FIND_PPN_INDEX  (allgather, local_size,conf_index, partial_sub_ok)
+
+        
     }
 
     if (partial_sub_ok != 1) {
diff --git a/src/mpi/coll/allgather_tuning.c b/src/mpi/coll/allgather_tuning.c
index 6b32b52..dd51633 100644
--- a/src/mpi/coll/allgather_tuning.c
+++ b/src/mpi/coll/allgather_tuning.c
@@ -26,7 +26,7 @@ int mv2_allgather_indexed_num_ppn_conf = 1;
 int *mv2_size_allgather_indexed_tuning_table = NULL;
 mv2_allgather_indexed_tuning_table **mv2_allgather_indexed_thresholds_table = NULL;
 
-int MV2_set_allgather_tuning_table(int heterogeneity)
+int MV2_set_allgather_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
   int agg_table_sum = 0;
   int i;
@@ -482,14 +482,89 @@ force_default_tables:
       MV2_COLL_TUNING_FINISH_TABLE (allgather)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (allgather, 7)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allgather)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (allgather, 6)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allgather) 
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (allgather, 8)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 28, 3, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 28, 3, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 32, 4, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 32, 4, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allgather)  
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Mayer */
+      MV2_COLL_TUNING_START_TABLE  (allgather, 8)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allgather)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
       /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (allgather, 5)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (allgather)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -510,12 +585,14 @@ force_default_tables:
       int pg_size = MPIDI_PG_Get_size(MPIDI_Process.my_pg);
       if (pg_size > 64) goto force_default_tables;
 
-      MV2_COLL_TUNING_START_TABLE  (allgather, 8)
+      MV2_COLL_TUNING_START_TABLE  (allgather, 9)
       MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allgather, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (allgather, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -599,14 +676,42 @@ force_default_tables:
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
                 MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /* RI2 table */
-      MV2_COLL_TUNING_START_TABLE  (allgather, 3)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  4, GEN2__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  4, GEN2_CMA__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  4, GEN2__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 2,  4, GEN2_CMA__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allgather, 28, 4, GEN2__RI2__28PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 28, 4, GEN2_CMA__RI2__28PPN)
-      MV2_COLL_TUNING_FINISH_TABLE (allgather)
+       MV2_COLL_TUNING_START_TABLE  (allgather, 6)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  4, GEN2__RI2__1PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  4, GEN2_CMA__RI2__1PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  5, GEN2__RI2__2PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 2,  5, GEN2_CMA__RI2__2PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  5, GEN2__RI2__4PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 4,  5, GEN2_CMA__RI2__4PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  5, GEN2__RI2__8PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 8,  5, GEN2_CMA__RI2__8PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 16,  5, GEN2__RI2__16PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 16,  5, GEN2_CMA__RI2__16PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 28, 5, GEN2__RI2__28PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 28, 5, GEN2_CMA__RI2__28PPN)
+       MV2_COLL_TUNING_FINISH_TABLE (allgather)
+       
+      
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* RI2 table */
+       MV2_COLL_TUNING_START_TABLE  (allgather, 6)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 1,  4, GEN2__RI2__1PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 1,  4, GEN2_CMA__RI2__1PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 2,  5, GEN2__RI2__2PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 2,  5, GEN2_CMA__RI2__2PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 4,  5, GEN2__RI2__4PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 4,  5, GEN2_CMA__RI2__4PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 8,  5, GEN2__RI2__8PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 8,  5, GEN2_CMA__RI2__8PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 16,  5, GEN2__RI2__16PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 16,  5, GEN2_CMA__RI2__16PPN)
+       MV2_COLL_TUNING_ADD_CONF     (allgather, 28, 5, GEN2__RI2__28PPN)
+       MV2_COLL_TUNING_ADD_CONF_CMA (allgather, 28, 5, GEN2_CMA__RI2__28PPN)
+       MV2_COLL_TUNING_FINISH_TABLE (allgather)
+       
+      
     }
     else {
       /*Stampede Table*/
diff --git a/src/mpi/coll/allgather_tuning.h b/src/mpi/coll/allgather_tuning.h
index 9a6a7ee..d1eee97 100644
--- a/src/mpi/coll/allgather_tuning.h
+++ b/src/mpi/coll/allgather_tuning.h
@@ -192,7 +192,7 @@ int MPIR_2lvl_Allgather_Ring_MV2(const void *sendbuf,
 								MPIR_Errflag_t *errflag);
 
 /* Architecture detection tuning */
-int MV2_set_allgather_tuning_table(int heterogeneity);
+int MV2_set_allgather_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by allgather tuning table*/
 void MV2_cleanup_allgather_tuning_table();
diff --git a/src/mpi/coll/allgatherv_osu.c b/src/mpi/coll/allgatherv_osu.c
index a60c24e..1d3321c 100644
--- a/src/mpi/coll/allgatherv_osu.c
+++ b/src/mpi/coll/allgatherv_osu.c
@@ -19,6 +19,11 @@
 #include "coll_shmem.h"
 #include "allgatherv_tuning.h"
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgatherv_rec_doubling);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgatherv_bruck);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgatherv_ring);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allgatherv_ring_cyclic);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allgatherv_rec_doubling);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allgatherv_bruck);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allgatherv_ring);
@@ -100,6 +105,7 @@ int MPIR_Allgatherv_Rec_Doubling_MV2(const void *sendbuf,
                                      MPI_Datatype recvtype,
                                      MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgatherv,rec_doubling);
     int comm_size, rank, j, i;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -570,6 +576,7 @@ int MPIR_Allgatherv_Rec_Doubling_MV2(const void *sendbuf,
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
 
+    MPIR_TIMER_END(coll,allgatherv,rec_doubling);      
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -588,6 +595,7 @@ int MPIR_Allgatherv_Bruck_MV2(const void *sendbuf,
                               MPI_Datatype recvtype,
                               MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgatherv,bruck);
     int comm_size, rank, j, i;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -740,6 +748,7 @@ int MPIR_Allgatherv_Bruck_MV2(const void *sendbuf,
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
 
+    MPIR_TIMER_END(coll,allgatherv,bruck);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -759,6 +768,7 @@ int MPIR_Allgatherv_Ring_MV2(const void *sendbuf,
                              MPI_Datatype recvtype,
                              MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgatherv,ring);
     int comm_size, rank, i, left, right, total_count;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -922,6 +932,7 @@ int MPIR_Allgatherv_Ring_MV2(const void *sendbuf,
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
 
+    MPIR_TIMER_END(coll,allgatherv,ring);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -944,6 +955,7 @@ int MPIR_Allgatherv_Ring_Cyclic_MV2(const void *sendbuf,
                              MPI_Datatype recvtype,
                              MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allgatherv,ring_cyclic);
     int comm_size, rank, i, total_count;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1116,6 +1128,7 @@ int MPIR_Allgatherv_Ring_Cyclic_MV2(const void *sendbuf,
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
 
+    MPIR_TIMER_END(coll,allgatherv,ring_cyclic);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
diff --git a/src/mpi/coll/allgatherv_tuning.c b/src/mpi/coll/allgatherv_tuning.c
index 91b5dca..eb05a6b 100644
--- a/src/mpi/coll/allgatherv_tuning.c
+++ b/src/mpi/coll/allgatherv_tuning.c
@@ -24,7 +24,7 @@ enum {
 int mv2_size_allgatherv_tuning_table = 0;
 mv2_allgatherv_tuning_table *mv2_allgatherv_thresholds_table = NULL;
 
-int MV2_set_allgatherv_tuning_table(int heterogeneity)
+int MV2_set_allgatherv_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
 #ifndef CHANNEL_PSM
 #ifdef CHANNEL_MRAIL_GEN2
diff --git a/src/mpi/coll/allgatherv_tuning.h b/src/mpi/coll/allgatherv_tuning.h
index c9bd7cf..348dbc7 100644
--- a/src/mpi/coll/allgatherv_tuning.h
+++ b/src/mpi/coll/allgatherv_tuning.h
@@ -98,7 +98,7 @@ extern int MPIR_Allgatherv_Ring_Cyclic_MV2(const void *sendbuf,
                              MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
 
 /* Architecture detection tuning */
-int MV2_set_allgatherv_tuning_table(int heterogeneity);
+int MV2_set_allgatherv_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by allgatherv tuning table*/
 void MV2_cleanup_allgatherv_tuning_table();
diff --git a/src/mpi/coll/allreduce_osu.c b/src/mpi/coll/allreduce_osu.c
index 9f8c246..f34cfc9 100644
--- a/src/mpi/coll/allreduce_osu.c
+++ b/src/mpi/coll/allreduce_osu.c
@@ -18,6 +18,7 @@
 
 #include "mpiimpl.h"
 #include "coll_shmem.h"
+#include "common_tuning.h"
 #include "allreduce_tuning.h"
 #include "bcast_tuning.h"
 #ifdef MRAIL_GEN2_INTERFACE
@@ -30,6 +31,16 @@
 extern int mv2_sharp_tuned_msg_size;
 #endif
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_sharp);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_shm_rd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_shm_rs);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_shm_intra);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_intra_p2p);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_2lvl);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_shmem);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_mcast);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_allreduce_reduce_scatter_allgather_colls);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_sharp);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_shm_rd);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_shm_rs);
@@ -39,6 +50,7 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_2lvl);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_shmem);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_mcast);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_reduce_scatter_allgather_colls);
+MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_subcomm);
 
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_pt2pt_rd_bytes_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_allreduce_pt2pt_rs_bytes_send);
@@ -67,6 +79,8 @@ int (*MV2_Allreduce_intra_function)(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)=NULL;
 
+static int (*MPIR_Rank_list_mapper)(MPID_Comm *, int)=NULL;
+
 #if defined (_SHARP_SUPPORT_)
 #undef FCNAME
 #define FCNAME "MPIR_Sharp_Allreduce_MV2"
@@ -75,6 +89,7 @@ int (*MV2_Allreduce_intra_function)(const void *sendbuf,
 int MPIR_Sharp_Allreduce_MV2 (const void *sendbuf, void *recvbuf, int count,
                         MPI_Datatype datatype, MPI_Op op, MPID_Comm * comm_ptr, int *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,sharp);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_sharp, 1);
 
     int mpi_errno = MPI_SUCCESS;
@@ -140,6 +155,8 @@ fn_exit:
     MPIU_Free(dt_size);
     if (is_inplace)
         MPIU_Free(reduce_spec.sbuf_desc.buffer.ptr);
+
+    MPIR_TIMER_END(coll,allreduce,sharp);  
     return (mpi_errno);
 
 fn_fail:
@@ -230,6 +247,7 @@ int MPIR_Allreduce_pt2pt_rd_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,shm_rd);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_shm_rd, 1);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
@@ -246,6 +264,7 @@ int MPIR_Allreduce_pt2pt_rd_MV2(const void *sendbuf,
     MPIU_CHKLMEM_DECL(3);
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,allreduce,shm_rd);
         return MPI_SUCCESS;
     }
 
@@ -280,7 +299,7 @@ int MPIR_Allreduce_pt2pt_rd_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else {
 #endif
-           if ((op_ptr->language == MPID_LANG_C)) {
+           if (op_ptr->language == MPID_LANG_C) {
                uop = (MPI_User_function *) op_ptr->function.c_function;
            } else {
                uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -477,6 +496,7 @@ int MPIR_Allreduce_pt2pt_rd_MV2(const void *sendbuf,
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,allreduce,shm_rd);
     return (mpi_errno);
 
   fn_fail:
@@ -498,6 +518,7 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,shm_rs);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_shm_rs, 1);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
@@ -515,6 +536,7 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
     MPIU_CHKLMEM_DECL(3);
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,allreduce,shm_rs);
         return MPI_SUCCESS;
     }
 
@@ -529,7 +551,6 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
     MPIU_THREADPRIV_FIELD(op_errno) = 0;
 
     comm_size = comm_ptr->local_size;
-    rank = comm_ptr->rank;
 
     if (HANDLE_GET_KIND(op) == HANDLE_KIND_BUILTIN) {
         is_commutative = 1;
@@ -548,7 +569,7 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else {
 #endif
-            if ((op_ptr->language == MPID_LANG_C)) {
+            if (op_ptr->language == MPID_LANG_C) {
                 uop = (MPI_User_function *) op_ptr->function.c_function;
             } else {
                 uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -558,6 +579,16 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
 #endif
     }
 
+    if (comm_ptr->dev.ch.rank_list == NULL || is_commutative != 1) {
+        rank = comm_ptr->rank;
+        MPIR_Rank_list_mapper = &Bunch_Rank_list_mapper;
+    } else {
+        /* my index on rank_list */
+        rank = comm_ptr->dev.ch.rank_list_index;
+        MPIU_Assert(rank >= 0);
+        MPIR_Rank_list_mapper = &Cyclic_Rank_list_mapper;
+    }
+
     /* need to allocate temporary buffer to store incoming data */
     MPIR_Type_get_true_extent_impl(datatype, &true_lb, &true_extent);
     MPID_Datatype_get_extent_macro(datatype, extent);
@@ -593,7 +624,7 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
         if (rank % 2 == 0) {
             /* even */
             MPIR_PVAR_INC(allreduce, pt2pt_rs, send, count, datatype);
-            mpi_errno = MPIC_Send(recvbuf, count, datatype, rank + 1,
+            mpi_errno = MPIC_Send(recvbuf, count, datatype, MPIR_Rank_list_mapper(comm_ptr, rank + 1),
                                      MPIR_ALLREDUCE_TAG, comm_ptr, errflag);
             if (mpi_errno) {
                 /* for communication errors, just record the error but continue */
@@ -609,7 +640,7 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
         } else {
             /* odd */
             MPIR_PVAR_INC(allreduce, pt2pt_rs, recv, count, datatype);
-            mpi_errno = MPIC_Recv(tmp_buf, count, datatype, rank - 1,
+            mpi_errno = MPIC_Recv(tmp_buf, count, datatype, MPIR_Rank_list_mapper(comm_ptr, rank - 1),
                                      MPIR_ALLREDUCE_TAG, comm_ptr,
                                      MPI_STATUS_IGNORE, errflag);
             if (mpi_errno) {
@@ -662,8 +693,8 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
                 MPIR_PVAR_INC(allreduce, pt2pt_rs, send, count, datatype);
                 MPIR_PVAR_INC(allreduce, pt2pt_rs, recv, count, datatype);
                 mpi_errno = MPIC_Sendrecv(recvbuf, count, datatype,
-                                             dst, MPIR_ALLREDUCE_TAG,
-                                             tmp_buf, count, datatype, dst,
+                                             MPIR_Rank_list_mapper(comm_ptr, dst), MPIR_ALLREDUCE_TAG,
+                                             tmp_buf, count, datatype, MPIR_Rank_list_mapper(comm_ptr, dst),
                                              MPIR_ALLREDUCE_TAG, comm_ptr,
                                              MPI_STATUS_IGNORE, errflag);
 
@@ -763,10 +794,10 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
                 mpi_errno = MPIC_Sendrecv((char *) recvbuf +
                                              disps[send_idx] * extent,
                                              send_cnt, datatype,
-                                             dst, MPIR_ALLREDUCE_TAG,
+                                             MPIR_Rank_list_mapper(comm_ptr, dst), MPIR_ALLREDUCE_TAG,
                                              (char *) tmp_buf +
                                              disps[recv_idx] * extent,
-                                             recv_cnt, datatype, dst,
+                                             recv_cnt, datatype, MPIR_Rank_list_mapper(comm_ptr, dst),
                                              MPIR_ALLREDUCE_TAG, comm_ptr,
                                              MPI_STATUS_IGNORE, errflag);
                 if (mpi_errno) {
@@ -833,10 +864,10 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
                 mpi_errno = MPIC_Sendrecv((char *) recvbuf +
                                              disps[send_idx] * extent,
                                              send_cnt, datatype,
-                                             dst, MPIR_ALLREDUCE_TAG,
+                                             MPIR_Rank_list_mapper(comm_ptr, dst), MPIR_ALLREDUCE_TAG,
                                              (char *) recvbuf +
                                              disps[recv_idx] * extent,
-                                             recv_cnt, datatype, dst,
+                                             recv_cnt, datatype, MPIR_Rank_list_mapper(comm_ptr, dst),
                                              MPIR_ALLREDUCE_TAG, comm_ptr,
                                              MPI_STATUS_IGNORE, errflag);
                 if (mpi_errno) {
@@ -862,12 +893,12 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
         if (rank % 2) {     /* odd */
             MPIR_PVAR_INC(allreduce, pt2pt_rs, send, count, datatype);
             mpi_errno = MPIC_Send(recvbuf, count,
-                                     datatype, rank - 1,
+                                     datatype, MPIR_Rank_list_mapper(comm_ptr, rank - 1),
                                      MPIR_ALLREDUCE_TAG, comm_ptr, errflag);
         } else {            /* even */
             MPIR_PVAR_INC(allreduce, pt2pt_rs, recv, count, datatype);
             mpi_errno = MPIC_Recv(recvbuf, count,
-                                  datatype, rank + 1,
+                                  datatype, MPIR_Rank_list_mapper(comm_ptr, rank + 1),
                                   MPIR_ALLREDUCE_TAG, comm_ptr,
                                   MPI_STATUS_IGNORE, errflag);
         }
@@ -888,6 +919,7 @@ int MPIR_Allreduce_pt2pt_rs_MV2(const void *sendbuf,
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,allreduce,shm_rs);
     return (mpi_errno);
 
   fn_fail:
@@ -987,7 +1019,7 @@ int MPIR_Allreduce_pt2pt_old_MV2(const void *sendbuf,
                 is_cxx_uop = 1;
             } else {
 #endif
-                if ((op_ptr->language == MPID_LANG_C)) {
+                if (op_ptr->language == MPID_LANG_C) {
                     uop = (MPI_User_function *) op_ptr->function.c_function;
                 } else {
                     uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -1335,6 +1367,7 @@ int MPIR_Allreduce_reduce_shmem_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,shm_intra);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_shm_intra, 1);
     int mpi_errno = MPI_SUCCESS;
     int i = 0, is_commutative = 0;
@@ -1354,6 +1387,7 @@ int MPIR_Allreduce_reduce_shmem_MV2(const void *sendbuf,
     int shmem_comm_rank;
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,allreduce,shm_intra);
         return MPI_SUCCESS;
     }
 
@@ -1392,7 +1426,7 @@ int MPIR_Allreduce_reduce_shmem_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else
 #endif                          /* defined(HAVE_CXX_BINDING) */
-        if ((op_ptr->language == MPID_LANG_C)) {
+        if (op_ptr->language == MPID_LANG_C) {
             uop = (MPI_User_function *) op_ptr->function.c_function;
         } else {
             uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -1453,6 +1487,7 @@ int MPIR_Allreduce_reduce_shmem_MV2(const void *sendbuf,
     }
 
   fn_exit:
+    MPIR_TIMER_END(coll,allreduce,shm_intra);
     return (mpi_errno);
 
   fn_fail:
@@ -1466,6 +1501,7 @@ int MPIR_Allreduce_reduce_p2p_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,intra_p2p);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_intra_p2p, 1);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1475,6 +1511,7 @@ int MPIR_Allreduce_reduce_p2p_MV2(const void *sendbuf,
     int local_rank = -1, local_size = 0;
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,allreduce,intra_p2p);
         return MPI_SUCCESS;
     }
 
@@ -1524,6 +1561,7 @@ int MPIR_Allreduce_reduce_p2p_MV2(const void *sendbuf,
         }
     }
 
+    MPIR_TIMER_END(coll,allreduce,intra_p2p);
     return (mpi_errno);
 }
 
@@ -1534,6 +1572,7 @@ int MPIR_Allreduce_two_level_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,2lvl);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_2lvl, 1);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1544,6 +1583,7 @@ int MPIR_Allreduce_two_level_MV2(const void *sendbuf,
     int local_rank = -1, local_size = 0;
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,allreduce,2lvl);
         return MPI_SUCCESS;
     }
 
@@ -1660,6 +1700,7 @@ int MPIR_Allreduce_two_level_MV2(const void *sendbuf,
     }
 
   fn_exit:
+    MPIR_TIMER_END(coll,allreduce,2lvl);
     return (mpi_errno);
 
   fn_fail:
@@ -1673,6 +1714,7 @@ int MPIR_Allreduce_shmem_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,shmem);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_shmem, 1);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1719,7 +1761,7 @@ int MPIR_Allreduce_shmem_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else
 #endif                          /* defined(HAVE_CXX_BINDING) */
-        if ((op_ptr->language == MPID_LANG_C)) {
+        if (op_ptr->language == MPID_LANG_C) {
             uop = (MPI_User_function *) op_ptr->function.c_function;
         } else {
             uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -1858,6 +1900,7 @@ int MPIR_Allreduce_shmem_MV2(const void *sendbuf,
     }
 
   fn_exit:
+    MPIR_TIMER_END(coll,allreduce,shmem);
     return (mpi_errno);
 
   fn_fail:
@@ -1876,6 +1919,7 @@ int MPIR_Allreduce_mcst_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,mcast);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_mcast, 1);
     MPI_Aint true_lb, true_extent;
    /*We use reduce (at rank =0) followed by mcst-bcast to implement the 
@@ -2002,6 +2046,7 @@ int MPIR_Allreduce_mcst_MV2(const void *sendbuf,
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,allreduce,mcast);
     return (mpi_errno);
 
   fn_fail:
@@ -2404,6 +2449,12 @@ int MPIR_Allreduce_index_tuned_intra_MV2(const void *sendbuf,
             conf_index = 0;
             goto conf_check_end;
         }
+        if (mv2_allred_use_ring == 1 && mv2_allreduce_ring_algo_threshold <= nbytes && local_size <= 4) {
+            /* flat ring-based Allreduce */
+            return MPIR_Allreduce_pt2pt_ring_wrapper_MV2(sendbuf, recvbuf, count, datatype,
+                op, comm_ptr, errflag, comm_size, sendtype_size);
+        }
+
         if (likely(mv2_enable_shmem_allreduce && mv2_enable_skip_tuning_table_search && (nbytes <= mv2_coll_skip_table_threshold))) {
             /* for small messages, force Shmem + RD */
             MV2_Allreduce_intra_function = MPIR_Allreduce_reduce_shmem_MV2;
@@ -2412,20 +2463,14 @@ int MPIR_Allreduce_index_tuned_intra_MV2(const void *sendbuf,
             goto skip_tuning_tables;
         }
 
+        FIND_PPN_INDEX  (allreduce, local_size,conf_index, partial_sub_ok)
 
-        do {
-            if (local_size == mv2_allreduce_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_allreduce_indexed_num_ppn_conf);
     }
 
     if (partial_sub_ok != 1) {
         conf_index = mv2_allreduce_indexed_num_ppn_conf/2;
     }
+
  
     if ((comm_ptr->dev.ch.allgather_comm_ok != 0 &&
           comm_ptr->dev.ch.is_blocked == 0 &&
@@ -2664,6 +2709,7 @@ int MPIR_Allreduce_pt2pt_reduce_scatter_allgather_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,allreduce,reduce_scatter_allgather_colls);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_reduce_scatter_allgather_colls, 1);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
@@ -2674,6 +2720,7 @@ int MPIR_Allreduce_pt2pt_reduce_scatter_allgather_MV2(const void *sendbuf,
     MPIU_CHKLMEM_DECL(3);
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,allreduce,reduce_scatter_allgather_colls);
         return MPI_SUCCESS;
     }
 
@@ -2792,6 +2839,7 @@ int MPIR_Allreduce_pt2pt_reduce_scatter_allgather_MV2(const void *sendbuf,
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,allreduce,reduce_scatter_allgather_colls);
     return (mpi_errno);
 
   fn_fail:
@@ -2956,13 +3004,12 @@ int MPIR_Allreduce_MV2(const void *sendbuf,
                        MPI_Datatype datatype,
                        MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_T_PVAR_COMM_COUNTER_INC(MV2,mv2_coll_allreduce_subcomm,1,comm_ptr);
     int mpi_errno = MPI_SUCCESS;
     if (count == 0) {
         return MPI_SUCCESS;
     }
 
-
-
     if(mv2_use_old_allreduce == 1){
         mpi_errno = MPIR_Allreduce_old_MV2(sendbuf, recvbuf, count,
                                         datatype, op, comm_ptr, errflag);
@@ -2982,3 +3029,463 @@ int MPIR_Allreduce_MV2(const void *sendbuf,
 
 
 
+#undef FCNAME
+#define FCNAME "MPIR_Allreduce_pt2pt_ring_wrapper_MV2"
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+int MPIR_Allreduce_pt2pt_ring_wrapper_MV2(const void *sendbuf, void *recvbuf,
+        int count, MPI_Datatype datatype, MPI_Op op, MPID_Comm * comm_ptr,
+        MPIR_Errflag_t *errflag, int comm_size, int sendtype_size) {
+
+    int mpi_errno;
+    int chunk           = count / comm_size;
+    int new_count       = chunk * comm_size;
+    int remaining_count = count - new_count;
+
+    if (sendbuf != MPI_IN_PLACE)
+        mpi_errno = MPIR_Allreduce_pt2pt_ring_MV2(sendbuf, recvbuf, new_count, datatype,
+            op, comm_ptr, errflag);
+    else  
+        mpi_errno = MPIR_Allreduce_pt2pt_ring_inplace_MV2(sendbuf, recvbuf, new_count, datatype,
+            op, comm_ptr, errflag);
+
+    if (mpi_errno != MPI_SUCCESS || (remaining_count == 0)) 
+        return mpi_errno;
+    
+    /* now Allreduce the remaining count */ 
+    if (sendbuf != MPI_IN_PLACE)
+        return MPIR_Allreduce_pt2pt_rd_MV2(sendbuf+new_count*sendtype_size,
+                recvbuf+new_count*sendtype_size, remaining_count, datatype,
+                op, comm_ptr, errflag);
+    else 
+        return MPIR_Allreduce_pt2pt_rd_MV2(MPI_IN_PLACE,
+                recvbuf+new_count*sendtype_size, remaining_count, datatype,
+                op, comm_ptr, errflag);
+}
+
+
+
+/* This is flat ring-allreduce  allreduce */
+#undef FCNAME
+#define FCNAME "MPIR_Allreduce_pt2pt_ring_MV2"
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+int MPIR_Allreduce_pt2pt_ring_MV2(const void *sendbuf,
+                             void *recvbuf,
+                             int count,
+                             MPI_Datatype datatype,
+                             MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
+{
+//    MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_ring_colls, 1);
+    int comm_size, rank;
+    int mpi_errno = MPI_SUCCESS;
+    int i, *cnts, *disps;
+    MPI_Aint true_lb, true_extent, extent;
+    void *tmp_buf;
+    MPI_User_function *uop;
+    MPID_Op *op_ptr;
+    int is_commutative;
+#ifdef HAVE_CXX_BINDING
+    int is_cxx_uop = 0;
+#endif
+    MPIU_THREADPRIV_DECL;
+    MPIU_CHKLMEM_DECL(3);
+
+    if (count == 0) {
+        return MPI_SUCCESS;
+    }
+
+    MPIU_THREADPRIV_GET;
+
+    /* check if multiple threads are calling this collective function */
+    MPIDU_ERR_CHECK_MULTIPLE_THREADS_ENTER(comm_ptr);
+
+    /* homogeneous */
+
+    /* set op_errno to 0. stored in perthread structure */
+    MPIU_THREADPRIV_FIELD(op_errno) = 0;
+
+    comm_size = comm_ptr->local_size;
+    rank = comm_ptr->rank;
+
+    /* Get the operator and check whether it is commutative or not */
+    if (HANDLE_GET_KIND(op) == HANDLE_KIND_BUILTIN) {
+        is_commutative = 1;
+        /* get the function by indexing into the op table */
+        uop = MPIR_Op_table[op % 16 - 1];
+    } else {
+        MPID_Op_get_ptr(op, op_ptr);
+        if (op_ptr->kind == MPID_OP_USER_NONCOMMUTE) {
+            is_commutative = 0;
+        } else {
+            is_commutative = 1;
+        }
+
+#if defined(HAVE_CXX_BINDING)
+        if (op_ptr->language == MPID_LANG_CXX) {
+            uop = (MPI_User_function *) op_ptr->function.c_function;
+            is_cxx_uop = 1;
+        } else
+#endif                          /* defined(HAVE_CXX_BINDING) */
+        if (op_ptr->language == MPID_LANG_C) {
+            uop = (MPI_User_function *) op_ptr->function.c_function;
+        } else {
+            uop = (MPI_User_function *) op_ptr->function.f77_function;
+        }
+    }
+    int context_id = (comm_ptr->comm_kind == MPID_INTRACOMM) ?
+                MPID_CONTEXT_INTRA_COLL : MPID_CONTEXT_INTER_COLL;
+
+    MPIR_Type_get_true_extent_impl(datatype, &true_lb, &true_extent);
+    MPID_Datatype_get_extent_macro(datatype, extent);
+
+    int type_size = MPIR_MAX(extent, true_extent);
+
+
+    if (count % comm_size != 0 || sendbuf == MPI_IN_PLACE ||
+            count < comm_size || !is_commutative) {
+        mpi_errno = MPIR_Allreduce_pt2pt_rs_MV2(sendbuf, recvbuf, count, datatype,
+                op, comm_ptr, errflag);
+        return mpi_errno;
+    }
+    //memset(recvbuf, 0, type_size*count);
+
+    MPIU_Assert((count * type_size) % comm_size == 0);
+    int chunk_size  = (count * type_size) / comm_size;
+    int chunk_count = count / comm_size;
+
+    {
+        /* do a reduce-scatter followed by allgather */
+        MPIU_Assert(sendbuf != MPI_IN_PLACE);
+
+        int i = 0;
+        int left    = (rank - 1 + comm_size) % comm_size;
+        int right   = (rank + 1) % comm_size;
+        void * recv_chunk = NULL, * send_chunk = NULL, * comp_chunk = NULL;
+        MPID_Request *recv_req_ptr = NULL, *send_req_ptr = NULL;
+
+        //fprintf(stderr, "starting the  main loop\n");
+        for (i = 1; i < comm_size; i++) {
+
+            MPID_Request *recv_req_ptr = NULL, *send_req_ptr = NULL;
+
+            /* iteration 1: read chunk murank - 1 from myrank - 1 and do compute locally, at the
+             * same time, send chunk myrank + 1 to myrank + 1 */
+
+            if (i == 1 && sendbuf != MPI_IN_PLACE)
+                send_chunk  = sendbuf + ((rank - (i-1) + comm_size) % comm_size)*chunk_size;
+            else 
+                send_chunk  = recvbuf + ((rank - (i-1) + comm_size) % comm_size)*chunk_size;
+
+            recv_chunk  = recvbuf + ((rank - i + comm_size) % comm_size)*chunk_size;
+
+            comp_chunk  = sendbuf + ((rank - i + comm_size) % comm_size)*chunk_size;
+
+            /*
+            PRINT_DEBUG(1, "i = %d, sending chunk=%d to rank=%d and receiving chunk=%d from rank=%d and doing compute on chunk=%d \n",
+                   i, ((rank - (i-1) + comm_size) % comm_size), right, ((rank -
+                            i + comm_size) % comm_size), left, ((rank - i +
+                                comm_size) % comm_size));
+            */
+            mpi_errno = MPID_Irecv(recv_chunk, chunk_count, datatype, left, 11, comm_ptr,
+                    context_id, &recv_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            mpi_errno = MPID_Isend(send_chunk, chunk_count, datatype, right, 11,
+                                   comm_ptr, context_id, &send_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            mpi_errno = MPIC_Wait(recv_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POPFATAL(mpi_errno);
+
+            /* now do the computation with some MPI_Test (TODO) in between */
+#if defined(HAVE_CXX_BINDING)
+            if (is_cxx_uop) {
+                (*MPIR_Process.cxx_call_op_fn) (comp_chunk, recv_chunk,
+                                                chunk_count, datatype, uop);
+            } else {
+#endif                          /* defined(HAVE_CXX_BINDING) */
+                (*uop) (comp_chunk, recv_chunk, &chunk_count, &datatype);
+#if defined(HAVE_CXX_BINDING)
+            }
+#endif
+
+            mpi_errno = MPIC_Wait(send_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            MPID_Request_release(send_req_ptr);
+            MPID_Request_release(recv_req_ptr);
+
+          //  fprintf(stderr, "finished it = %d \n");
+        }
+
+
+
+        /*
+        if (rank == 0) {
+        PRINT_DEBUG(1, "Final Results count = %d\n", count);
+        for (i = 0; i < count; i++) {
+            fprintf(stderr, "%d ", ((float*)recvbuf)[i]);
+        }
+        PRINT_DEBUG(1, "\n");
+        }
+        */
+           /* Allgather on recvbuf with  one elemented  shifted to right */
+          // MPIR_Allgather_MV2(MPI_IN_PLACE, chunk_count, datatype, recvbuf, chunk_count,
+            //       datatype, comm_ptr, errflag);
+           
+
+        for (i = 1; i < comm_size; i++) {
+        
+            recv_chunk = ((rank - (i-1) + comm_size)%comm_size)*chunk_size + recvbuf;
+            mpi_errno = MPID_Irecv(recv_chunk, chunk_count, datatype, left, 11, comm_ptr,
+                    context_id, &recv_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            send_chunk = ((rank - (i-2) + comm_size)%comm_size)*chunk_size + recvbuf;
+            mpi_errno = MPID_Isend(send_chunk, chunk_count, datatype, right, 11,
+                                   comm_ptr, context_id, &send_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            mpi_errno = MPIC_Wait(recv_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POPFATAL(mpi_errno);
+            mpi_errno = MPIC_Wait(send_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            MPID_Request_release(send_req_ptr);
+            MPID_Request_release(recv_req_ptr);
+        }
+    }
+
+
+
+
+    /* check if multiple threads are calling this collective function */
+    MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
+
+    if (MPIU_THREADPRIV_FIELD(op_errno)) {
+        mpi_errno = MPIU_THREADPRIV_FIELD(op_errno);
+    }
+
+  fn_exit:
+    MPIU_CHKLMEM_FREEALL();
+    return (mpi_errno);
+
+  fn_fail:
+    goto fn_exit;
+}
+
+
+/* This is flat ring-allreduce  allreduce with MPI_INPLACE for sendbuf */
+#undef FCNAME
+#define FCNAME "MPIR_Allreduce_pt2pt_ring_MV2"
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+int MPIR_Allreduce_pt2pt_ring_inplace_MV2(const void *sendbuf,
+                             void *recvbuf,
+                             int count,
+                             MPI_Datatype datatype,
+                             MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
+{
+//    MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_allreduce_ring_colls, 1);
+    int comm_size, rank;
+    int mpi_errno = MPI_SUCCESS;
+    int i, *cnts, *disps;
+    MPI_Aint true_lb, true_extent, extent;
+    void *tmp_buf;
+    MPI_User_function *uop;
+    MPID_Op *op_ptr;
+    int is_commutative;
+#ifdef HAVE_CXX_BINDING
+    int is_cxx_uop = 0;
+#endif
+    MPIU_THREADPRIV_DECL;
+    MPIU_CHKLMEM_DECL(3);
+
+    if (count == 0) {
+        return MPI_SUCCESS;
+    }
+
+    MPIU_THREADPRIV_GET;
+
+    /* check if multiple threads are calling this collective function */
+    MPIDU_ERR_CHECK_MULTIPLE_THREADS_ENTER(comm_ptr);
+
+    /* homogeneous */
+
+    /* set op_errno to 0. stored in perthread structure */
+    MPIU_THREADPRIV_FIELD(op_errno) = 0;
+
+    comm_size = comm_ptr->local_size;
+    rank = comm_ptr->rank;
+
+    /* Get the operator and check whether it is commutative or not */
+    if (HANDLE_GET_KIND(op) == HANDLE_KIND_BUILTIN) {
+        is_commutative = 1;
+        /* get the function by indexing into the op table */
+        uop = MPIR_Op_table[op % 16 - 1];
+    } else {
+        MPID_Op_get_ptr(op, op_ptr);
+        if (op_ptr->kind == MPID_OP_USER_NONCOMMUTE) {
+            is_commutative = 0;
+        } else {
+            is_commutative = 1;
+        }
+
+#if defined(HAVE_CXX_BINDING)
+        if (op_ptr->language == MPID_LANG_CXX) {
+            uop = (MPI_User_function *) op_ptr->function.c_function;
+            is_cxx_uop = 1;
+        } else
+#endif                          /* defined(HAVE_CXX_BINDING) */
+        if (op_ptr->language == MPID_LANG_C) {
+            uop = (MPI_User_function *) op_ptr->function.c_function;
+        } else {
+            uop = (MPI_User_function *) op_ptr->function.f77_function;
+        }
+    }
+    int context_id = (comm_ptr->comm_kind == MPID_INTRACOMM) ?
+                MPID_CONTEXT_INTRA_COLL : MPID_CONTEXT_INTER_COLL;
+
+    MPIR_Type_get_true_extent_impl(datatype, &true_lb, &true_extent);
+    MPID_Datatype_get_extent_macro(datatype, extent);
+
+    int type_size = MPIR_MAX(extent, true_extent);
+
+
+    if (count % comm_size != 0 || sendbuf == MPI_IN_PLACE ||
+            count < comm_size || !is_commutative) {
+        mpi_errno = MPIR_Allreduce_pt2pt_rs_MV2(sendbuf, recvbuf, count, datatype,
+                op, comm_ptr, errflag);
+        return mpi_errno;
+    }
+    //memset(recvbuf, 0, type_size*count);
+
+    MPIU_Assert((count * type_size) % comm_size == 0);
+    int chunk_size  = (count * type_size) / comm_size;
+    int chunk_count = count / comm_size;
+    
+
+    /* TODO: try to do this malloc only once for entire job run */
+    void  * temp_buf = MPIU_Malloc(chunk_size);
+
+    {
+        /* do a reduce-scatter followed by allgather */
+        MPIU_Assert(sendbuf == MPI_IN_PLACE);
+
+        int i = 0;
+        int left    = (rank - 1 + comm_size) % comm_size;
+        int right   = (rank + 1) % comm_size;
+        void * recv_chunk = NULL, * send_chunk = NULL, * comp_chunk = NULL;
+        MPID_Request *recv_req_ptr = NULL, *send_req_ptr = NULL;
+
+        //fprintf(stderr, "starting the  main loop\n");
+        for (i = 1; i < comm_size; i++) {
+
+            MPID_Request *recv_req_ptr = NULL, *send_req_ptr = NULL;
+
+            /* iteration 1: read chunk murank - 1 from myrank - 1 and do compute locally, at the
+             * same time, send chunk myrank + 1 to myrank + 1 */
+
+            send_chunk  = recvbuf + ((rank - (i-1) + comm_size) % comm_size)*chunk_size;
+
+            //recv_chunk  = recvbuf + ((rank - i + comm_size) % comm_size)*chunk_size;
+            recv_chunk = temp_buf;
+
+            //comp_chunk  = sendbuf + ((rank - i + comm_size) % comm_size)*chunk_size;
+            comp_chunk  = recvbuf + ((rank - i + comm_size) % comm_size)*chunk_size;
+
+            /*
+            PRINT_DEBUG(1, "i = %d, sending chunk=%d to rank=%d and receiving chunk=%d from rank=%d and doing compute on chunk=%d \n",
+                   i, ((rank - (i-1) + comm_size) % comm_size), right, ((rank -
+                            i + comm_size) % comm_size), left, ((rank - i +
+                                comm_size) % comm_size));
+            */
+            mpi_errno = MPID_Irecv(recv_chunk, chunk_count, datatype, left, 11, comm_ptr,
+                    context_id, &recv_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            mpi_errno = MPID_Isend(send_chunk, chunk_count, datatype, right, 11,
+                                   comm_ptr, context_id, &send_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            mpi_errno = MPIC_Wait(recv_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POPFATAL(mpi_errno);
+
+            /* now do the computation with some MPI_Test (TODO) in between */
+#if defined(HAVE_CXX_BINDING)
+            if (is_cxx_uop) {
+                (*MPIR_Process.cxx_call_op_fn) (recv_chunk, comp_chunk, 
+                                                chunk_count, datatype, uop);
+            } else {
+#endif                          /* defined(HAVE_CXX_BINDING) */
+                (*uop) (recv_chunk, comp_chunk, &chunk_count, &datatype);
+#if defined(HAVE_CXX_BINDING)
+            }
+#endif
+
+            mpi_errno = MPIC_Wait(send_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            MPID_Request_release(send_req_ptr);
+            MPID_Request_release(recv_req_ptr);
+
+          //  fprintf(stderr, "finished it = %d \n");
+        }
+
+
+
+        /*
+        if (rank == 0) {
+        PRINT_DEBUG(1, "Final Results count = %d\n", count);
+        for (i = 0; i < count; i++) {
+            fprintf(stderr, "%d ", ((float*)recvbuf)[i]);
+        }
+        PRINT_DEBUG(1, "\n");
+        }
+        */
+           /* Allgather on recvbuf with  one elemented  shifted to right */
+          // MPIR_Allgather_MV2(MPI_IN_PLACE, chunk_count, datatype, recvbuf, chunk_count,
+            //       datatype, comm_ptr, errflag);
+           
+
+        for (i = 1; i < comm_size; i++) {
+        
+            recv_chunk = ((rank - (i-1) + comm_size)%comm_size)*chunk_size + recvbuf;
+            mpi_errno = MPID_Irecv(recv_chunk, chunk_count, datatype, left, 11, comm_ptr,
+                    context_id, &recv_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            send_chunk = ((rank - (i-2) + comm_size)%comm_size)*chunk_size + recvbuf;
+            mpi_errno = MPID_Isend(send_chunk, chunk_count, datatype, right, 11,
+                                   comm_ptr, context_id, &send_req_ptr);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            mpi_errno = MPIC_Wait(recv_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POPFATAL(mpi_errno);
+            mpi_errno = MPIC_Wait(send_req_ptr, errflag);
+            if (mpi_errno) MPIR_ERR_POP(mpi_errno);
+
+            MPID_Request_release(send_req_ptr);
+            MPID_Request_release(recv_req_ptr);
+        }
+    }
+
+
+
+
+    /* check if multiple threads are calling this collective function */
+    MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
+
+    if (MPIU_THREADPRIV_FIELD(op_errno)) {
+        mpi_errno = MPIU_THREADPRIV_FIELD(op_errno);
+    }
+
+  fn_exit:
+    MPIU_CHKLMEM_FREEALL();
+    MPIU_Free(temp_buf);
+    return (mpi_errno);
+
+  fn_fail:
+    goto fn_exit;
+}
diff --git a/src/mpi/coll/allreduce_tuning.c b/src/mpi/coll/allreduce_tuning.c
index 6648569..661d68d 100644
--- a/src/mpi/coll/allreduce_tuning.c
+++ b/src/mpi/coll/allreduce_tuning.c
@@ -24,7 +24,7 @@ int mv2_allreduce_indexed_num_ppn_conf = 1;
 int *mv2_size_allreduce_indexed_tuning_table = NULL;
 mv2_allreduce_indexed_tuning_table **mv2_allreduce_indexed_thresholds_table = NULL;
 
-int MV2_set_allreduce_tuning_table(int heterogeneity)
+int MV2_set_allreduce_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
 
   if (mv2_use_indexed_tuning || mv2_use_indexed_allreduce_tuning) {
@@ -584,14 +584,89 @@ int MV2_set_allreduce_tuning_table(int heterogeneity)
       MV2_COLL_TUNING_FINISH_TABLE (allreduce)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 7)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allreduce)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 6)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allreduce)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 8)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 4, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 16, 4, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 28, 3, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 28, 3, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 32, 3, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 32, 3, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 56, 2, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 56, 2, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allreduce)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      // Mayer
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 8)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allreduce)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
     /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (allreduce, 5)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (allreduce)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -606,13 +681,15 @@ int MV2_set_allreduce_tuning_table(int heterogeneity)
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 				    MV2_ARCH_IBM_POWER9, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /* Sierra Table */
-      MV2_COLL_TUNING_START_TABLE  (allreduce, 8)
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 9)
       MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -698,13 +775,37 @@ int MV2_set_allreduce_tuning_table(int heterogeneity)
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 		MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /*RI2 Table*/
-      MV2_COLL_TUNING_START_TABLE  (allreduce, 3)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  4, GEN2__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  4, GEN2_CMA__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  4, GEN2__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  4, GEN2_CMA__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF     (allreduce, 28, 4, GEN2__RI2__28PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 28, 4, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 6)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  5, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  5, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  6, GEN2__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  6, GEN2_CMA__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 28, 6, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 28, 6, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (allreduce)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+		MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /*RI2 Table*/
+      MV2_COLL_TUNING_START_TABLE  (allreduce, 6)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 1,  5, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 1,  5, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 2,  6, GEN2__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 2,  6, GEN2_CMA__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (allreduce, 28, 6, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (allreduce, 28, 6, GEN2_CMA__RI2__28PPN)
       MV2_COLL_TUNING_FINISH_TABLE (allreduce)
     }
     else {
diff --git a/src/mpi/coll/allreduce_tuning.h b/src/mpi/coll/allreduce_tuning.h
index 943ecec..8a90d6e 100644
--- a/src/mpi/coll/allreduce_tuning.h
+++ b/src/mpi/coll/allreduce_tuning.h
@@ -145,8 +145,25 @@ extern int MPIR_Allreduce_mcst_reduce_redscat_gather_MV2(const void *sendbuf,
                              MPI_Datatype datatype,
                              MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
 
+extern int MPIR_Allreduce_pt2pt_ring_wrapper_MV2(const void *sendbuf,
+                            void *recvbuf, int count, MPI_Datatype datatype,
+                            MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag,
+                            int comm_size, int sendtype_size);
+
+extern int MPIR_Allreduce_pt2pt_ring_MV2(const void *sendbuf,
+                             void *recvbuf,
+                             int count,
+                             MPI_Datatype datatype,
+                             MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
+
+extern int MPIR_Allreduce_pt2pt_ring_inplace_MV2(const void *sendbuf,
+                             void *recvbuf,
+                             int count,
+                             MPI_Datatype datatype,
+                             MPI_Op op, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
+
 /* Architecture detection tuning */
-int MV2_set_allreduce_tuning_table(int heterogeneity);
+int MV2_set_allreduce_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by allreduce tuning table*/
 void MV2_cleanup_allreduce_tuning_table();
diff --git a/src/mpi/coll/alltoall_cuda_osu.c b/src/mpi/coll/alltoall_cuda_osu.c
index d4ba6c5..8733e01 100644
--- a/src/mpi/coll/alltoall_cuda_osu.c
+++ b/src/mpi/coll/alltoall_cuda_osu.c
@@ -25,6 +25,8 @@ typedef enum _send_stat_ {
 cudaEvent_t *send_events = NULL, *recv_event = NULL;
 int send_events_count = 0;
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_alltoall_cuda);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoall_cuda_intra_bytes_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoall_cuda_intra_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoall_cuda_intra_count_send);
@@ -71,6 +73,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     MPID_Comm *comm_ptr, 
     MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,alltoall,cuda);
     cudaError_t cudaerr = cudaSuccess;
     int mpi_errno=MPI_SUCCESS;
     int dst, rank, comm_size;
@@ -135,6 +138,8 @@ int MPIR_Alltoall_CUDA_intra_MV2(
             if(cudaerr != cudaSuccess) {
                 mpi_errno = MPIR_Err_create_code(mpi_errno, MPIR_ERR_RECOVERABLE, FCNAME,
                         __LINE__, MPI_ERR_OTHER, "**nomem", 0);
+
+                MPIR_TIMER_END(coll,alltoall,cuda);
                 return mpi_errno;
             }
         }
@@ -146,6 +151,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
         if(cudaerr != cudaSuccess) {
             mpi_errno = MPIR_Err_create_code(mpi_errno, MPIR_ERR_RECOVERABLE, FCNAME,
                     __LINE__, MPI_ERR_OTHER, "**nomem", 0);
+            MPIR_TIMER_END(coll,alltoall,cuda);
             return mpi_errno;
         }
     }
@@ -155,6 +161,8 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     if (!sendreq) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        
+        MPIR_TIMER_END(coll,alltoall,cuda);
         return mpi_errno;
     }
 
@@ -162,6 +170,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     if (!request_ptrs) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        MPIR_TIMER_END(coll,alltoall,cuda);
         return mpi_errno;
     }
 
@@ -169,6 +178,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     if (!recvreq) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        MPIR_TIMER_END(coll,alltoall,cuda);
         return mpi_errno;
     }
 
@@ -176,6 +186,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     if (!sendstat) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        MPIR_TIMER_END(coll,alltoall,cuda);
         return mpi_errno;
     }
 
@@ -183,6 +194,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     if (!recvstat) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        MPIR_TIMER_END(coll,alltoall,cuda);
         return mpi_errno;
     }
 
@@ -190,6 +202,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
     if (NULL == send_complete) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        MPIR_TIMER_END(coll,alltoall,cuda);
         return mpi_errno;
     }
     MPIU_Memset(send_complete, 0, sizeof(send_stat)*num_sbufs);
@@ -386,7 +399,7 @@ int MPIR_Alltoall_CUDA_intra_MV2(
  fn_fail:    
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT( comm_ptr );
-    
+    MPIR_TIMER_END(coll,alltoall,cuda);
     return (mpi_errno);
 }
 #endif /*#ifdef _ENABLE_CUDA_*/
diff --git a/src/mpi/coll/alltoall_osu.c b/src/mpi/coll/alltoall_osu.c
index fd459b0..f5d745f 100644
--- a/src/mpi/coll/alltoall_osu.c
+++ b/src/mpi/coll/alltoall_osu.c
@@ -20,8 +20,15 @@
 #include <math.h>
 #include <unistd.h>
 #include "coll_shmem.h"
+#include "common_tuning.h"
 #include "alltoall_tuning.h"
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_alltoall_inplace);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_alltoall_bruck);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_alltoall_rd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_alltoall_sd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_alltoall_pw);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoall_inplace);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoall_bruck);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoall_rd);
@@ -113,6 +120,7 @@ int MPIR_Alltoall_inplace_MV2(
     MPID_Comm *comm_ptr,
     MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,alltoall,inplace);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_alltoall_inplace, 1);
     int          comm_size, i, j;
     MPI_Aint     recvtype_extent;
@@ -121,7 +129,11 @@ int MPIR_Alltoall_inplace_MV2(
     int rank;
     MPI_Status status;
  
-    if (recvcount == 0) return MPI_SUCCESS;
+    if (recvcount == 0) 
+    {
+      MPIR_TIMER_END(coll,alltoall,inplace);
+      return MPI_SUCCESS;
+    }
     
     comm_size = comm_ptr->local_size;
     rank = comm_ptr->rank;
@@ -190,6 +202,7 @@ int MPIR_Alltoall_inplace_MV2(
     
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT( comm_ptr );
+    MPIR_TIMER_END(coll,alltoall,inplace);
     return (mpi_errno);
 }
 
@@ -210,6 +223,7 @@ int MPIR_Alltoall_bruck_MV2(
                             MPID_Comm *comm_ptr,
                             MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,alltoall,bruck);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_alltoall_bruck, 1);
     int          comm_size, i, pof2;
     MPI_Aint     sendtype_extent, recvtype_extent;
@@ -222,7 +236,11 @@ int MPIR_Alltoall_bruck_MV2(
     MPI_Datatype newtype;
     void *tmp_buf;
     
-    if (recvcount == 0) return MPI_SUCCESS;
+    if (recvcount == 0) 
+    {
+      MPIR_TIMER_END(coll,alltoall,bruck);
+      return MPI_SUCCESS;
+    }
     
     comm_size = comm_ptr->local_size;
     rank = comm_ptr->rank;
@@ -246,6 +264,8 @@ int MPIR_Alltoall_bruck_MV2(
     if (!tmp_buf) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        
+        MPIR_TIMER_END(coll,alltoall,bruck);
         return mpi_errno;
     }
         /* --END ERROR HANDLING-- */
@@ -277,6 +297,8 @@ int MPIR_Alltoall_bruck_MV2(
     if (!displs) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE,
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        
+        MPIR_TIMER_END(coll,alltoall,bruck);
         return mpi_errno;
     }
         /* --END ERROR HANDLING-- */
@@ -349,6 +371,8 @@ int MPIR_Alltoall_bruck_MV2(
     if (!tmp_buf) {
         mpi_errno = MPIR_Err_create_code( MPI_SUCCESS, MPIR_ERR_RECOVERABLE, 
                             FCNAME, __LINE__, MPI_ERR_OTHER, "**nomem", 0 );
+        
+        MPIR_TIMER_END(coll,alltoall,bruck);
         return mpi_errno;
     }
         /* --END ERROR HANDLING-- */
@@ -386,7 +410,7 @@ int MPIR_Alltoall_bruck_MV2(
 fn_fail:
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT( comm_ptr );
-    
+    MPIR_TIMER_END(coll,alltoall,bruck);
     return (mpi_errno);
     
 }
@@ -407,6 +431,7 @@ int MPIR_Alltoall_ALG_MV2(
                             MPID_Comm *comm_ptr,
                             MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,alltoall,rd);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_alltoall_rd, 1);
     int          comm_size;
     MPI_Aint     sendtype_extent, recvtype_extent;
@@ -418,7 +443,11 @@ int MPIR_Alltoall_ALG_MV2(
     MPI_Aint sendtype_true_extent, sendbuf_extent, sendtype_true_lb;
     int p;
     
-    if (recvcount == 0) return MPI_SUCCESS;
+    if (recvcount == 0) 
+    {
+      MPIR_TIMER_END(coll,alltoall,rd);
+      return MPI_SUCCESS;
+    }
     
     comm_size = comm_ptr->local_size;
     rank = comm_ptr->rank;
@@ -473,6 +502,7 @@ fn_fail:
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT( comm_ptr );
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,alltoall,rd);
     return (mpi_errno);
 
 }
@@ -520,6 +550,7 @@ int MPIR_Alltoall_Scatter_dest_MV2(
                             MPID_Comm *comm_ptr,
                             MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,alltoall,sd);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_alltoall_sd, 1);
     int          comm_size, i, j;
     MPI_Aint     sendtype_extent = 0, recvtype_extent = 0;
@@ -531,7 +562,11 @@ int MPIR_Alltoall_Scatter_dest_MV2(
 
 
     
-    if (recvcount == 0) return MPI_SUCCESS;
+    if (recvcount == 0) 
+    {
+      MPIR_TIMER_END(coll,alltoall,sd);
+      return MPI_SUCCESS;
+    }
     
     MPID_Datatype_get_size_macro(sendtype, sendtype_size);
     nbytes = sendtype_size * sendcount;
@@ -632,7 +667,7 @@ int MPIR_Alltoall_Scatter_dest_MV2(
 fn_fail:
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT( comm_ptr );
-    
+    MPIR_TIMER_END(coll,alltoall,sd);
     return (mpi_errno);
     
 }
@@ -653,6 +688,7 @@ int MPIR_Alltoall_pairwise_MV2(
                             MPID_Comm *comm_ptr,
                             MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,alltoall,pw);
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_alltoall_pw, 1);
     int          comm_size, i, pof2;
     MPI_Aint     sendtype_extent, recvtype_extent;
@@ -661,7 +697,11 @@ int MPIR_Alltoall_pairwise_MV2(
     int src, dst, rank;
     MPI_Status status;
     
-    if (recvcount == 0) return MPI_SUCCESS;
+    if (recvcount == 0) 
+    {
+      MPIR_TIMER_END(coll,alltoall,pw);
+      return MPI_SUCCESS;
+    }
     
     comm_size = comm_ptr->local_size;
     rank = comm_ptr->rank;
@@ -732,7 +772,7 @@ int MPIR_Alltoall_pairwise_MV2(
 fn_fail:
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT( comm_ptr );
-    
+    MPIR_TIMER_END(coll,alltoall,pw);
     return (mpi_errno);
     
 }
@@ -799,21 +839,15 @@ int MPIR_Alltoall_index_tuned_intra_MV2(
         }
         if (likely(mv2_enable_skip_tuning_table_search && (nbytes <= mv2_coll_skip_table_threshold))) {
             /* for small messages, force Bruck or RD */
-            if (local_size < 16 && nbytes < 32) {
+            if (comm_size * nbytes < 512 && local_size < 16 && nbytes < 32) {
                MV2_Alltoall_function = MPIR_Alltoall_RD_MV2; 
             } else { 
                 MV2_Alltoall_function = MPIR_Alltoall_bruck_MV2;
             }
             goto skip_tuning_tables;
         }
-        do {
-            if (local_size == mv2_alltoall_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_alltoall_indexed_num_ppn_conf);
+
+        FIND_PPN_INDEX  (alltoall, local_size,conf_index, partial_sub_ok)
     }
     
     if (partial_sub_ok != 1) {
@@ -946,14 +980,7 @@ int MPIR_Alltoall_tune_intra_MV2(
             conf_index = 0;
             goto conf_check_end;
         }
-        do {
-            if (local_size == mv2_alltoall_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_alltoall_num_ppn_conf);
+        FIND_PPN_INDEX  (alltoall, local_size,conf_index, partial_sub_ok)
     }
 
     if (partial_sub_ok != 1) {
diff --git a/src/mpi/coll/alltoall_tuning.c b/src/mpi/coll/alltoall_tuning.c
index 8e843ff..a3a21cb 100644
--- a/src/mpi/coll/alltoall_tuning.c
+++ b/src/mpi/coll/alltoall_tuning.c
@@ -28,7 +28,7 @@ int mv2_alltoall_indexed_num_ppn_conf = 1;
 int *mv2_size_alltoall_indexed_tuning_table = NULL;
 mv2_alltoall_indexed_tuning_table **mv2_alltoall_indexed_thresholds_table = NULL;
 
-int MV2_set_alltoall_tuning_table(int heterogeneity)
+int MV2_set_alltoall_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
   int agg_table_sum = 0;
   int i;
@@ -483,14 +483,89 @@ int MV2_set_alltoall_tuning_table(int heterogeneity)
       MV2_COLL_TUNING_FINISH_TABLE (alltoall)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (alltoall, 7)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (alltoall)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (alltoall, 6)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (alltoall)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (alltoall, 8)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  4, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 2,  4, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  4, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 4,  4, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 4, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 16, 4, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 28, 3, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 28, 3, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 32, 3, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 32, 3, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (alltoall)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Mayer */
+      MV2_COLL_TUNING_START_TABLE  (alltoall, 8)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (alltoall)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
       /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (alltoall, 5)
-      MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (alltoall, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (alltoall, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (alltoall)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -505,12 +580,14 @@ int MV2_set_alltoall_tuning_table(int heterogeneity)
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 				    MV2_ARCH_IBM_POWER9, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /* Sierra Table: Use table for Ray temporarily */
-      MV2_COLL_TUNING_START_TABLE  (alltoall, 8)
+      MV2_COLL_TUNING_START_TABLE  (alltoall, 9)
       MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (alltoall, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -598,14 +675,38 @@ int MV2_set_alltoall_tuning_table(int heterogeneity)
       else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 		  MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
 	/*RI2 Table*/
-    MV2_COLL_TUNING_START_TABLE  (alltoall, 3)
+    MV2_COLL_TUNING_START_TABLE  (alltoall, 6)
     MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  4, GEN2__RI2__1PPN)
     MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 1,  4, GEN2_CMA__RI2__1PPN)
-    MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  4, GEN2__RI2__2PPN)
-    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 2,  4, GEN2_CMA__RI2__2PPN)
-    MV2_COLL_TUNING_ADD_CONF     (alltoall, 28, 4, GEN2__RI2__28PPN)
-    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 28, 4, GEN2_CMA__RI2__28PPN)
-    MV2_COLL_TUNING_FINISH_TABLE (alltoall)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  5, GEN2__RI2__2PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 2,  5, GEN2_CMA__RI2__2PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  5, GEN2__RI2__4PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 4,  5, GEN2_CMA__RI2__4PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  5, GEN2__RI2__8PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 8,  5, GEN2_CMA__RI2__8PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 5, GEN2__RI2__16PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 16, 5, GEN2_CMA__RI2__16PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 28, 5, GEN2__RI2__28PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 28, 5, GEN2_CMA__RI2__28PPN)
+    MV2_COLL_TUNING_FINISH_TABLE (alltoall) 
+      }
+      else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+		  MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+	/*RI2 Table*/
+    MV2_COLL_TUNING_START_TABLE  (alltoall, 6)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 1,  4, GEN2__RI2__1PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 1,  4, GEN2_CMA__RI2__1PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 2,  5, GEN2__RI2__2PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 2,  5, GEN2_CMA__RI2__2PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 4,  5, GEN2__RI2__4PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 4,  5, GEN2_CMA__RI2__4PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 8,  5, GEN2__RI2__8PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 8,  5, GEN2_CMA__RI2__8PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 16, 5, GEN2__RI2__16PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 16, 5, GEN2_CMA__RI2__16PPN)
+    MV2_COLL_TUNING_ADD_CONF     (alltoall, 28, 5, GEN2__RI2__28PPN)
+    MV2_COLL_TUNING_ADD_CONF_CMA (alltoall, 28, 5, GEN2_CMA__RI2__28PPN)
+    MV2_COLL_TUNING_FINISH_TABLE (alltoall) 
       }
       else {
 	/*Stampede Table*/
diff --git a/src/mpi/coll/alltoall_tuning.h b/src/mpi/coll/alltoall_tuning.h
index 5a7c2a5..b88bf9a 100644
--- a/src/mpi/coll/alltoall_tuning.h
+++ b/src/mpi/coll/alltoall_tuning.h
@@ -143,7 +143,7 @@ extern int MPIR_Alltoall_inplace_MV2(
 
 
 /* Architecture detection tuning */
-int MV2_set_alltoall_tuning_table(int heterogeneity);
+int MV2_set_alltoall_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by bcast tuning table*/
 void MV2_cleanup_alltoall_tuning_table();
diff --git a/src/mpi/coll/alltoallv_osu.c b/src/mpi/coll/alltoallv_osu.c
index 03256b4..2e46496 100644
--- a/src/mpi/coll/alltoallv_osu.c
+++ b/src/mpi/coll/alltoallv_osu.c
@@ -17,6 +17,7 @@
 
 #include "mpiimpl.h"
 #include "coll_shmem.h"
+#include "common_tuning.h"
 #include "alltoallv_tuning.h"
 
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_alltoallv_pw);
@@ -487,15 +488,7 @@ int MPIR_Alltoallv_index_tuned_intra_MV2(const void *sendbuf,
         shmem_comm = comm_ptr->dev.ch.shmem_comm;
         MPID_Comm_get_ptr(shmem_comm, shmem_commptr);
         local_size = shmem_commptr->local_size;
-        i = 0;
-        do {
-            if (local_size == mv2_alltoallv_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_alltoallv_indexed_num_ppn_conf);
+        FIND_PPN_INDEX  (alltoallv, local_size,conf_index, partial_sub_ok)
     }
     
     if (partial_sub_ok != 1) {
diff --git a/src/mpi/coll/alltoallv_tuning.c b/src/mpi/coll/alltoallv_tuning.c
index 4545382..fe7a51c 100644
--- a/src/mpi/coll/alltoallv_tuning.c
+++ b/src/mpi/coll/alltoallv_tuning.c
@@ -28,7 +28,7 @@ int mv2_alltoallv_indexed_num_ppn_conf = 1;
 int *mv2_size_alltoallv_indexed_tuning_table = NULL;
 mv2_alltoallv_indexed_tuning_table **mv2_alltoallv_indexed_thresholds_table = NULL;
 
-int MV2_set_alltoallv_tuning_table(int heterogeneity)
+int MV2_set_alltoallv_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
 
     int agg_table_sum = 0;
diff --git a/src/mpi/coll/alltoallv_tuning.h b/src/mpi/coll/alltoallv_tuning.h
index ebaa1a3..02a9280 100644
--- a/src/mpi/coll/alltoallv_tuning.h
+++ b/src/mpi/coll/alltoallv_tuning.h
@@ -119,7 +119,7 @@ extern int MPIR_Alltoallv_intra_scatter_MV2(const void *sendbuf,
 
 
 /* Architecture detection tuning */
-int MV2_set_alltoallv_tuning_table(int heterogeneity);
+int MV2_set_alltoallv_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by bcast tuning table*/
 void MV2_cleanup_alltoallv_tuning_table();
diff --git a/src/mpi/coll/barrier_osu.c b/src/mpi/coll/barrier_osu.c
index 76f386e..6edffb1 100644
--- a/src/mpi/coll/barrier_osu.c
+++ b/src/mpi/coll/barrier_osu.c
@@ -23,8 +23,12 @@
 #include <cr.h>
 #endif
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_barrier_pairwise);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_barrier_shmem);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_barrier_pairwise);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_barrier_shmem);
+MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_barrier_subcomm);
 
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_barrier_pairwise_bytes_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_barrier_pairwise_bytes_recv);
@@ -37,7 +41,7 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_barrier_count_recv);
 
 static int MPIR_Pairwise_Barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
-
+    MPIR_TIMER_START(coll,barrier,pairwise);
     int size, rank;
     int d, dst, src;
     int mpi_errno = MPI_SUCCESS;
@@ -50,7 +54,7 @@ static int MPIR_Pairwise_Barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errfl
         return MPI_SUCCESS;
 
     rank = comm_ptr->rank;
-
+ 
     /*  N2_prev = greatest power of two < size of Comm  */
     int N2_prev = comm_ptr->dev.ch.gpof2;
     int surfeit = size - N2_prev;
@@ -93,6 +97,7 @@ static int MPIR_Pairwise_Barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errfl
                                      comm_ptr, MPI_STATUS_IGNORE, errflag);
     }
 
+    MPIR_TIMER_END(coll,barrier,pairwise);
     return mpi_errno;
 
 }
@@ -100,6 +105,7 @@ static int MPIR_Pairwise_Barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errfl
 static int MPIR_shmem_barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
 
+    MPIR_TIMER_START(coll,barrier,shmem);
     int mpi_errno = MPI_SUCCESS;
 
     MPI_Comm shmem_comm = MPI_COMM_NULL, leader_comm = MPI_COMM_NULL;
@@ -136,6 +142,7 @@ static int MPIR_shmem_barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
                                             shmem_comm_rank);
     }
 
+    MPIR_TIMER_END(coll,barrier,shmem);
     return mpi_errno;
 
 }
@@ -207,6 +214,7 @@ int MPIR_Barrier_intra_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 int MPIR_Barrier_MV2(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
     int mpi_errno = MPI_SUCCESS;
+    MPIR_T_PVAR_COMM_COUNTER_INC(MV2,mv2_coll_barrier_subcomm,1,comm_ptr);
     mpi_errno = MPIR_Barrier_intra_MV2(comm_ptr, errflag);
     if (mpi_errno)
         MPIR_ERR_POP(mpi_errno);
diff --git a/src/mpi/coll/bcast_osu.c b/src/mpi/coll/bcast_osu.c
index 7ae0d13..3ed4ae5 100644
--- a/src/mpi/coll/bcast_osu.c
+++ b/src/mpi/coll/bcast_osu.c
@@ -19,10 +19,23 @@
 #include <unistd.h>
 #include "coll_shmem.h"
 #include <unistd.h>
+#include "common_tuning.h"
 #include "bcast_tuning.h"
-
 #define INTRA_NODE_ROOT 0
 
+
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_scatter_doubling_allgather);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_scatter_ring_allgather);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_scatter_ring_allgather_shm);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_shmem);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_knomial_internode);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_knomial_intranode);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_mcast_internode);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_pipelined);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_shmem_zcpy);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_bcast_pipelined_zcpy);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_bcast_binomial);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_bcast_scatter_doubling_allgather);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_bcast_scatter_ring_allgather);
@@ -105,6 +118,9 @@ int MPIR_Bcast_binomial_MV2(void *buffer,
                             MPI_Datatype datatype,
                             int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+
+    MPIR_TIMER_START(coll,bcast,binomial);
+
     int rank, comm_size, src, dst;
     int relative_rank, mask;
     int mpi_errno = MPI_SUCCESS;
@@ -280,6 +296,8 @@ int MPIR_Bcast_binomial_MV2(void *buffer,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,bcast,binomial);  
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -442,6 +460,7 @@ int MPIR_Bcast_scatter_doubling_allgather_MV2(void *buffer,
                                               int root,
                                               MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,scatter_doubling_allgather);
     MPI_Status status;
     int rank, comm_size, dst;
     int relative_rank, mask;
@@ -688,6 +707,7 @@ int MPIR_Bcast_scatter_doubling_allgather_MV2(void *buffer,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+    MPIR_TIMER_END(coll,bcast,scatter_doubling_allgather);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -718,6 +738,7 @@ int MPIR_Bcast_scatter_ring_allgather_MV2(void *buffer,
                                           MPI_Datatype datatype,
                                           int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,scatter_ring_allgather);
     int rank, comm_size;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -862,6 +883,7 @@ int MPIR_Bcast_scatter_ring_allgather_MV2(void *buffer,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+    MPIR_TIMER_END(coll,bcast,scatter_ring_allgather);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -882,7 +904,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
                                               MPID_Comm * comm_ptr,
                                               MPIR_Errflag_t *errflag)
 {
-
+    MPIR_TIMER_START(coll,bcast,scatter_ring_allgather_shm);
     int rank, comm_size, local_rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -891,6 +913,8 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
     MPI_Aint type_size;
     int left = -1, right = -1, jnext;
     MPIDI_msg_sz_t *recvcnts=NULL, *displs=NULL;
+    MPI_Aint true_extent, true_lb;
+    void * tmp_buf = NULL;
     MPIU_CHKLMEM_DECL(3);
 
     comm_size = comm_ptr->local_size;
@@ -917,6 +941,12 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
         rank = leader_commptr->rank;
     }
 
+    MPIR_Type_get_true_extent_impl(datatype, &true_lb, &true_extent);
+    /* even though we always call this algorithm with contigious buffer, still,
+     * the datatype might have some holes in the beginning. Therefore, true_lb
+     * might be non zero */
+    tmp_buf = buffer + true_lb;
+
     MPIR_Bcast_MV2(&comm_size, 1, MPI_INT, 0, shmem_commptr, errflag);
     if (comm_size == 1) {
         goto fn_exit;
@@ -969,8 +999,8 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
         MPIR_Bcast_MV2(&para_packet, sizeof(bcast_ring_allgather_shm_packet), 
                        MPI_BYTE, 0, shmem_commptr, errflag);
 
-        mpi_errno = scatter_for_bcast_MV2(buffer, count, datatype, root, leader_commptr,
-                                      nbytes, buffer, is_contig,
+        mpi_errno = scatter_for_bcast_MV2(tmp_buf, count, datatype, root, leader_commptr,
+                                      nbytes, tmp_buf, is_contig,
                                       is_homogeneous, errflag);
         if (mpi_errno) {
             /* for communication errors, just record the error but continue */
@@ -981,14 +1011,14 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
        
         /* one chunk is moving along the allgather ring, node-leaders are involved*/
         MPIR_PVAR_INC(bcast, scatter_ring_allgather_shm, recv, recvcnts[(jnext - root + comm_size) % comm_size], MPI_BYTE);
-        MPIC_Irecv((char *) buffer +
+        MPIC_Irecv((char *) tmp_buf +
                    displs[(jnext - root + comm_size) % comm_size],
                    recvcnts[(jnext - root + comm_size) % comm_size],
                    MPI_BYTE, left, MPIR_BCAST_TAG,
                    leader_commptr, &request[0]);
 
         MPIR_PVAR_INC(bcast, scatter_ring_allgather_shm, send, recvcnts[(j - root + comm_size) % comm_size], MPI_BYTE);
-        MPIC_Isend((char *) buffer +
+        MPIC_Isend((char *) tmp_buf +
                    displs[(j - root + comm_size) % comm_size], 
                    recvcnts[(j - root + comm_size) % comm_size], 
                    MPI_BYTE, right, MPIR_BCAST_TAG,
@@ -997,7 +1027,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
         shmem_offset =  displs[(j - root + comm_size) % comm_size];
         shmem_nbytes =  recvcnts[(j - root + comm_size) % comm_size];
    
-        mpi_errno = MPIR_Shmem_Bcast_MV2(buffer + shmem_offset, shmem_nbytes, MPI_BYTE,
+        mpi_errno = MPIR_Shmem_Bcast_MV2(tmp_buf + shmem_offset, shmem_nbytes, MPI_BYTE,
                                         INTRA_NODE_ROOT, shmem_commptr, errflag);
 
         mpi_errno = MPIC_Waitall(2, request, status, errflag);
@@ -1018,14 +1048,14 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
         */
         for (i = 2; i < comm_size; i++) {
             MPIR_PVAR_INC(bcast, scatter_ring_allgather_shm, recv, recvcnts[(jnext - root + comm_size) % comm_size], MPI_BYTE);
-            MPIC_Irecv((char *) buffer +
+            MPIC_Irecv((char *) tmp_buf +
                         displs[(jnext - root + comm_size) % comm_size], 
                         recvcnts[(jnext - root + comm_size) % comm_size], 
                         MPI_BYTE, left, MPIR_BCAST_TAG,
                         leader_commptr, &request[0]);
 
             MPIR_PVAR_INC(bcast, scatter_ring_allgather_shm, send, recvcnts[(j - root + comm_size) % comm_size], MPI_BYTE);
-            MPIC_Isend((char *) buffer +
+            MPIC_Isend((char *) tmp_buf +
                         displs[(j - root + comm_size) % comm_size], 
                         recvcnts[(j - root + comm_size) % comm_size], 
                         MPI_BYTE, right, MPIR_BCAST_TAG,
@@ -1036,7 +1066,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
             shmem_nbytes =  recvcnts[(j - root + comm_size) % comm_size];
 
 
-            mpi_errno = MPIR_Shmem_Bcast_MV2(buffer + shmem_offset, shmem_nbytes, MPI_BYTE,
+            mpi_errno = MPIR_Shmem_Bcast_MV2(tmp_buf + shmem_offset, shmem_nbytes, MPI_BYTE,
                                              INTRA_NODE_ROOT, shmem_commptr, errflag);
 
 
@@ -1099,7 +1129,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
         shmem_offset =  displs[(j - root + comm_size) % comm_size];
         shmem_nbytes =  recvcnts[(j - root + comm_size) % comm_size];
 
-        mpi_errno = MPIR_Shmem_Bcast_MV2(buffer + shmem_offset, shmem_nbytes, MPI_BYTE,
+        mpi_errno = MPIR_Shmem_Bcast_MV2(tmp_buf + shmem_offset, shmem_nbytes, MPI_BYTE,
                                         INTRA_NODE_ROOT, shmem_commptr, errflag);
 
         j = jnext;
@@ -1116,7 +1146,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
             shmem_nbytes =  recvcnts[(j - root + comm_size) % comm_size];
 
 
-            mpi_errno = MPIR_Shmem_Bcast_MV2(buffer + shmem_offset, shmem_nbytes, MPI_BYTE,
+            mpi_errno = MPIR_Shmem_Bcast_MV2(tmp_buf + shmem_offset, shmem_nbytes, MPI_BYTE,
                                              INTRA_NODE_ROOT, shmem_commptr, errflag);
 
 
@@ -1130,7 +1160,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
 
     } 
 
-    mpi_errno = MPIR_Shmem_Bcast_MV2(buffer + shmem_offset, shmem_nbytes, MPI_BYTE,
+    mpi_errno = MPIR_Shmem_Bcast_MV2(tmp_buf + shmem_offset, shmem_nbytes, MPI_BYTE,
                                          INTRA_NODE_ROOT, shmem_commptr, errflag);
 
 
@@ -1145,6 +1175,7 @@ int MPIR_Bcast_scatter_ring_allgather_shm_MV2(void *buffer,
     } else if (*errflag) {
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
     }
+    MPIR_TIMER_END(coll,bcast,scatter_ring_allgather_shm);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -1161,6 +1192,7 @@ int MPIR_Shmem_Bcast_MV2(void *buffer,
                          MPI_Datatype datatype,
                          int root, MPID_Comm * shmem_comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,shmem);
     int mpi_errno = MPI_SUCCESS;
     int shmem_comm_rank; 
     MPI_Aint type_size;
@@ -1177,6 +1209,7 @@ int MPIR_Shmem_Bcast_MV2(void *buffer,
     local_size = shmem_comm_ptr->local_size;
 
     if (count == 0) {
+        MPIR_TIMER_END(coll,bcast,shmem);
         return MPI_SUCCESS;
     }
 
@@ -1196,6 +1229,7 @@ int MPIR_Shmem_Bcast_MV2(void *buffer,
             len = MIN(nbytes - pos, mv2_shm_slot_len);
             mv2_shm_bcast(shmem_comm_ptr->dev.ch.shmem_info, buf, len, 0);
         }
+        MPIR_TIMER_END(coll,bcast,shmem);
         return MPI_SUCCESS;
     }
 
@@ -1215,7 +1249,8 @@ int MPIR_Shmem_Bcast_MV2(void *buffer,
         MPIR_ERR_POP(mpi_errno);
     }
 
-  fn_fail:
+  fn_fail :
+    MPIR_TIMER_END(coll,bcast,shmem);
     return mpi_errno;
 }
 
@@ -1231,7 +1266,8 @@ int MPIR_Knomial_Bcast_inter_node_MV2(void *buffer,
                                       MPI_Datatype datatype,
                                       int root, int knomial_factor, 
                                       MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
-{
+{   
+    MPIR_TIMER_START(coll,bcast,knomial_internode);
     MPI_Comm shmem_comm, leader_comm;
     MPID_Comm *shmem_commptr = NULL, *leader_commptr = NULL;
     int local_rank = 0;
@@ -1362,6 +1398,7 @@ int MPIR_Knomial_Bcast_inter_node_MV2(void *buffer,
   fn_fail:
 
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,bcast,knomial_internode);
     return mpi_errno;
 }
 
@@ -1375,6 +1412,7 @@ int MPIR_Knomial_Bcast_intra_node_MV2(void *buffer,
                                       int root, MPID_Comm * comm_ptr, 
                                       MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,knomial_intranode);
     int local_size = 0, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -1470,6 +1508,7 @@ int MPIR_Knomial_Bcast_intra_node_MV2(void *buffer,
 
   fn_fail:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,bcast,knomial_intranode);
     return mpi_errno;
 }
 
@@ -1512,6 +1551,7 @@ int MPIR_Mcast_inter_node_MV2(void *buffer,
                               MPI_Datatype datatype,
                               int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,mcast_internode);
     int mpi_errno = MPI_SUCCESS;
     int rank, comm_size;
     int extent; 
@@ -1588,6 +1628,7 @@ int MPIR_Mcast_inter_node_MV2(void *buffer,
     }
 
   fn_exit:
+    MPIR_TIMER_END(coll,bcast,mcast_internode);
     return mpi_errno;
 }
 #endif
@@ -1601,6 +1642,7 @@ int MPIR_Pipelined_Bcast_MV2(void *buffer,
                              MPI_Datatype datatype,
                              int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,pipelined);
     MPI_Comm shmem_comm;
     MPID_Comm *shmem_commptr = NULL;
     int local_rank = 0;
@@ -1608,6 +1650,8 @@ int MPIR_Pipelined_Bcast_MV2(void *buffer,
     MPI_Aint type_size = 0; 
     MPIDI_msg_sz_t nbytes=0, rem_count = 0, bcast_segment_count = 0, bcast_curr_count = 0;
     MPI_Aint extent;
+    MPI_Aint true_extent, true_lb;
+    void * tmp_buf = NULL;
 
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_bcast_pipelined, 1);
     shmem_comm = comm_ptr->dev.ch.shmem_comm;
@@ -1618,13 +1662,19 @@ int MPIR_Pipelined_Bcast_MV2(void *buffer,
     MPID_Datatype_get_size_macro(datatype, type_size);
     nbytes = (MPIDI_msg_sz_t) (count) * extent;
 
+    MPIR_Type_get_true_extent_impl(datatype, &true_lb, &true_extent);
+    /* even though we always call this algorithm with contigious buffer, still,
+     * the datatype might have some holes in the beginning. Therefore, true_lb
+     * might be non zero */
+    tmp_buf = buffer + true_lb;
+
     rem_count = nbytes;
     bcast_segment_count = MIN(rem_count, bcast_segment_size);
 
     while (bcast_curr_count < nbytes) {
         comm_ptr->dev.ch.intra_node_done = 0;
         if (local_rank == 0) {
-            mpi_errno = MPIR_Knomial_Bcast_inter_node_wrapper_MV2((char *) buffer +
+            mpi_errno = MPIR_Knomial_Bcast_inter_node_wrapper_MV2((char *) tmp_buf +
                                                           bcast_curr_count,
                                                           bcast_segment_count,
                                                           MPI_BYTE, root,
@@ -1632,20 +1682,20 @@ int MPIR_Pipelined_Bcast_MV2(void *buffer,
         }
         if (comm_ptr->dev.ch.intra_node_done != 1) {
             if (mv2_use_old_bcast == 0) {
-                mpi_errno = MV2_Bcast_intra_node_function((char *) buffer +
+                mpi_errno = MV2_Bcast_intra_node_function((char *) tmp_buf +
                                                  bcast_curr_count,
                                                  bcast_segment_count,
                                                  MPI_BYTE, INTRA_NODE_ROOT,
                                                  shmem_commptr, errflag);
             } else {
                 if (bcast_segment_count * type_size <= mv2_knomial_intra_node_threshold) {
-                   mpi_errno = MPIR_Shmem_Bcast_MV2((char *) buffer +
+                   mpi_errno = MPIR_Shmem_Bcast_MV2((char *) tmp_buf +
                                                      bcast_curr_count,
                                                      bcast_segment_count,
                                                      MPI_BYTE, INTRA_NODE_ROOT,
                                                      shmem_commptr, errflag);
                 } else {
-                    mpi_errno = MPIR_Knomial_Bcast_intra_node_MV2((char *) buffer +
+                    mpi_errno = MPIR_Knomial_Bcast_intra_node_MV2((char *) tmp_buf +
                                                                   bcast_curr_count,
                                                                   bcast_segment_count,
                                                                   MPI_BYTE, INTRA_NODE_ROOT,
@@ -1664,6 +1714,7 @@ int MPIR_Pipelined_Bcast_MV2(void *buffer,
     comm_ptr->dev.ch.intra_node_done = 1;
 
   fn_fail:
+    MPIR_TIMER_END(coll,bcast,pipelined);
     return mpi_errno;
 }
 
@@ -1746,6 +1797,7 @@ int MPIR_Shmem_Bcast_Zcpy_MV2(void *buffer,
                          MPID_Comm *comm_ptr, 
                          MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,bcast,shmem_zcpy);
     int mpi_errno = MPI_SUCCESS;
     MPI_Aint type_size;  
     MPIDI_msg_sz_t nbytes;
@@ -1759,6 +1811,7 @@ int MPIR_Shmem_Bcast_Zcpy_MV2(void *buffer,
 
     MPIU_Assert(mv2_enable_zcpy_bcast==1 && mv2_use_slot_shmem_coll==1);
     if ( count == 0) {
+        MPIR_TIMER_END(coll,bcast,shmem_zcpy);
         return MPI_SUCCESS;
     }
 
@@ -1783,10 +1836,12 @@ int MPIR_Shmem_Bcast_Zcpy_MV2(void *buffer,
                 MPIR_ERR_POP(mpi_errno);
             }
         }
+        MPIR_TIMER_END(coll,bcast,shmem_zcpy);
         return MPI_SUCCESS;
     } 
 
   fn_fail:
+    MPIR_TIMER_END(coll,bcast,shmem_zcpy);
     return mpi_errno;
 }
 
@@ -1798,7 +1853,8 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
                              int count,
                              MPI_Datatype datatype,
                              int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
-{
+{   
+    MPIR_TIMER_START(coll,bcast,pipelined_zcpy);
     MPI_Comm shmem_comm;
     MPID_Comm *shmem_commptr = NULL;
     int local_rank = 0, rank=0;
@@ -1811,10 +1867,19 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
     int src, expected_send_count=-1, expected_recv_count=-1; 
     int *dst_array = NULL; 
     MPI_Aint extent;
+    MPI_Aint true_extent, true_lb;
+    void * tmp_buf = NULL;
     static int fn_call=0; 
     MPID_Request *prev_request = NULL, *next_request = NULL; 
     MPI_Status prev_status, next_status; 
 
+
+    MPIR_Type_get_true_extent_impl(datatype, &true_lb, &true_extent);
+    /* even though we always call this algorithm with contigious buffer, still,
+     * the datatype might have some holes in the beginning. Therefore, true_lb
+     * might be non zero */
+    tmp_buf = buffer + true_lb;
+
     rank       = comm_ptr->rank; 
     shmem_comm = comm_ptr->dev.ch.shmem_comm;
     MPID_Comm_get_ptr(shmem_comm, shmem_commptr);
@@ -1853,7 +1918,7 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
     * that we have already set up */
     if(rank == root && rank != 0) {
         MPIR_PVAR_INC(bcast, pipelined_zcpy, send, bcast_segment_count, MPI_BYTE);
-        mpi_errno = MPIC_Isend( (char *) buffer +
+        mpi_errno = MPIC_Isend( (char *) tmp_buf +
                                bcast_curr_count, bcast_segment_count, 
                                MPI_BYTE, new_root, 
                                MPIR_BCAST_TAG, comm_ptr, 
@@ -1865,7 +1930,7 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
 
     if(rank == 0 && rank != root) {
         MPIR_PVAR_INC(bcast, pipelined_zcpy, recv, bcast_segment_count, MPI_BYTE);
-        mpi_errno = MPIC_Irecv((char *) buffer + 
+        mpi_errno = MPIC_Irecv((char *) tmp_buf + 
                               bcast_curr_count, bcast_segment_count, 
                               MPI_BYTE, root, MPIR_BCAST_TAG, comm_ptr, &prev_request);
         if (mpi_errno) {
@@ -1881,7 +1946,7 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
             bcast_next_segment_count = MIN(rem_count - bcast_segment_count, bcast_segment_count);
             if(bcast_curr_count + bcast_segment_count < nbytes) {
                 MPIR_PVAR_INC(bcast, pipelined_zcpy, send, bcast_next_segment_count, MPI_BYTE);
-                mpi_errno = MPIC_Isend( (char *) buffer +
+                mpi_errno = MPIC_Isend( (char *) tmp_buf +
                                        bcast_curr_count + bcast_segment_count, 
                                        bcast_next_segment_count, 
                                        MPI_BYTE, new_root, 
@@ -1898,7 +1963,7 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
             bcast_next_segment_count = MIN(rem_count - bcast_segment_count, bcast_segment_count);
             if(bcast_curr_count + bcast_segment_count < nbytes) { 
                 MPIR_PVAR_INC(bcast, pipelined_zcpy, recv, bcast_next_segment_count, MPI_BYTE);
-                mpi_errno = MPIC_Irecv((char *) buffer + 
+                mpi_errno = MPIC_Irecv((char *) tmp_buf + 
                                       bcast_curr_count + bcast_segment_count, 
                                       bcast_next_segment_count, 
                                       MPI_BYTE, root, MPIR_BCAST_TAG, comm_ptr,
@@ -1916,7 +1981,7 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
              prev_status  = next_status; 
         } 
  
-        mpi_errno = MPIR_Shmem_Bcast_Zcpy_MV2((char *) buffer +
+        mpi_errno = MPIR_Shmem_Bcast_Zcpy_MV2((char *) tmp_buf +
                                              bcast_curr_count,
                                              bcast_segment_count,
                                              MPI_BYTE, leader_root,
@@ -1940,6 +2005,7 @@ int MPIR_Pipelined_Bcast_Zcpy_MV2(void *buffer,
     fn_call++; 
 
   fn_fail:
+    MPIR_TIMER_END(coll,bcast,pipelined_zcpy);
     return mpi_errno;
 }
 #endif /* CHANNEL_MRAIL_GEN2 */
@@ -2530,14 +2596,8 @@ int MPIR_Bcast_index_tuned_intra_MV2(void *buffer,
             bcast_segment_size = 8192;
             goto skip_tuning_tables;
         }
-        do {
-            if (local_size == mv2_bcast_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_bcast_indexed_num_ppn_conf);
+
+        FIND_PPN_INDEX  (bcast, local_size,conf_index, partial_sub_ok)
     }
  
     if (partial_sub_ok != 1) {
@@ -2675,11 +2735,18 @@ conf_check_end:
         mv2_bcast_indexed_thresholds_table[conf_index][comm_size_index].is_two_level_bcast[inter_node_algo_index];
 #endif
 
+    if (MV2_Bcast_function == &MPIR_Knomial_Bcast_inter_node_wrapper_MV2 &&  
+            two_level_bcast != 1) {
+        /* knomial inter node wrapper algorithm relies on leader_comm, therefore, it
+         * most be called only on leader_comm */
+        MV2_Bcast_function = &MPIR_Bcast_binomial_MV2;
+    }
+
 skip_tuning_tables:
 #if defined CHANNEL_MRAIL_GEN2
     if (mv2_enable_zcpy_bcast == 0) { 
         MV2_Bcast_intra_node_function = &MPIR_Shmem_Bcast_MV2;
-        MV2_Bcast_function = &MPIR_Bcast_scatter_ring_allgather_MV2;
+        MV2_Bcast_function = &MPIR_Knomial_Bcast_inter_node_wrapper_MV2;
         two_level_bcast = 1;
     }
 #endif
diff --git a/src/mpi/coll/bcast_tuning.c b/src/mpi/coll/bcast_tuning.c
index 88e9ffb..88626e4 100644
--- a/src/mpi/coll/bcast_tuning.c
+++ b/src/mpi/coll/bcast_tuning.c
@@ -24,7 +24,7 @@ int mv2_bcast_indexed_num_ppn_conf = 1;
 int *mv2_size_bcast_indexed_tuning_table = NULL;
 mv2_bcast_indexed_tuning_table **mv2_bcast_indexed_thresholds_table = NULL;
 
-int MV2_set_bcast_tuning_table(int heterogeneity)
+int MV2_set_bcast_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
   
     if (mv2_use_indexed_tuning || mv2_use_indexed_bcast_tuning) {
@@ -585,14 +585,85 @@ int MV2_set_bcast_tuning_table(int heterogeneity)
       MV2_COLL_TUNING_FINISH_TABLE (bcast)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (bcast, 7)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (bcast)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (bcast, 6)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (bcast)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (bcast, 6)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  2, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  2, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  3, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 2,  3, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  4, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 4,  4, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 28, 2, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 28, 2, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (bcast)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Mayer */
+      MV2_COLL_TUNING_START_TABLE  (bcast, 8)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (bcast)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
       /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (bcast, 5)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (bcast)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -607,12 +678,14 @@ int MV2_set_bcast_tuning_table(int heterogeneity)
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 				    MV2_ARCH_IBM_POWER9, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /* Sierra Table: Use table for Ray temporarily */
-      MV2_COLL_TUNING_START_TABLE  (bcast, 8)
+      MV2_COLL_TUNING_START_TABLE  (bcast, 9)
       MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -698,13 +771,37 @@ int MV2_set_bcast_tuning_table(int heterogeneity)
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 		MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /*RI2 Table*/
-      MV2_COLL_TUNING_START_TABLE  (bcast, 3)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  4, GEN2__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  4, GEN2_CMA__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  5, GEN2__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 2,  5, GEN2_CMA__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF     (bcast, 28, 4, GEN2__RI2__28PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 28, 4, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_START_TABLE  (bcast, 6)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  5, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  5, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  6, GEN2__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 2,  6, GEN2_CMA__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 28, 6, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 28, 6, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (bcast)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+		MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /*RI2 Table*/
+      MV2_COLL_TUNING_START_TABLE  (bcast, 6)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 1,  5, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 1,  5, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 2,  6, GEN2__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 2,  6, GEN2_CMA__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (bcast, 28, 6, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (bcast, 28, 6, GEN2_CMA__RI2__28PPN)
       MV2_COLL_TUNING_FINISH_TABLE (bcast)
     }
     else {
diff --git a/src/mpi/coll/bcast_tuning.h b/src/mpi/coll/bcast_tuning.h
index fb1898b..3f6bfe7 100644
--- a/src/mpi/coll/bcast_tuning.h
+++ b/src/mpi/coll/bcast_tuning.h
@@ -169,7 +169,7 @@ extern int MPIR_Mcast_inter_node_MV2(void *buffer,
 #endif                          /* #if defined(_MCST_SUPPORT_) */
 
 /* Architecture detection tuning */
-int MV2_set_bcast_tuning_table(int heterogeneity);
+int MV2_set_bcast_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by bcast tuning table*/
 void MV2_cleanup_bcast_tuning_table();
diff --git a/src/mpi/coll/ch3_shmem_coll.c b/src/mpi/coll/ch3_shmem_coll.c
index fc8bba2..d43896f 100644
--- a/src/mpi/coll/ch3_shmem_coll.c
+++ b/src/mpi/coll/ch3_shmem_coll.c
@@ -243,6 +243,7 @@ int mv2_enable_shmem_collectives = 1;
 int mv2_allgather_ranking = 1;
 int mv2_enable_shmem_allreduce = 1;
 int shmem_coll_count_threshold=16; 
+int mv2_two_level_comm_early_init_threshold=2048; /* max process count for MPI_COMM_WORLD to create 2lvl comm in MPI_INIT */ 
 #if defined(_MCST_SUPPORT_)
 int mv2_use_mcast_allreduce = 1;
 int mv2_mcast_allreduce_small_msg_size = 1024;
@@ -415,9 +416,10 @@ int mv2_bcast_large_msg = MPIR_BCAST_LARGE_MSG;
 
 /* after these threshold, force ring algorithm */
 int mv2_allreduce_red_scat_allgather_algo_threshold = 524288;
+int mv2_allreduce_ring_algo_threshold = 1024*1024;
 int mv2_allgather_ring_algo_threshold = 131072;
 int mv2_allgather_cyclic_algo_threshold = 1024;
-int mv2_allreduce_cyclic_algo_threshold = 32768;
+int mv2_allreduce_cyclic_algo_threshold = 1024*1024;
 int mv2_redscat_cyclic_algo_threshold = 1024;
 int mv2_red_scat_ring_algo_threshold = 131072;
 
@@ -434,6 +436,8 @@ int mv2_use_pipelined_bcast = 1;
 int bcast_segment_size = 8192;
 int ibcast_segment_size = 8192;
 
+int mv2_allred_use_ring = 0;
+
 static char *mv2_kvs_name;
 
 int mv2_use_osu_collectives = 1;
@@ -514,11 +518,14 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_num_2level_comm_requests);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_num_2level_comm_success);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_num_shmem_coll_calls);
 
+/* Runtime parameter to enable/disable MPI_T timers */
+int mv2_enable_pvar_timer = 0;
+
 #undef FUNCNAME
 #define FUNCNAME MV2_collectives_arch_init
 #undef FCNAME
 #define FCNAME MPL_QUOTE(FUNCNAME)
-int MV2_collectives_arch_init(int heterogeneity)
+int MV2_collectives_arch_init(int heterogeneity, struct coll_info *colls_arch_hca)
 {
     int mpi_errno = MPI_SUCCESS;
 
@@ -537,17 +544,17 @@ int MV2_collectives_arch_init(int heterogeneity)
     MV2_Read_env_vars();
     
     if (mv2_use_osu_collectives) {
-      MV2_set_gather_tuning_table(heterogeneity);
-      MV2_set_bcast_tuning_table(heterogeneity);
-      MV2_set_alltoall_tuning_table(heterogeneity);
-      MV2_set_alltoallv_tuning_table(heterogeneity);
-      MV2_set_scatter_tuning_table(heterogeneity);
-      MV2_set_allreduce_tuning_table(heterogeneity);
-      MV2_set_reduce_tuning_table(heterogeneity);
-      MV2_set_allgather_tuning_table(heterogeneity);
-      MV2_set_red_scat_tuning_table(heterogeneity);
-      MV2_set_red_scat_block_tuning_table(heterogeneity);
-      MV2_set_allgatherv_tuning_table(heterogeneity);
+      MV2_set_gather_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_bcast_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_alltoall_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_alltoallv_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_scatter_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_allreduce_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_reduce_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_allgather_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_red_scat_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_red_scat_block_tuning_table(heterogeneity, colls_arch_hca);
+      MV2_set_allgatherv_tuning_table(heterogeneity, colls_arch_hca);
     }
     if (mv2_use_osu_nb_collectives) {
       MV2_set_igather_tuning_table(heterogeneity);
@@ -1167,7 +1174,7 @@ int MPIDI_CH3I_SHMEM_Helper_fn(MPIDI_PG_t * pg, int local_id, char **filename,
 
         PRINT_DEBUG(DEBUG_SHM_verbose>0, "Call MPIU_Calloc for %s\n", prefix);
 /* Ignoring optimal memory allocation for now */
-#if !defined(_X86_64_)
+#if !defined(__x86_64__)
 
 #define FSIZE_LIMIT 2147483640 /* 2G - c */
         {
@@ -1199,7 +1206,7 @@ int MPIDI_CH3I_SHMEM_Helper_fn(MPIDI_PG_t * pg, int local_id, char **filename,
             }
             MPIU_Free(buf);
         }
-#endif                          /* !defined(_X86_64_) */
+#endif  /* !defined(__x86_64__) */
 
         PRINT_DEBUG(DEBUG_SHM_verbose>0, "Call lseek for %s\n", prefix);
         if (lseek(*fd, 0, SEEK_SET) != 0) {
@@ -2317,6 +2324,13 @@ void MV2_Read_env_vars(void)
         else
             mv2_use_old_bcast = 0;
     }
+    if ((value = getenv("MV2_ALLRED_USE_RING")) != NULL) {
+        flag = (int) atoi(value);
+        if (flag > 0)
+            mv2_allred_use_ring = 1;
+        else
+            mv2_allred_use_ring = 0;
+    }
     if ((value = getenv("MV2_USE_OLD_ALLGATHER")) != NULL) {
         flag = (int) atoi(value);
         if (flag > 0)
@@ -2722,6 +2736,13 @@ void MV2_Read_env_vars(void)
 	}
     }
 
+    if ((value = getenv("MV2_ALLREDUCE_RING_ALGO_THRESHOLD")) != NULL) {
+        mv2_allreduce_ring_algo_threshold =
+            user_val_to_bytes(value, "MV2_ALLREDUCE_RING_ALGO_THRESHOLD");
+
+        if (mv2_allreduce_ring_algo_threshold < 0)
+            mv2_allreduce_ring_algo_threshold = 0;
+    }
     if ((value = getenv("MV2_ALLREDUCE_RED_SCAT_ALLGATHER_ALGO_THRESHOLD")) != NULL) {
         mv2_allreduce_red_scat_allgather_algo_threshold =
             user_val_to_bytes(value, "MV2_ALLREDUCE_RED_SCAT_ALLGATHER_ALGO_THRESHOLD");
@@ -2855,6 +2876,9 @@ void MV2_Read_env_vars(void)
     if ((value = getenv("MV2_TWO_LEVEL_COMM_THRESHOLD")) != NULL) {
         shmem_coll_count_threshold = atoi(value);
     }
+    if ((value = getenv("MV2_TWO_LEVEL_COMM_EARLY_INIT_THRESHOLD")) != NULL) {
+        mv2_two_level_comm_early_init_threshold = atoi(value);
+    }
 
     if(mv2_use_slot_shmem_coll == 0 || mv2_use_slot_shmem_bcast  ==0 
 #if defined(_MCST_SUPPORT_)
@@ -2864,7 +2888,13 @@ void MV2_Read_env_vars(void)
        /* Disable zero-copy bcast if slot-shmem, or slot-shmem-bcast params
         * are off, or when mcast is on */ 
        mv2_enable_zcpy_bcast = 0; 
-    } 
+    }
+
+#if ENABLE_PVAR_MV2
+    if((value = getenv("MV2_ENABLE_PVAR_TIMER")) !=NULL) {
+      mv2_enable_pvar_timer = atoi(value);
+    }
+#endif 
 
     /* Override MPICH2 default env values for Gatherv */
     MPIR_CVAR_GATHERV_INTER_SSEND_MIN_PROCS = 1024;
@@ -4269,7 +4299,7 @@ int mv2_shm_zcpy_reduce(shmem_info_t * shmem,
             is_cxx_uop = 1;
         } else {
 #endif                          /* defined(HAVE_CXX_BINDING) */
-            if ((op_ptr->language == MPID_LANG_C)) {
+            if (op_ptr->language == MPID_LANG_C) {
                 uop = (MPI_User_function *) op_ptr->function.c_function;
             } else {
                 uop = (MPI_User_function *) op_ptr->function.f77_function;
diff --git a/src/mpi/coll/common_tuning.h b/src/mpi/coll/common_tuning.h
index d1c112c..b71d22a 100644
--- a/src/mpi/coll/common_tuning.h
+++ b/src/mpi/coll/common_tuning.h
@@ -27,6 +27,8 @@
 
 #define MV2_COLL_TUNING_START_TABLE(_cname, _nconf)                             \
 {                                                                               \
+    colls_arch_hca[_cname].arch_type = table_arch_tmp;                     \
+    colls_arch_hca[_cname].hca_type = table_hca_tmp;                       \
     int idx = -1, nconf = _nconf;                                               \
     mv2_##_cname##_indexed_num_ppn_conf = nconf;                                \
     mv2_##_cname##_indexed_thresholds_table = MPIU_Malloc(                      \
@@ -44,6 +46,7 @@
   mv2_##_cname##_indexed_table_ppn_conf[idx] = _ppn;                            \
   mv2_size_##_cname##_indexed_tuning_table[idx] = _size;                        \
   table_ptrs[idx] = tmp_##_cname##_ppn;                                         \
+    
 
 #if defined(_SMP_CMA_)
 #define MV2_COLL_TUNING_ADD_CONF_CMA(_cname, _ppn, _size, _name)                \
@@ -82,6 +85,33 @@
     MPIU_Free(table_ptrs);                                          \
     return 0;                                                       \
 }
+
+#define FIND_PPN_INDEX(_cname, _locsize,_confindx,_parflag)             \
+{                                                                       \
+    int i=0;                                                            \
+    do {                                                                \
+        if (_locsize == mv2_##_cname##_indexed_table_ppn_conf[i]) {     \
+            _confindx=i;                                                \
+            _parflag=1;                                                 \
+            break;                                                      \
+        } else if (i < mv2_##_cname##_indexed_num_ppn_conf-1) {         \
+            if (_locsize > mv2_##_cname##_indexed_table_ppn_conf[i] &&  \
+                _locsize < mv2_##_cname##_indexed_table_ppn_conf[i+1]) { \
+                _confindx=i+1;                                          \
+                _parflag=1;                                             \
+                break;                                                  \
+            }                                                           \
+        } else if (i == mv2_##_cname##_indexed_num_ppn_conf-1) {        \
+            if (_locsize > mv2_##_cname##_indexed_table_ppn_conf[i]) {  \
+                _confindx=i;                                            \
+                _parflag=1;                                             \
+                break;                                                  \
+            }                                                           \
+        }                                                               \
+        i++;                                                            \
+    } while(i < mv2_##_cname##_indexed_num_ppn_conf);                   \
+}                                                                       
+
 /* defined enum for right hand side values used in mv2 collective algorithms
  selection. */
 enum mv2_bcast_tuning
diff --git a/src/mpi/coll/gather.c b/src/mpi/coll/gather.c
index 0ab0661..0facb29 100644
--- a/src/mpi/coll/gather.c
+++ b/src/mpi/coll/gather.c
@@ -905,11 +905,14 @@ int MPI_Gather(const void *sendbuf, int sendcount, MPI_Datatype sendtype,
     if (mpi_errno) goto fn_fail;
 #ifdef _OSU_MVAPICH_
     if (mv2_use_osu_collectives) {
-        mpi_errno = mv2_increment_shmem_coll_counter(comm_ptr);
-        if (mpi_errno) {
-            MPIR_ERR_POP(mpi_errno);
+        if(comm_ptr->dev.ch.allgather_comm_ok == 0) {
+            mpi_errno = mv2_increment_allgather_coll_counter(comm_ptr);
+            if (mpi_errno) {
+                MPIR_ERR_POP(mpi_errno);
+            }
         }
     }
+
 #endif /* _OSU_MVAPICH_ */
 
         
diff --git a/src/mpi/coll/gather_osu.c b/src/mpi/coll/gather_osu.c
index 5cd343c..52a43a9 100644
--- a/src/mpi/coll/gather_osu.c
+++ b/src/mpi/coll/gather_osu.c
@@ -17,8 +17,20 @@
 
 #include "mpiimpl.h"
 #include "datatype.h"
+#include "common_tuning.h"
 #include "gather_tuning.h"
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_pt2pt);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_direct_blk);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_two_level_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_limic_scheme_pt_pt);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_limic_scheme_pt_linear);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_limic_scheme_linear_pt);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_limic_scheme_linear_linear);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_limic_scheme_single_leader);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gather_intra_node_limic);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_gather_pt2pt);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_gather_direct);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_gather_direct_blk);
@@ -82,6 +94,7 @@ int MPIR_Gather_MV2_Direct(const void *sendbuf,
                                   MPI_Datatype recvtype,
                                   int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,gather,direct);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -98,6 +111,8 @@ int MPIR_Gather_MV2_Direct(const void *sendbuf,
 
     if (((rank == root) && (recvcnt == 0)) ||
         ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,direct);
         return MPI_SUCCESS;
     }
 
@@ -188,6 +203,7 @@ int MPIR_Gather_MV2_Direct(const void *sendbuf,
     /* check if multiple threads are calling this collective function */
     MPIU_CHKLMEM_FREEALL();
 
+    MPIR_TIMER_END(coll,gather,direct);
     return (mpi_errno);
 }
 
@@ -203,7 +219,8 @@ int MPIR_Gather_MV2_Direct_Blk(const void *sendbuf,
                                   int recvcnt,
                                   MPI_Datatype recvtype,
                                   int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
-{
+{   
+    MPIR_TIMER_START(coll,gather,direct_blk);
     int comm_size, rank;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -217,6 +234,8 @@ int MPIR_Gather_MV2_Direct_Blk(const void *sendbuf,
 
     if (((rank == root) && (recvcnt == 0)) ||
         ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,direct_blk);
         return MPI_SUCCESS;
     }
 
@@ -254,6 +273,8 @@ int MPIR_Gather_MV2_Direct_Blk(const void *sendbuf,
                                                  FCNAME,
                                                  __LINE__, MPI_ERR_OTHER,
                                                  "**fail", 0);
+
+                MPIR_TIMER_END(coll,gather,direct_blk);
                 return mpi_errno;
             }
             /* --END ERROR HANDLING-- */
@@ -280,6 +301,7 @@ int MPIR_Gather_MV2_Direct_Blk(const void *sendbuf,
     }
 
  fn_exit:
+    MPIR_TIMER_END(coll,gather,direct_blk);
     return mpi_errno;
  fn_fail:
     goto fn_exit;
@@ -317,6 +339,7 @@ int MPIR_pt_pt_intra_gather(const void *sendbuf, int sendcnt, MPI_Datatype sendt
                             MV2_Gather_function_ptr intra_node_fn_ptr,
                             MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,gather,pt2pt);
     int mpi_errno = MPI_SUCCESS;
     MPI_Aint recvtype_extent = 0;  /* Datatype extent */
     MPI_Aint true_lb, sendtype_true_extent, recvtype_true_extent;
@@ -352,6 +375,7 @@ int MPIR_pt_pt_intra_gather(const void *sendbuf, int sendcnt, MPI_Datatype sendt
                                       0, comm_ptr, errflag);
     }
 
+    MPIR_TIMER_END(coll,gather,pt2pt);
     return mpi_errno;
 
 }
@@ -369,7 +393,8 @@ int MPIR_Gather_MV2_two_level_Direct(const void *sendbuf,
                                             MPI_Datatype recvtype,
                                             int root,
                                             MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
-{
+{   
+    MPIR_TIMER_START(coll,gather,two_level_direct);
     void *leader_gather_buf = NULL;
     int comm_size, rank;
     int local_rank, local_size;
@@ -543,6 +568,8 @@ int MPIR_Gather_MV2_two_level_Direct(const void *sendbuf,
                                                      FCNAME, __LINE__,
                                                      MPI_ERR_OTHER,
                                                      "**nomem", 0);
+
+                    MPIR_TIMER_END(coll,gather,two_level_direct);
                     return mpi_errno;
                 }
             }
@@ -558,6 +585,8 @@ int MPIR_Gather_MV2_two_level_Direct(const void *sendbuf,
                                                      FCNAME, __LINE__,
                                                      MPI_ERR_OTHER,
                                                      "**nomem", 0);
+
+                    MPIR_TIMER_END(coll,gather,two_level_direct);
                     return mpi_errno;
                 }
             }
@@ -620,17 +649,51 @@ int MPIR_Gather_MV2_two_level_Direct(const void *sendbuf,
                                                      FCNAME, __LINE__,
                                                      MPI_ERR_OTHER,
                                                      "**nomem", 0);
+                    
+                    MPIR_TIMER_END(coll,gather,two_level_direct);
                     return mpi_errno;
                 }
             }
             if (root == leader_of_root) {
-                mpi_errno = MPIR_Gather_MV2_Direct(tmp_buf,
-                                                   nbytes * local_size,
-                                                   MPI_BYTE, recvbuf,
-                                                   recvcnt * local_size,
-                                                   recvtype, leader_root,
-                                                   leader_commptr, errflag);
-                 
+                if (comm_ptr->dev.ch.is_global_block != 1 || comm_ptr->dev.ch.is_blocked != 1) {
+                    /* cyclic process mapping */
+
+                    MPIU_Assert (comm_ptr->dev.ch.rank_list != NULL); 
+
+                    void * reorder_tmp_buf = NULL;
+                    if (leader_comm_rank == leader_root) {
+                        reorder_tmp_buf = MPIU_Malloc(nbytes * comm_size);
+                    }
+
+                    mpi_errno = MPIR_Gather_MV2_Direct(tmp_buf,
+                                                       nbytes * local_size,
+                                                       MPI_BYTE, reorder_tmp_buf,
+                                                       recvcnt * local_size,
+                                                       recvtype, leader_root,
+                                                       leader_commptr, errflag);
+
+                    if (leader_comm_rank == leader_root) {
+                        /* now reorder and place the results in recvbuf */
+                        void *src = NULL, *dst = NULL; int i;
+                        for (i = 0; i < comm_size; i++) {
+                            src = reorder_tmp_buf + i * nbytes;
+                            dst = recvbuf + comm_ptr->dev.ch.rank_list[i]*nbytes;
+                            if (dst == NULL) PRINT_ERROR("recvbuf=%p comm_ptr->dev.ch.rank_list[%d]=%d\n", 
+                                    recvbuf, i, comm_ptr->dev.ch.rank_list[i]);
+                            MPIU_Memcpy(dst, src, nbytes);
+                        }
+                        MPIU_Free(reorder_tmp_buf);
+                    }
+
+                } else {
+                    /* blocked (bunch) process mapping */
+                    mpi_errno = MPIR_Gather_MV2_Direct(tmp_buf,
+                                                       nbytes * local_size,
+                                                       MPI_BYTE, recvbuf,
+                                                       recvcnt * local_size,
+                                                       recvtype, leader_root,
+                                                       leader_commptr, errflag);
+                }
             } else {
                 mpi_errno = MPIR_Gather_MV2_Direct(tmp_buf, nbytes * local_size,
                                                    MPI_BYTE, leader_gather_buf,
@@ -662,9 +725,30 @@ int MPIR_Gather_MV2_two_level_Direct(const void *sendbuf,
         /* The root of the gather operation is not the node leader. Receive
          y* data from the node leader */
         MPIR_PVAR_INC(gather, two_level_direct, recv, recvcnt * comm_size, recvtype);
-        mpi_errno = MPIC_Recv(recvbuf, recvcnt * comm_size, recvtype,
-                                 leader_of_root, MPIR_GATHER_TAG, comm_ptr,
-                                 &status, errflag);
+        if (comm_ptr->dev.ch.is_global_block != 1 || comm_ptr->dev.ch.is_blocked != 1) {
+            /* cyclic process mapping */
+            MPIU_Assert (comm_ptr->dev.ch.rank_list != NULL); 
+            void * reorder_tmp_buf = MPIU_Malloc(nbytes * comm_size);
+            mpi_errno = MPIC_Recv(reorder_tmp_buf, recvcnt * comm_size, recvtype,
+                                     leader_of_root, MPIR_GATHER_TAG, comm_ptr,
+                                     &status, errflag);
+            /* now reorder and place the results in recvbuf */
+            void *src = NULL, *dst = NULL; int i;
+            for (i = 0; i < comm_size; i++) {
+                src = reorder_tmp_buf + i * nbytes;
+                dst = recvbuf + comm_ptr->dev.ch.rank_list[i]*nbytes;
+                if (dst == NULL) PRINT_ERROR("recvbuf=%p comm_ptr->dev.ch.rank_list[%d]=%d\n", 
+                        recvbuf, i, comm_ptr->dev.ch.rank_list[i]);
+                MPIU_Memcpy(dst, src, nbytes);
+            }
+            MPIU_Free(reorder_tmp_buf);
+        } else { 
+            /* blocked (bunch) process mapping */
+            mpi_errno = MPIC_Recv(recvbuf, recvcnt * comm_size, recvtype,
+                                     leader_of_root, MPIR_GATHER_TAG, comm_ptr,
+                                     &status, errflag);
+
+        }
         if (mpi_errno) {
             /* for communication errors, just record the error but 
                continue */
@@ -685,6 +769,7 @@ int MPIR_Gather_MV2_two_level_Direct(const void *sendbuf,
         }
     }
 
+    MPIR_TIMER_END(coll,gather,two_level_direct);
     return (mpi_errno);
 }
 
@@ -700,7 +785,7 @@ static int MPIR_Limic_Gather_Scheme_PT_PT(
                                          MV2_Gather_function_ptr intra_node_fn_ptr, 
                                          MPIR_Errflag_t *errflag) 
 {
-
+    MPIR_TIMER_START(coll,gather,limic_scheme_pt_pt);
     void *intra_tmp_buf = NULL;
     int rank;
     int local_size;
@@ -720,6 +805,8 @@ static int MPIR_Limic_Gather_Scheme_PT_PT(
 
     if (((rank == root) && (recvcnt == 0)) ||
             ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,limic_scheme_pt_pt);
         return MPI_SUCCESS;
     }
 
@@ -790,6 +877,8 @@ static int MPIR_Limic_Gather_Scheme_PT_PT(
                     MPIR_ERR_RECOVERABLE,
                     FCNAME, __LINE__, MPI_ERR_OTHER,
                     "**nomem", 0);
+
+            MPIR_TIMER_END(coll,gather,limic_scheme_pt_pt);
             return mpi_errno;
         }
 
@@ -833,6 +922,8 @@ static int MPIR_Limic_Gather_Scheme_PT_PT(
                             FCNAME, __LINE__,
                             MPI_ERR_OTHER,
                             "**nomem", 0);
+
+                    MPIR_TIMER_END(coll,gather,limic_scheme_pt_pt);
                     return mpi_errno;
                 }
 
@@ -917,6 +1008,7 @@ fn_fail:
         }
     }
 
+    MPIR_TIMER_END(coll,gather,limic_scheme_pt_pt);
     return (mpi_errno);
 }
 
@@ -930,7 +1022,8 @@ static int MPIR_Limic_Gather_Scheme_PT_LINEAR(
                                          int root, MPID_Comm * comm_ptr, 
                                          MV2_Gather_function_ptr intra_node_fn_ptr, 
                                          MPIR_Errflag_t *errflag) 
-{
+{   
+    MPIR_TIMER_START(coll,gather,limic_scheme_pt_linear);
     void *intra_tmp_buf = NULL;
     void *local_sendbuf=NULL;
     int rank;
@@ -955,6 +1048,8 @@ static int MPIR_Limic_Gather_Scheme_PT_LINEAR(
 
     if (((rank == root) && (recvcnt == 0)) ||
             ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,limic_scheme_pt_linear);
         return MPI_SUCCESS;
     }
 
@@ -1038,6 +1133,8 @@ static int MPIR_Limic_Gather_Scheme_PT_LINEAR(
                     MPIR_ERR_RECOVERABLE,
                     FCNAME, __LINE__, MPI_ERR_OTHER,
                     "**nomem", 0);
+
+            MPIR_TIMER_END(coll,gather,limic_scheme_pt_linear);
             return mpi_errno;
         }
 
@@ -1088,6 +1185,8 @@ static int MPIR_Limic_Gather_Scheme_PT_LINEAR(
                             FCNAME, __LINE__,
                             MPI_ERR_OTHER,
                             "**nomem", 0);
+
+                    MPIR_TIMER_END(coll,gather,limic_scheme_pt_linear);
                     return mpi_errno;
                 }
 
@@ -1172,6 +1271,7 @@ fn_fail:
         }
     }
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,gather,limic_scheme_pt_linear);
     return (mpi_errno);
 }
 
@@ -1186,6 +1286,7 @@ static int MPIR_Limic_Gather_Scheme_LINEAR_PT(
                                          MV2_Gather_function_ptr intra_node_fn_ptr, 
                                          MPIR_Errflag_t *errflag) 
 {
+    MPIR_TIMER_START(coll,gather,limic_scheme_linear_pt);
     void *intra_tmp_buf = NULL;
     int rank;
     int local_size;
@@ -1205,6 +1306,8 @@ static int MPIR_Limic_Gather_Scheme_LINEAR_PT(
 
     if (((rank == root) && (recvcnt == 0)) ||
             ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,limic_scheme_linear_pt);
         return MPI_SUCCESS;
     }
 
@@ -1275,6 +1378,8 @@ static int MPIR_Limic_Gather_Scheme_LINEAR_PT(
                     MPIR_ERR_RECOVERABLE,
                     FCNAME, __LINE__, MPI_ERR_OTHER,
                     "**nomem", 0);
+
+            MPIR_TIMER_END(coll,gather,limic_scheme_linear_pt);
             return mpi_errno;
         }
     }
@@ -1318,6 +1423,7 @@ fn_fail:
         }
     }
 
+    MPIR_TIMER_END(coll,gather,limic_scheme_linear_pt);
     return (mpi_errno);
 }
 
@@ -1331,6 +1437,7 @@ static int MPIR_Limic_Gather_Scheme_LINEAR_LINEAR(
                                          int root, MPID_Comm * comm_ptr, 
                                          MPIR_Errflag_t *errflag) 
 {
+    MPIR_TIMER_START(coll,gather,limic_scheme_linear_linear);
     void *intra_tmp_buf = NULL;
     void *local_sendbuf=NULL;
     int rank;
@@ -1355,6 +1462,8 @@ static int MPIR_Limic_Gather_Scheme_LINEAR_LINEAR(
 
     if (((rank == root) && (recvcnt == 0)) ||
             ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,limic_scheme_linear_linear);
         return MPI_SUCCESS;
     }
 
@@ -1438,6 +1547,8 @@ static int MPIR_Limic_Gather_Scheme_LINEAR_LINEAR(
                     MPIR_ERR_RECOVERABLE,
                     FCNAME, __LINE__, MPI_ERR_OTHER,
                     "**nomem", 0);
+
+            MPIR_TIMER_END(coll,gather,limic_scheme_linear_linear);
             return mpi_errno;
         }
 
@@ -1490,6 +1601,7 @@ fn_fail:
     }
     
     MPIU_CHKLMEM_FREEALL(); 
+    MPIR_TIMER_END(coll,gather,limic_scheme_linear_linear);
     return (mpi_errno);
 }
 
@@ -1503,6 +1615,7 @@ static int MPIR_Limic_Gather_Scheme_SINGLE_LEADER(
                                          int root, MPID_Comm * comm_ptr, 
                                          MPIR_Errflag_t *errflag) 
 {
+    MPIR_TIMER_START(coll,gather,limic_scheme_single_leader);
     void *local_sendbuf=NULL;
     int rank;
     int local_rank, local_size;
@@ -1523,6 +1636,8 @@ static int MPIR_Limic_Gather_Scheme_SINGLE_LEADER(
 
     if (((rank == root) && (recvcnt == 0)) ||
             ((rank != root) && (sendcnt == 0))) {
+
+        MPIR_TIMER_END(coll,gather,limic_scheme_single_leader);
         return MPI_SUCCESS;
     }
 
@@ -1580,6 +1695,7 @@ static int MPIR_Limic_Gather_Scheme_SINGLE_LEADER(
                     MPIR_ERR_RECOVERABLE,
                     FCNAME, __LINE__, MPI_ERR_OTHER,
                     "**nomem", 0);
+            MPIR_TIMER_END(coll,gather,limic_scheme_single_leader);
             return mpi_errno;
         }
 
@@ -1609,6 +1725,7 @@ static int MPIR_Limic_Gather_Scheme_SINGLE_LEADER(
 
 fn_fail:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,gather,limic_scheme_single_leader);
     return (mpi_errno);
 }
 
@@ -1621,6 +1738,7 @@ int MPIR_Intra_node_LIMIC_Gather_MV2(
                                      void *recvbuf, int recvcnt,MPI_Datatype recvtype,
                                      int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,gather,intra_node_limic);
     int mpi_errno = MPI_SUCCESS;
     MPI_Comm shmem_comm;
     MPID_Comm *shmem_commptr;
@@ -1751,6 +1869,7 @@ int MPIR_Intra_node_LIMIC_Gather_MV2(
 
 
   fn_fail:
+    MPIR_TIMER_END(coll,gather,intra_node_limic);
     return (mpi_errno);
 }
 
@@ -1820,14 +1939,9 @@ int MPIR_Gather_index_tuned_intra_MV2(const void *sendbuf,
             conf_index = 0;
             goto conf_check_end;
         }
-        do {
-            if (local_size == mv2_gather_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_gather_indexed_num_ppn_conf);
+
+        FIND_PPN_INDEX  (gather, local_size,conf_index, partial_sub_ok)
+
     }
 
     if (partial_sub_ok != 1) {
@@ -1955,8 +2069,9 @@ conf_check_end:
     } else
 #endif /*_ENABLE_CUDA_*/
 
-    if (comm_ptr->dev.ch.is_global_block == 1 && mv2_use_direct_gather == 1 &&
-            mv2_use_two_level_gather == 1 && comm_ptr->dev.ch.shmem_coll_ok == 1) {
+    if (comm_ptr->dev.ch.rank_list != NULL &&
+            mv2_use_direct_gather == 1 && mv2_use_two_level_gather == 1 &&
+            comm_ptr->dev.ch.shmem_coll_ok == 1) {
         /* Set intra-node function pt for gather_two_level */
         MV2_Gather_intra_node_function = mv2_gather_indexed_thresholds_table[conf_index][comm_size_index].
 	    intra_node[intra_node_algo_index].MV2_pt_Gather_function;
diff --git a/src/mpi/coll/gather_tuning.c b/src/mpi/coll/gather_tuning.c
index b29d90f..aa7115d 100644
--- a/src/mpi/coll/gather_tuning.c
+++ b/src/mpi/coll/gather_tuning.c
@@ -28,7 +28,7 @@ int mv2_gather_indexed_num_ppn_conf = 1;
 int *mv2_size_gather_indexed_tuning_table = NULL;
 mv2_gather_indexed_tuning_table **mv2_gather_indexed_thresholds_table = NULL;
 
-int MV2_set_gather_tuning_table(int heterogeneity)
+int MV2_set_gather_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
   
   if (mv2_use_indexed_tuning || mv2_use_indexed_gather_tuning) {
@@ -588,14 +588,89 @@ force_default_tables:
       MV2_COLL_TUNING_FINISH_TABLE (gather)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (gather, 7)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (gather)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (gather, 6)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (gather)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (gather, 8)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 28, 4, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 28, 4, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 32, 5, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 32, 5, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (gather)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Mayer */
+      MV2_COLL_TUNING_START_TABLE  (gather, 8)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (gather)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
       /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (gather, 5)
-      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (gather, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (gather, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (gather)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -616,12 +691,14 @@ force_default_tables:
       int pg_size = MPIDI_PG_Get_size(MPIDI_Process.my_pg);
       if (pg_size > 64) goto force_default_tables;
 
-      MV2_COLL_TUNING_START_TABLE  (gather, 8)
+      MV2_COLL_TUNING_START_TABLE  (gather, 9)
       MV2_COLL_TUNING_ADD_CONF     (gather, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (gather, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (gather, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (gather, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (gather, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (gather, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (gather, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (gather, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -708,14 +785,38 @@ force_default_tables:
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 		MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /*RI2 Table*/
-      MV2_COLL_TUNING_START_TABLE  (gather, 3)
+     MV2_COLL_TUNING_START_TABLE  (gather, 6)
       MV2_COLL_TUNING_ADD_CONF     (gather, 1,  4, GEN2__RI2__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (gather, 1,  4, GEN2_CMA__RI2__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (gather, 2,  5, GEN2__RI2__2PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (gather, 2,  5, GEN2_CMA__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF     (gather, 28, 4, GEN2__RI2__28PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 28, 4, GEN2_CMA__RI2__28PPN)
-      MV2_COLL_TUNING_FINISH_TABLE (gather)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 28, 5, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 28, 5, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (gather) 
+    }  	   
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+		MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /*RI2 Table*/
+     MV2_COLL_TUNING_START_TABLE  (gather, 6)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 1,  4, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 1,  4, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 2,  5, GEN2__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 2,  5, GEN2_CMA__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (gather, 28, 5, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (gather, 28, 5, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (gather) 
     }  	   
     else {
       /*Stampede Table*/
diff --git a/src/mpi/coll/gather_tuning.h b/src/mpi/coll/gather_tuning.h
index 2e7f0da..1fa5d07 100644
--- a/src/mpi/coll/gather_tuning.h
+++ b/src/mpi/coll/gather_tuning.h
@@ -122,7 +122,7 @@ extern int MPIR_Intra_node_LIMIC_Gather_MV2(const void *sendbuf,int sendcnt, MPI
 #endif /*#if defined(_SMP_LIMIC_)*/
 
 /* Architecture detection tuning */
-int MV2_set_gather_tuning_table(int heterogeneity);
+int MV2_set_gather_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 void MV2_cleanup_gather_tuning_table(); 
 
 /* Function used inside ch3_shmem_coll.c to tune gather thresholds */
diff --git a/src/mpi/coll/gatherv_osu.c b/src/mpi/coll/gatherv_osu.c
index eeaacd6..76295a0 100644
--- a/src/mpi/coll/gatherv_osu.c
+++ b/src/mpi/coll/gatherv_osu.c
@@ -19,6 +19,8 @@
 #include "datatype.h"
 #include "coll_shmem.h"
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_gatherv_algo);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_gatherv_algo);
 
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_gatherv_default_bytes_send);
@@ -48,6 +50,7 @@ int MPIR_Gatherv_MV2 (
 	MPID_Comm *comm_ptr,
         MPIR_Errflag_t *errflag )
 {
+    MPIR_TIMER_START(coll,gatherv,algo);
     int        comm_size, rank;
     int        mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -162,7 +165,9 @@ fn_exit:
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,gatherv,algo);
     return mpi_errno;
 fn_fail:
     goto fn_exit;
-}
+}
\ No newline at end of file
diff --git a/src/mpi/coll/iallreduce.c b/src/mpi/coll/iallreduce.c
index 4f04056..9287693 100644
--- a/src/mpi/coll/iallreduce.c
+++ b/src/mpi/coll/iallreduce.c
@@ -645,6 +645,7 @@ fn_fail:
 #if defined (_SHARP_SUPPORT_)
 #include "api/sharp_coll.h"
 #include "ibv_sharp.h"
+#include "iallreduce_tuning.h"
 extern int mv2_sharp_tuned_msg_size;
 #endif
 
diff --git a/src/mpi/coll/iallreduce_tuning.h b/src/mpi/coll/iallreduce_tuning.h
index 5850dfc..51ad9eb 100644
--- a/src/mpi/coll/iallreduce_tuning.h
+++ b/src/mpi/coll/iallreduce_tuning.h
@@ -72,4 +72,9 @@ extern int MPIR_Iallreduce_redscat_allgather(const void *sendbuf, void *recvbuf,
 extern int MPIR_Iallreduce_rec_dbl(const void *sendbuf, void *recvbuf, int count,
 				   MPI_Datatype datatype, MPI_Op op,
 				   MPID_Comm *comm_ptr, MPID_Sched_t s);
+#if defined (_SHARP_SUPPORT_)
+extern int MPIR_Sharp_Iallreduce_MV2 (const void *sendbuf, void *recvbuf, int count,
+                    MPI_Datatype datatype, MPI_Op op,
+                    MPID_Comm * comm_ptr, int *errflag, MPID_Request **req);
+#endif /*defined (_SHARP_SUPPORT_)*/
 #endif
diff --git a/src/mpi/coll/ibcast_osu.c b/src/mpi/coll/ibcast_osu.c
index dbea5e3..caa8bf7 100644
--- a/src/mpi/coll/ibcast_osu.c
+++ b/src/mpi/coll/ibcast_osu.c
@@ -45,7 +45,7 @@ static int MPIR_Ibcast_tune_helper_MV2(void *buffer, int count, MPI_Datatype dat
     MPIU_Assert(is_homogeneous);
     comm_size = comm_ptr->local_size;
 
-    if ((MV2_Ibcast_function == MPIR_Ibcast_scatter_rec_dbl_allgather)) {
+    if (MV2_Ibcast_function == MPIR_Ibcast_scatter_rec_dbl_allgather) {
         if (MPIU_is_pof2(comm_size, NULL)) {
             mpi_errno = MPIR_Ibcast_scatter_rec_dbl_allgather(buffer, count,
                                                               datatype, root, comm_ptr, s);
diff --git a/src/mpi/coll/red_scat_block_tuning.c b/src/mpi/coll/red_scat_block_tuning.c
index 8809166..893e016 100644
--- a/src/mpi/coll/red_scat_block_tuning.c
+++ b/src/mpi/coll/red_scat_block_tuning.c
@@ -22,7 +22,7 @@ enum {
 int mv2_size_red_scat_block_tuning_table = 0;
 mv2_red_scat_block_tuning_table *mv2_red_scat_block_thresholds_table = NULL;
 
-int MV2_set_red_scat_block_tuning_table(int heterogeneity)
+int MV2_set_red_scat_block_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
 #ifndef CHANNEL_PSM
     if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
diff --git a/src/mpi/coll/red_scat_block_tuning.h b/src/mpi/coll/red_scat_block_tuning.h
index a5cc509..fb912b0 100644
--- a/src/mpi/coll/red_scat_block_tuning.h
+++ b/src/mpi/coll/red_scat_block_tuning.h
@@ -72,7 +72,7 @@ extern int MPIR_Reduce_scatter_block_ring_MV2(const void *sendbuf,
                                          MPIR_Errflag_t *errflag);
 
 /* Architecture detection tuning */
-int MV2_set_red_scat_block_tuning_table(int heterogeneity);
+int MV2_set_red_scat_block_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by red_scat tuning table*/
 void MV2_cleanup_red_scat_block_tuning_table();
diff --git a/src/mpi/coll/red_scat_osu.c b/src/mpi/coll/red_scat_osu.c
index b8165fa..92dd826 100644
--- a/src/mpi/coll/red_scat_osu.c
+++ b/src/mpi/coll/red_scat_osu.c
@@ -22,6 +22,15 @@
 #include "red_scat_tuning.h"
 #include <unistd.h>
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_noncomm);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_basic);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_rec_halving);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_pairwise);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_non_comm);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_ring);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_scatter_ring_2lvl);
+
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_scatter_noncomm);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_scatter_basic);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_scatter_rec_halving);
@@ -117,6 +126,7 @@ static int MPIR_Reduce_scatter_noncomm_MV2(const void *sendbuf,
 										   MPI_Op op,
 										   MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,noncomm);
 	int mpi_errno = MPI_SUCCESS;
 	int mpi_errno_ret = MPI_SUCCESS;
 	int comm_size = comm_ptr->local_size;
@@ -153,7 +163,7 @@ static int MPIR_Reduce_scatter_noncomm_MV2(const void *sendbuf,
 			is_cxx_uop = 1;
 		} else
 #endif
-		if ((op_ptr->language == MPID_LANG_C))
+		if (op_ptr->language == MPID_LANG_C)
 			uop = (MPI_User_function *) op_ptr->function.c_function;
 		else
 			uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -267,6 +277,7 @@ static int MPIR_Reduce_scatter_noncomm_MV2(const void *sendbuf,
 		mpi_errno = mpi_errno_ret;
 	else if (*errflag)
 		MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+	MPIR_TIMER_END(coll,reduce_scatter,noncomm);
 	return mpi_errno;
   fn_fail:
 	goto fn_exit;
@@ -283,6 +294,7 @@ int MPIR_Reduce_Scatter_Basic_MV2(const void *sendbuf,
                                   MPI_Op op,
                                   MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,basic);
 	int mpi_errno = MPI_SUCCESS, i;
 	int rank, size;
 	int total_count;
@@ -328,6 +340,7 @@ int MPIR_Reduce_Scatter_Basic_MV2(const void *sendbuf,
 									datatype, op, root, comm_ptr, errflag);
 	}
 	if (MPI_SUCCESS != mpi_errno) {
+		MPIR_TIMER_END(coll,reduce_scatter,basic);
 		return mpi_errno;
 	}
 
@@ -356,6 +369,7 @@ int MPIR_Reduce_Scatter_Basic_MV2(const void *sendbuf,
             }
       }
         if (MPI_SUCCESS != mpi_errno) {
+        	MPIR_TIMER_END(coll,reduce_scatter,basic);
 			return mpi_errno;
 		}
 	} else {
@@ -382,6 +396,7 @@ int MPIR_Reduce_Scatter_Basic_MV2(const void *sendbuf,
             }
         }
 		if (MPI_SUCCESS != mpi_errno) {
+			MPIR_TIMER_END(coll,reduce_scatter,basic);
 			return mpi_errno;
 		}
 		MPIU_Free(displs);
@@ -389,6 +404,7 @@ int MPIR_Reduce_Scatter_Basic_MV2(const void *sendbuf,
 
   fn_exit:
 	MPIU_CHKLMEM_FREEALL();
+	MPIR_TIMER_END(coll,reduce_scatter,basic);
 	return mpi_errno;
   fn_fail:
 	goto fn_exit;
@@ -407,6 +423,7 @@ int MPIR_Reduce_scatter_Rec_Halving_MV2(const void *sendbuf,
                                         MPID_Comm * comm_ptr,
                                         MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,rec_halving);
 	int rank, comm_size, i;
 	MPI_Aint extent, true_extent, true_lb;
 	int *disps;
@@ -449,7 +466,7 @@ int MPIR_Reduce_scatter_Rec_Halving_MV2(const void *sendbuf,
 			is_cxx_uop = 1;
 		} else
 #endif
-		if ((op_ptr->language == MPID_LANG_C))
+		if (op_ptr->language == MPID_LANG_C)
 			uop = (MPI_User_function *) op_ptr->function.c_function;
 		else
 			uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -745,6 +762,8 @@ int MPIR_Reduce_scatter_Rec_Halving_MV2(const void *sendbuf,
 		mpi_errno = mpi_errno_ret;
 	else if (*errflag)
 		MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+	MPIR_TIMER_END(coll,reduce_scatter,rec_halving);
 	return mpi_errno;
   fn_fail:
 	goto fn_exit;
@@ -761,6 +780,7 @@ int MPIR_Reduce_scatter_Pair_Wise_MV2(const void *sendbuf,
                                       MPI_Op op,
                                       MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,pairwise);
 	int rank, comm_size, i;
 	MPI_Aint extent, true_extent, true_lb;
 	int *disps;
@@ -806,7 +826,7 @@ int MPIR_Reduce_scatter_Pair_Wise_MV2(const void *sendbuf,
 			is_cxx_uop = 1;
 		} else
 #endif
-		if ((op_ptr->language == MPID_LANG_C))
+		if (op_ptr->language == MPID_LANG_C)
 			uop = (MPI_User_function *) op_ptr->function.c_function;
 		else
 			uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -982,6 +1002,8 @@ int MPIR_Reduce_scatter_Pair_Wise_MV2(const void *sendbuf,
 		mpi_errno = mpi_errno_ret;
 	else if (*errflag)
 		MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+	MPIR_TIMER_END(coll,reduce_scatter,pairwise);
 	return mpi_errno;
   fn_fail:
 	goto fn_exit;
@@ -996,6 +1018,7 @@ int MPIR_Reduce_scatter_ring(const void* sendbuf, void* recvbuf,
     MPI_Op op, MPID_Comm *comm_ptr,
     MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,ring);
     int mpi_errno     = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int comm_size     = comm_ptr->local_size;
@@ -1139,6 +1162,8 @@ fn_exit:
     else if (*errflag != MPIR_ERR_NONE)
         MPIR_ERR_SET(mpi_errno, *errflag, "**coll_fail");
     /* --END ERROR HANDLING-- */
+
+    MPIR_TIMER_END(coll,reduce_scatter,ring);
     return mpi_errno;
 fn_fail:
     goto fn_exit;
@@ -1153,11 +1178,13 @@ int MPIR_Reduce_scatter_ring_2lvl(const void* sendbuf, void* recvbuf,
         MPI_Op op, MPID_Comm *comm_ptr,
         MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,ring_2lvl);
     int mpi_errno     = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int comm_size     = comm_ptr->local_size;
 
     if (comm_ptr->dev.ch.rank_list == NULL) {
+    	MPIR_TIMER_END(coll,reduce_scatter,ring_2lvl);
         return MPIR_Reduce_scatter_ring(
                             sendbuf, recvbuf, recvcnts, datatype,
                             op, comm_ptr, errflag);
@@ -1308,6 +1335,8 @@ fn_exit:
     else if (*errflag != MPIR_ERR_NONE)
         MPIR_ERR_SET(mpi_errno, *errflag, "**coll_fail");
     /* --END ERROR HANDLING-- */
+
+    MPIR_TIMER_END(coll,reduce_scatter,ring_2lvl);
     return mpi_errno;
 fn_fail:
     goto fn_exit;
@@ -1324,6 +1353,7 @@ static int MPIR_Reduce_scatter_non_comm_MV2(const void *sendbuf,
 											MPI_Op op,
 											MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+	MPIR_TIMER_START(coll,reduce_scatter,non_comm);
 	int rank, comm_size, i;
 	MPI_Aint extent, true_extent, true_lb;
 	int *disps;
@@ -1372,7 +1402,7 @@ static int MPIR_Reduce_scatter_non_comm_MV2(const void *sendbuf,
 			is_cxx_uop = 1;
 		} else
 #endif
-		if ((op_ptr->language == MPID_LANG_C))
+		if (op_ptr->language == MPID_LANG_C)
 			uop = (MPI_User_function *) op_ptr->function.c_function;
 		else
 			uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -1704,6 +1734,8 @@ static int MPIR_Reduce_scatter_non_comm_MV2(const void *sendbuf,
 		mpi_errno = mpi_errno_ret;
 	else if (*errflag)
 		MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+	MPIR_TIMER_END(coll,reduce_scatter,non_comm);
 	return mpi_errno;
   fn_fail:
 	goto fn_exit;
diff --git a/src/mpi/coll/red_scat_tuning.c b/src/mpi/coll/red_scat_tuning.c
index 1b22014..365789a 100644
--- a/src/mpi/coll/red_scat_tuning.c
+++ b/src/mpi/coll/red_scat_tuning.c
@@ -25,7 +25,7 @@ enum {
 int mv2_size_red_scat_tuning_table = 0;
 mv2_red_scat_tuning_table *mv2_red_scat_thresholds_table = NULL;
 
-int MV2_set_red_scat_tuning_table(int heterogeneity)
+int MV2_set_red_scat_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
 #ifndef CHANNEL_PSM
     if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
diff --git a/src/mpi/coll/red_scat_tuning.h b/src/mpi/coll/red_scat_tuning.h
index c346629..4740ac7 100644
--- a/src/mpi/coll/red_scat_tuning.h
+++ b/src/mpi/coll/red_scat_tuning.h
@@ -93,7 +93,7 @@ extern int MPIR_Reduce_scatter_ring_2lvl(const void *sendbuf,
                                          MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
 
 /* Architecture detection tuning */
-int MV2_set_red_scat_tuning_table(int heterogeneity);
+int MV2_set_red_scat_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by red_scat tuning table*/
 void MV2_cleanup_red_scat_tuning_table();
diff --git a/src/mpi/coll/reduce.c b/src/mpi/coll/reduce.c
index 0a6885e..a603055 100644
--- a/src/mpi/coll/reduce.c
+++ b/src/mpi/coll/reduce.c
@@ -1261,6 +1261,12 @@ int MPI_Reduce(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datat
 #ifdef _OSU_MVAPICH_
     if (mv2_use_osu_collectives) {
         mpi_errno = mv2_increment_shmem_coll_counter(comm_ptr);
+        if(comm_ptr->dev.ch.allgather_comm_ok == 0) {
+            mpi_errno = mv2_increment_allgather_coll_counter(comm_ptr);
+            if (mpi_errno) {
+                MPIR_ERR_POP(mpi_errno);
+            }
+        }
         if (mpi_errno) {
             MPIR_ERR_POP(mpi_errno);
         }
diff --git a/src/mpi/coll/reduce_osu.c b/src/mpi/coll/reduce_osu.c
index f92089f..bdc0cf4 100644
--- a/src/mpi/coll/reduce_osu.c
+++ b/src/mpi/coll/reduce_osu.c
@@ -19,13 +19,21 @@
 
 #include "mpiimpl.h"
 #include "coll_shmem.h"
+#include "common_tuning.h"
 #include "reduce_tuning.h"
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_redscat_gather);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_shmem);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_knomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_reduce_zcpy);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_binomial);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_redscat_gather);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_shmem);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_knomial);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_zcpy);
+MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_subcomm);
 
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_binomial_bytes_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_reduce_redscat_gather_bytes_send);
@@ -69,6 +77,7 @@ int (*MV2_Reduce_intra_function)(const void *sendbuf,
                                  int root,
                                  MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)=NULL;
 
+static int (*MPIR_Rank_list_mapper)(MPID_Comm *, int)=NULL;
 /* This function implements a binomial tree reduce.
 
    Cost = lgp.alpha + n.lgp.beta + n.lgp.gamma
@@ -85,14 +94,16 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
                                     int root,
                                     MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,reduce,binomial);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     MPI_Status status;
     int comm_size, rank, is_commutative;
+    int root_rank_list_index, i;
     int mask, relrank, source, lroot;
     MPI_User_function *uop;
     MPI_Aint true_lb, true_extent, extent;
-    void *tmp_buf;
+    void *tmp_buf = NULL, *tmp_rcv_buf = NULL;
     MPID_Op *op_ptr;
 #ifdef HAVE_CXX_BINDING
     int is_cxx_uop = 0;
@@ -103,10 +114,12 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_reduce_binomial, 1);
 
     if (count == 0)
+    { 
+        MPIR_TIMER_END(coll,reduce,binomial);
         return MPI_SUCCESS;
+    }
 
     comm_size = comm_ptr->local_size;
-    rank = comm_ptr->rank;
 
     /* set op_errno to 0. stored in perthread structure */
     MPIU_THREADPRIV_GET;
@@ -134,32 +147,59 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else
 #endif
-        if ((op_ptr->language == MPID_LANG_C))
+        if (op_ptr->language == MPID_LANG_C)
             uop = (MPI_User_function *) op_ptr->function.c_function;
         else
             uop = (MPI_User_function *) op_ptr->function.f77_function;
     }
 
+    if (comm_ptr->dev.ch.rank_list == NULL || is_commutative != 1 ||
+            comm_ptr->dev.ch.is_blocked == 1) {
+        rank = comm_ptr->rank;
+        MPIR_Rank_list_mapper = &Bunch_Rank_list_mapper;
+        root_rank_list_index = root;
+    } else {
+        /* my index on rank_list */
+        rank = comm_ptr->dev.ch.rank_list_index;
+        MPIU_Assert(rank >= 0);
+        MPIR_Rank_list_mapper = &Cyclic_Rank_list_mapper;
+
+        /* now find the root's index on rank_list */
+        for (i = 0; i < comm_size; i++) {
+            if (comm_ptr->dev.ch.rank_list[i] == root) 
+                break;
+        }
+        root_rank_list_index = i;
+    }
+
     /* I think this is the worse case, so we can avoid an assert() 
      * inside the for loop */
     /* should be buf+{this}? */
     MPIU_Ensure_Aint_fits_in_pointer(count * MPIR_MAX(extent, true_extent));
 
     MPIU_CHKLMEM_MALLOC(tmp_buf, void *,
-                        count * (MPIR_MAX(extent, true_extent)), mpi_errno,
+                        count * (MPIR_MAX(extent, true_extent)) * 2, mpi_errno,
                         "temporary buffer");
-    /* adjust for potential negative lower bound in datatype */
-    tmp_buf = (void *) ((char *) tmp_buf - true_lb);
 
     /* If I'm not the root, then my recvbuf may not be valid, therefore
-       I have to allocate a temporary one */
-    if ((rank != root) && (sendbuf != MPI_IN_PLACE)) {
-        MPIU_CHKLMEM_MALLOC(recvbuf, void *,
-                            count * (MPIR_MAX(extent, true_extent)),
-                            mpi_errno, "receive buffer");
-        recvbuf = (void *) ((char *) recvbuf - true_lb);
+     * use a temporary buffer */
+    if (rank != root_rank_list_index) {
+        if (sendbuf == MPI_IN_PLACE) {
+            tmp_rcv_buf  = recvbuf;
+        }
+        recvbuf = (void *) ((char *)(tmp_buf + count * (MPIR_MAX(extent, true_extent))) - true_lb);
+        if (sendbuf == MPI_IN_PLACE) {
+            mpi_errno = MPIR_Localcopy(tmp_rcv_buf, count, datatype, recvbuf,
+                    count, datatype);
+            if (mpi_errno) {
+                MPIR_ERR_POP(mpi_errno);
+            }
+        }
     }
 
+    /* adjust for potential negative lower bound in datatype */
+    tmp_buf = (void *) ((char *) tmp_buf - true_lb);
+
     if ((sendbuf != MPI_IN_PLACE) && (sendbuf != recvbuf)) {
         mpi_errno = MPIR_Localcopy(sendbuf, count, datatype, recvbuf,
                                    count, datatype);
@@ -201,7 +241,7 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
      */
     mask = 0x1;
     if (is_commutative)
-        lroot = root;
+        lroot = root_rank_list_index;
     else
         lroot = 0;
     relrank = (rank - lroot + comm_size) % comm_size;
@@ -213,9 +253,9 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
             if (source < comm_size) {
                 source = (source + lroot) % comm_size;
                 MPIR_PVAR_INC(reduce, binomial, recv, count, datatype);
-                mpi_errno = MPIC_Recv(tmp_buf, count, datatype, source,
-                                         MPIR_REDUCE_TAG, comm_ptr, &status,
-                                         errflag);
+                mpi_errno = MPIC_Recv(tmp_buf, count,
+                        datatype,MPIR_Rank_list_mapper(comm_ptr, source),
+                        MPIR_REDUCE_TAG, comm_ptr, &status, errflag);
                 if (mpi_errno) {
                     /* for communication errors, just record the error but continue */
                     *errflag = MPIR_ERR_GET_CLASS(mpi_errno);
@@ -254,7 +294,8 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
             source = ((relrank & (~mask)) + lroot) % comm_size;
             MPIR_PVAR_INC(reduce, binomial, send, count, datatype);
             mpi_errno = MPIC_Send(recvbuf, count, datatype,
-                                     source, MPIR_REDUCE_TAG, comm_ptr, errflag);
+                                     MPIR_Rank_list_mapper(comm_ptr, source),
+                                     MPIR_REDUCE_TAG, comm_ptr, errflag);
             if (mpi_errno) {
                 /* for communication errors, just record the error but continue */
                 *errflag = MPIR_ERR_GET_CLASS(mpi_errno);
@@ -266,15 +307,17 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
         mask <<= 1;
     }
 
-    if (!is_commutative && (root != 0)) {
+    if (!is_commutative && (root_rank_list_index != 0)) {
         if (rank == 0) {
             MPIR_PVAR_INC(reduce, binomial, send, count, datatype);
-            mpi_errno = MPIC_Send(recvbuf, count, datatype, root,
-                                     MPIR_REDUCE_TAG, comm_ptr, errflag);
-        } else if (rank == root) {
+            mpi_errno = MPIC_Send(recvbuf, count, datatype,
+                    MPIR_Rank_list_mapper(comm_ptr, root_rank_list_index), MPIR_REDUCE_TAG,
+                    comm_ptr, errflag);
+        } else if (rank == root_rank_list_index) {
             MPIR_PVAR_INC(reduce, binomial, recv, count, datatype);
-            mpi_errno = MPIC_Recv(recvbuf, count, datatype, 0,
-                                     MPIR_REDUCE_TAG, comm_ptr, &status, errflag);
+            mpi_errno = MPIC_Recv(recvbuf, count, datatype,
+                    MPIR_Rank_list_mapper(comm_ptr, 0), MPIR_REDUCE_TAG,
+                    comm_ptr, &status, errflag);
         }
         if (mpi_errno) {
             /* for communication errors, just record the error but continue */
@@ -299,6 +342,8 @@ int MPIR_Reduce_binomial_MV2(const void *sendbuf,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,reduce,binomial);  
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -343,6 +388,7 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
                                           int root,
                                           MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,reduce,redscat_gather);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int comm_size, rank, pof2, rem, newrank;
@@ -350,6 +396,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
     int recv_idx, last_idx = 0, newdst;
     int dst, send_cnt, recv_cnt, newroot, newdst_tree_root, newroot_tree_root;
     MPI_User_function *uop;
+    int is_commutative;
+    int root_rank_list_index;
     MPI_Aint true_lb, true_extent, extent;
     void *tmp_buf;
     MPID_Op *op_ptr;
@@ -362,7 +410,6 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_reduce_redscat_gather, 1);
 
     comm_size = comm_ptr->local_size;
-    rank = comm_ptr->rank;
 
     /* set op_errno to 0. stored in perthread structure */
     MPIU_THREADPRIV_GET;
@@ -374,10 +421,15 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
     MPID_Datatype_get_extent_macro(datatype, extent);
 
     if (HANDLE_GET_KIND(op) == HANDLE_KIND_BUILTIN) {
+        is_commutative = 1;
         /* get the function by indexing into the op table */
         uop = MPIR_Op_table[op % 16 - 1];
     } else {
         MPID_Op_get_ptr(op, op_ptr);
+        if (op_ptr->kind == MPID_OP_USER_NONCOMMUTE)
+            is_commutative = 0;
+        else
+            is_commutative = 1;
 
 #ifdef HAVE_CXX_BINDING
         if (op_ptr->language == MPID_LANG_CXX) {
@@ -385,12 +437,31 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else
 #endif
-        if ((op_ptr->language == MPID_LANG_C))
+        if (op_ptr->language == MPID_LANG_C)
             uop = (MPI_User_function *) op_ptr->function.c_function;
         else
             uop = (MPI_User_function *) op_ptr->function.f77_function;
     }
 
+    if (comm_ptr->dev.ch.rank_list == NULL || is_commutative != 1 ||
+            comm_ptr->dev.ch.is_blocked == 1) {
+        rank = comm_ptr->rank;
+        MPIR_Rank_list_mapper = &Bunch_Rank_list_mapper;
+        root_rank_list_index = root;
+    } else {
+        /* my index on rank_list */
+        rank = comm_ptr->dev.ch.rank_list_index;
+        MPIU_Assert(rank >= 0);
+        MPIR_Rank_list_mapper = &Cyclic_Rank_list_mapper;
+
+        /* now find the root's index on rank_list */
+        for (i = 0; i < comm_size; i++) {
+            if (comm_ptr->dev.ch.rank_list[i] == root) 
+                break;
+        }
+        root_rank_list_index = i;
+    }
+
     /* I think this is the worse case, so we can avoid an assert() 
      * inside the for loop */
     /* should be buf+{this}? */
@@ -404,7 +475,7 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
 
     /* If I'm not the root, then my recvbuf may not be valid, therefore
        I have to allocate a temporary one */
-    if (rank != root && sendbuf != MPI_IN_PLACE) {
+    if (rank != root_rank_list_index && sendbuf != MPI_IN_PLACE) {
         MPIU_CHKLMEM_MALLOC(recvbuf, void *,
                             count * (MPIR_MAX(extent, true_extent)),
                             mpi_errno, "receive buffer");
@@ -444,7 +515,7 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
         if (rank % 2 != 0) {    /* odd */
             MPIR_PVAR_INC(reduce, redscat_gather, send, count, datatype);
             mpi_errno = MPIC_Send(recvbuf, count,
-                                     datatype, rank - 1,
+                                     datatype, MPIR_Rank_list_mapper(comm_ptr, rank - 1),
                                      MPIR_REDUCE_TAG, comm_ptr, errflag);
             if (mpi_errno) {
                 /* for communication errors, just record the error but continue */
@@ -460,7 +531,7 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
         } else {                /* even */
             MPIR_PVAR_INC(reduce, redscat_gather, recv, count, datatype);
             mpi_errno = MPIC_Recv(tmp_buf, count,
-                                     datatype, rank + 1,
+                                     datatype, MPIR_Rank_list_mapper(comm_ptr, rank + 1),
                                      MPIR_REDUCE_TAG, comm_ptr,
                                      MPI_STATUS_IGNORE, errflag);
             if (mpi_errno) {
@@ -539,10 +610,12 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
             mpi_errno = MPIC_Sendrecv((char *) recvbuf +
                                          disps[send_idx] * extent,
                                          send_cnt, datatype,
-                                         dst, MPIR_REDUCE_TAG,
+                                         MPIR_Rank_list_mapper(comm_ptr, dst), 
+                                         MPIR_REDUCE_TAG,
                                          (char *) tmp_buf +
                                          disps[recv_idx] * extent,
-                                         recv_cnt, datatype, dst,
+                                         recv_cnt, datatype, 
+                                         MPIR_Rank_list_mapper(comm_ptr, dst),
                                          MPIR_REDUCE_TAG, comm_ptr,
                                          MPI_STATUS_IGNORE, errflag);
             if (mpi_errno) {
@@ -588,9 +661,9 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
        computation above? If so, send data from newrank=0 to
        the root and have root take on the role of newrank = 0 */
 
-    if (root < 2 * rem) {
-        if (root % 2 != 0) {
-            if (rank == root) { /* recv */
+    if (root_rank_list_index < 2 * rem) {
+        if (root_rank_list_index % 2 != 0) {
+            if (rank == root_rank_list_index) { /* recv */
                 /* initialize the arrays that weren't initialized */
                 for (i = 0; i < (pof2 - 1); i++)
                     cnts[i] = count / pof2;
@@ -602,7 +675,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
 
                 MPIR_PVAR_INC(reduce, redscat_gather, recv, cnts[0], datatype);
                 mpi_errno = MPIC_Recv(recvbuf, cnts[0], datatype,
-                                         0, MPIR_REDUCE_TAG, comm_ptr,
+                                         MPIR_Rank_list_mapper(comm_ptr, 0), 
+                                         MPIR_REDUCE_TAG, comm_ptr,
                                          MPI_STATUS_IGNORE, errflag);
                 if (mpi_errno) {
                     /* for communication errors, just record the error but continue */
@@ -616,7 +690,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
             } else if (newrank == 0) {  /* send */
                 MPIR_PVAR_INC(reduce, redscat_gather, send, cnts[0], datatype);
                 mpi_errno = MPIC_Send(recvbuf, cnts[0], datatype,
-                                         root, MPIR_REDUCE_TAG, comm_ptr, errflag);
+                                         MPIR_Rank_list_mapper(comm_ptr, root_rank_list_index), 
+                                         MPIR_REDUCE_TAG, comm_ptr, errflag);
                 if (mpi_errno) {
                     /* for communication errors, just record the error but continue */
                     *errflag = MPIR_ERR_GET_CLASS(mpi_errno);
@@ -627,9 +702,9 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
             }
             newroot = 0;
         } else
-            newroot = root / 2;
+            newroot = root_rank_list_index / 2;
     } else
-        newroot = root - rem;
+        newroot = root_rank_list_index - rem;
 
     if (newrank != -1) {
         j = 0;
@@ -647,8 +722,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
             dst = (newdst < rem) ? newdst * 2 : newdst + rem;
             /* if root is playing the role of newdst=0, adjust for
                it */
-            if ((newdst == 0) && (root < 2 * rem) && (root % 2 != 0))
-                dst = root;
+            if ((newdst == 0) && (root_rank_list_index < 2 * rem) && (root_rank_list_index % 2 != 0))
+                dst = root_rank_list_index;
 
             /* if the root of newdst's half of the tree is the
                same as the root of newroot's half of the tree, send to
@@ -688,7 +763,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
                 mpi_errno = MPIC_Send((char *) recvbuf +
                                          disps[send_idx] * extent,
                                          send_cnt, datatype,
-                                         dst, MPIR_REDUCE_TAG, comm_ptr, errflag);
+                                         MPIR_Rank_list_mapper(comm_ptr, dst), 
+                                         MPIR_REDUCE_TAG, comm_ptr, errflag);
                 if (mpi_errno) {
                     /* for communication errors, just record the error but continue */
                     *errflag = MPIR_ERR_GET_CLASS(mpi_errno);
@@ -703,7 +779,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
                 MPIR_PVAR_INC(reduce, redscat_gather, recv, recv_cnt, datatype);
                 mpi_errno = MPIC_Recv((char *) recvbuf +
                                          disps[recv_idx] * extent,
-                                         recv_cnt, datatype, dst,
+                                         recv_cnt, datatype, 
+                                         MPIR_Rank_list_mapper(comm_ptr, dst),
                                          MPIR_REDUCE_TAG, comm_ptr,
                                          MPI_STATUS_IGNORE, errflag);
                 if (mpi_errno) {
@@ -737,6 +814,8 @@ int MPIR_Reduce_redscat_gather_MV2(const void *sendbuf,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,reduce,redscat_gather);  
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -753,6 +832,7 @@ int MPIR_Reduce_shmem_MV2(const void *sendbuf,
                           MPI_Op op,
                           int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,reduce,shmem);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int i, stride, local_rank, local_size, shmem_comm_rank;
@@ -808,7 +888,7 @@ int MPIR_Reduce_shmem_MV2(const void *sendbuf,
             is_cxx_uop = 1;
         } else {
 #endif                          /* defined(HAVE_CXX_BINDING) */
-            if ((op_ptr->language == MPID_LANG_C)) {
+            if (op_ptr->language == MPID_LANG_C) {
                 uop = (MPI_User_function *) op_ptr->function.c_function;
             } else {
                 uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -858,6 +938,8 @@ int MPIR_Reduce_shmem_MV2(const void *sendbuf,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,reduce,shmem);  
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -949,6 +1031,7 @@ int MPIR_Reduce_knomial_MV2 (
         MPID_Comm *comm_ptr,
         MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,reduce,knomial);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int rank, is_commutative;
@@ -972,7 +1055,11 @@ int MPIR_Reduce_knomial_MV2 (
 
     MPIR_T_PVAR_COUNTER_INC(MV2, mv2_coll_reduce_knomial, 1);
 
-    if (count == 0) return MPI_SUCCESS;
+    if (count == 0) 
+    {
+      MPIR_TIMER_END(coll,reduce,knomial);
+      return MPI_SUCCESS;
+    }
 
     rank = comm_ptr->rank;
 
@@ -1004,7 +1091,7 @@ int MPIR_Reduce_knomial_MV2 (
         }
         else
 #endif
-            if ((op_ptr->language == MPID_LANG_C))
+            if (op_ptr->language == MPID_LANG_C)
                 uop = (MPI_User_function *) op_ptr->function.c_function;
             else
                 uop = (MPI_User_function *) op_ptr->function.f77_function;
@@ -1126,6 +1213,8 @@ fn_exit:
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,reduce,knomial);  
     return mpi_errno;
 fn_fail:
     goto fn_exit;
@@ -1196,6 +1285,7 @@ int MPIR_Reduce_Zcpy_MV2(const void *sendbuf,
                                      int root,
                                      MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,reduce,zcpy);
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
     int my_rank, local_rank;
@@ -1310,6 +1400,8 @@ int MPIR_Reduce_Zcpy_MV2(const void *sendbuf,
         mpi_errno = mpi_errno_ret;
     else if (*errflag)
         MPIR_ERR_SET(mpi_errno, MPI_ERR_OTHER, "**coll_fail");
+
+    MPIR_TIMER_END(coll,reduce,zcpy);  
     return mpi_errno;
 }
 #endif /* CHANNEL_MRAIL_GEN2 */
@@ -1798,14 +1890,7 @@ int MPIR_Reduce_index_tuned_intra_MV2(const void *sendbuf,
             is_two_level = 1;
             goto skip_tuning_tables;
         }
-        do {
-            if (local_size == mv2_reduce_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_reduce_indexed_num_ppn_conf);
+         FIND_PPN_INDEX  (reduce, local_size,conf_index, partial_sub_ok)
     }
 
     if (partial_sub_ok != 1) {
@@ -2031,7 +2116,8 @@ int MPIR_Reduce_MV2(const void *sendbuf,
     int sendtype_size;
     int is_two_level = 0;
 
-    
+    MPIR_T_PVAR_COMM_COUNTER_INC(MV2,mv2_coll_reduce_subcomm,1,comm_ptr);
+ 
     if (mv2_use_indexed_tuning || mv2_use_indexed_reduce_tuning) {
 	MPIR_Reduce_index_tuned_intra_MV2(sendbuf, recvbuf, count, 
 					  datatype, op, root, comm_ptr, errflag);
diff --git a/src/mpi/coll/reduce_tuning.c b/src/mpi/coll/reduce_tuning.c
index 8adb7f8..f152918 100644
--- a/src/mpi/coll/reduce_tuning.c
+++ b/src/mpi/coll/reduce_tuning.c
@@ -25,7 +25,7 @@ int mv2_reduce_indexed_num_ppn_conf = 1;
 int *mv2_size_reduce_indexed_tuning_table = NULL;
 mv2_reduce_indexed_tuning_table **mv2_reduce_indexed_thresholds_table = NULL;
 
-int MV2_set_reduce_tuning_table(int heterogeneity)
+int MV2_set_reduce_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
   if (mv2_use_indexed_tuning || mv2_use_indexed_reduce_tuning) {
     int agg_table_sum = 0;
@@ -585,14 +585,89 @@ force_default_tables:
       MV2_COLL_TUNING_FINISH_TABLE (reduce)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (reduce, 7)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (reduce)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (reduce, 6)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (reduce)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (reduce, 8)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 28, 4, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 28, 4, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 32, 4, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 32, 4, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 56, 4, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 56, 4, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (reduce)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Mayer */
+      MV2_COLL_TUNING_START_TABLE  (reduce, 8)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (reduce)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
       /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (reduce, 5)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (reduce)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -611,13 +686,15 @@ force_default_tables:
 				    MV2_ARCH_IBM_POWER9, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /* Sierra Table */
 
-      MV2_COLL_TUNING_START_TABLE  (reduce, 8)
+      MV2_COLL_TUNING_START_TABLE  (reduce, 9)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 2,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -703,14 +780,36 @@ force_default_tables:
 
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 		MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
-      /*RI2 Table*/
-      MV2_COLL_TUNING_START_TABLE  (reduce, 3)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  4, GEN2__RI2__1PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  4, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_START_TABLE  (reduce, 6)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  5, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  5, GEN2_CMA__RI2__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  5, GEN2__RI2__2PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 2,  5, GEN2_CMA__RI2__2PPN)
-      MV2_COLL_TUNING_ADD_CONF     (reduce, 28, 4, GEN2__RI2__28PPN)
-      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 28, 4, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 28, 6, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 28, 6, GEN2_CMA__RI2__28PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (reduce)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+		MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      MV2_COLL_TUNING_START_TABLE  (reduce, 6)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  5, GEN2__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 1,  5, GEN2_CMA__RI2__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  5, GEN2__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 2,  5, GEN2_CMA__RI2__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  5, GEN2__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 4,  5, GEN2_CMA__RI2__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  5, GEN2__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 8,  5, GEN2_CMA__RI2__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 5, GEN2__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 16, 5, GEN2_CMA__RI2__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 28, 6, GEN2__RI2__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (reduce, 28, 6, GEN2_CMA__RI2__28PPN)
       MV2_COLL_TUNING_FINISH_TABLE (reduce)
     }
     else {
@@ -1232,13 +1331,14 @@ force_default_tables:
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
                              MV2_ARCH_INTEL_PLATINUM_8170_2S_52, MV2_HCA_INTEL_HFI1) && !heterogeneity) {
       /* Diamond-Skylake Table */
-      MV2_COLL_TUNING_START_TABLE  (reduce, 7)
+      MV2_COLL_TUNING_START_TABLE  (reduce, 8)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 1,  3, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 2,  4, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 4,  4, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__4PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 8,  4, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 16, 4, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__16PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 26, 4, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__26PPN)
+      MV2_COLL_TUNING_ADD_CONF     (reduce, 48, 5, PSM__INTEL_PLATINUM_8160_2S_48_INTEL_HFI_100__48PPN)
       MV2_COLL_TUNING_ADD_CONF     (reduce, 52, 4, PSM__INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100__52PPN)
       MV2_COLL_TUNING_FINISH_TABLE (reduce)
     }
diff --git a/src/mpi/coll/reduce_tuning.h b/src/mpi/coll/reduce_tuning.h
index ddd5628..75d4b25 100644
--- a/src/mpi/coll/reduce_tuning.h
+++ b/src/mpi/coll/reduce_tuning.h
@@ -151,7 +151,7 @@ extern int MPIR_Reduce_Zcpy_MV2(const void *sendbuf,
 				MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
 
 /* Architecture detection tuning */
-int MV2_set_reduce_tuning_table(int heterogeneity);
+int MV2_set_reduce_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by reduce tuning table*/
 void MV2_cleanup_reduce_tuning_table();
diff --git a/src/mpi/coll/scatter_osu.c b/src/mpi/coll/scatter_osu.c
index 62e913c..3879932 100644
--- a/src/mpi/coll/scatter_osu.c
+++ b/src/mpi/coll/scatter_osu.c
@@ -17,9 +17,17 @@
 
 #include "mpiimpl.h"
 #include "coll_shmem.h"
+#include "common_tuning.h"
 #include "bcast_tuning.h"
 #include "scatter_tuning.h"
 
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_scatter_mcast);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_scatter_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_scatter_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_scatter_direct_blk);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_scatter_two_level_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL_EXTERN(MV2, mv2_coll_timer_scatter_two_level_direct);
+
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_scatter_mcast);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_scatter_binomial);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2, mv2_coll_scatter_direct);
@@ -106,7 +114,8 @@ int MPIR_Scatter_mcst_MV2(const void *sendbuf,
                               int recvcnt,
                               MPI_Datatype recvtype,
                               int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
-{ 
+{
+    MPIR_TIMER_START(coll,scatter,mcast); 
     int mpi_errno=MPI_SUCCESS; 
     int mpi_errno_ret=MPI_SUCCESS; 
     int rank=comm_ptr->rank, local_rank; 
@@ -267,6 +276,7 @@ int MPIR_Scatter_mcst_MV2(const void *sendbuf,
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,scatter,mcast);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -302,6 +312,7 @@ int MPIR_Scatter_MV2_Binomial(const void *sendbuf,
                               MPI_Datatype recvtype,
                               int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,scatter,binomial);
     MPI_Status status;
     MPI_Aint extent = 0;
     int rank, comm_size, is_homogeneous, sendtype_size;
@@ -323,6 +334,8 @@ int MPIR_Scatter_MV2_Binomial(const void *sendbuf,
 
     if (((rank == root) && (sendcnt == 0))
         || ((rank != root) && (recvcnt == 0))) {
+
+        MPIR_TIMER_END(coll,scatter,binomial);
         return MPI_SUCCESS;
     }
 
@@ -705,6 +718,7 @@ int MPIR_Scatter_MV2_Binomial(const void *sendbuf,
     /* check if multiple threads are calling this collective function */
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
 
+    MPIR_TIMER_END(coll,scatter,binomial);
     return (mpi_errno);
 }
 
@@ -720,6 +734,7 @@ int MPIR_Scatter_MV2_Direct(const void *sendbuf,
                             MPI_Datatype recvtype,
                             int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,scatter,direct);
     int rank, comm_size;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -825,6 +840,7 @@ int MPIR_Scatter_MV2_Direct(const void *sendbuf,
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
+    MPIR_TIMER_END(coll,scatter,direct);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -842,7 +858,8 @@ int MPIR_Scatter_MV2_Direct_Blk(const void *sendbuf,
                             int recvcnt,
                             MPI_Datatype recvtype,
                             int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
-{
+{   
+    MPIR_TIMER_START(coll,scatter,direct_blk);
     int rank, comm_size;
     int mpi_errno = MPI_SUCCESS;
     int mpi_errno_ret = MPI_SUCCESS;
@@ -920,6 +937,7 @@ int MPIR_Scatter_MV2_Direct_Blk(const void *sendbuf,
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
 
   fn_exit:
+    MPIR_TIMER_END(coll,scatter,direct_blk);
     return mpi_errno;
   fn_fail:
     goto fn_exit;
@@ -939,6 +957,7 @@ int MPIR_Scatter_MV2_two_level_Binomial(const void *sendbuf,
                                         int root, MPID_Comm * comm_ptr,
                                         MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,scatter,two_level_binomial);
     int comm_size, rank;
     int local_rank, local_size;
     int leader_comm_rank, leader_comm_size;
@@ -961,6 +980,8 @@ int MPIR_Scatter_MV2_two_level_Binomial(const void *sendbuf,
 
     if (((rank == root) && (sendcnt == 0))
         || ((rank != root) && (recvcnt == 0))) {
+
+        MPIR_TIMER_END(coll,scatter,two_level_binomial);
         return MPI_SUCCESS;
     }
     /* check if multiple threads are calling this collective function */
@@ -1171,6 +1192,7 @@ int MPIR_Scatter_MV2_two_level_Binomial(const void *sendbuf,
     }
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
 
+    MPIR_TIMER_END(coll,scatter,two_level_binomial);
     return (mpi_errno);
 }
 
@@ -1187,6 +1209,7 @@ int MPIR_Scatter_MV2_two_level_Direct(const void *sendbuf,
                                       int root, MPID_Comm * comm_ptr,
                                       MPIR_Errflag_t *errflag)
 {
+    MPIR_TIMER_START(coll,scatter,two_level_direct);
     int comm_size, rank;
     int local_rank, local_size;
     int leader_comm_rank, leader_comm_size;
@@ -1208,6 +1231,8 @@ int MPIR_Scatter_MV2_two_level_Direct(const void *sendbuf,
 
     if (((rank == root) && (sendcnt == 0))
         || ((rank != root) && (recvcnt == 0))) {
+
+        MPIR_TIMER_END(coll,scatter,two_level_direct);
         return MPI_SUCCESS;
     }
 
@@ -1414,6 +1439,7 @@ int MPIR_Scatter_MV2_two_level_Direct(const void *sendbuf,
     }
     MPIDU_ERR_CHECK_MULTIPLE_THREADS_EXIT(comm_ptr);
 
+    MPIR_TIMER_END(coll,scatter,two_level_direct);
     return (mpi_errno);
 }
 
@@ -1486,14 +1512,7 @@ int MPIR_Scatter_index_tuned_intra_MV2(const void *sendbuf,
             conf_index = 0;
             goto conf_check_end;
         }
-        do {
-            if (local_size == mv2_scatter_indexed_table_ppn_conf[i]) {
-                conf_index = i;
-                partial_sub_ok = 1;
-                break;
-            }
-            i++;
-        } while(i < mv2_scatter_indexed_num_ppn_conf);
+        FIND_PPN_INDEX  (scatter, local_size,conf_index, partial_sub_ok)
     }
     
     if (partial_sub_ok != 1) {
diff --git a/src/mpi/coll/scatter_tuning.c b/src/mpi/coll/scatter_tuning.c
index f9d0c84..5d16fdc 100644
--- a/src/mpi/coll/scatter_tuning.c
+++ b/src/mpi/coll/scatter_tuning.c
@@ -28,7 +28,7 @@ int mv2_scatter_indexed_num_ppn_conf = 1;
 int *mv2_size_scatter_indexed_tuning_table = NULL;
 mv2_scatter_indexed_tuning_table **mv2_scatter_indexed_thresholds_table = NULL;
 
-int MV2_set_scatter_tuning_table(int heterogeneity)
+int MV2_set_scatter_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca)
 {
     int agg_table_sum = 0;
     int i;
@@ -587,14 +587,89 @@ int MV2_set_scatter_tuning_table(int heterogeneity)
       MV2_COLL_TUNING_FINISH_TABLE (scatter)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
-				    MV2_ARCH_ARM_CAVIUM_V8, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
+                MV2_ARCH_AMD_EPYC_7742_128, MV2_HCA_ANY) && !heterogeneity) {
+      /* AMD EPYC rome table */
+      MV2_COLL_TUNING_START_TABLE  (scatter, 7)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  1, GEN2_CMA__AMD_EPYC__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  2, GEN2_CMA__AMD_EPYC__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  2, GEN2_CMA__AMD_EPYC__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  2, GEN2_CMA__AMD_EPYC__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 2, GEN2_CMA__AMD_EPYC__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 32, 2, GEN2_CMA__AMD_EPYC__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 64, 2, GEN2_CMA__AMD_EPYC__64PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (scatter)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+      /* Haswell HDR nodes on NOWLAB */
+      MV2_COLL_TUNING_START_TABLE  (scatter, 6)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 1,  2, GEN2_CMA__NOWHASWELL__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 2,  2, GEN2_CMA__NOWHASWELL__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 4,  3, GEN2_CMA__NOWHASWELL__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 8,  3, GEN2_CMA__NOWHASWELL__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 16, 3, GEN2_CMA__NOWHASWELL__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 20, 3, GEN2_CMA__NOWHASWELL__20PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (scatter)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_INTEL_PLATINUM_8280_2S_56, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Frontera */
+      MV2_COLL_TUNING_START_TABLE  (scatter, 8)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 1,  4, GEN2_CMA__FRONTERA__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 2,  5, GEN2_CMA__FRONTERA__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 4,  5, GEN2_CMA__FRONTERA__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 8,  5, GEN2_CMA__FRONTERA__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 16, 5, GEN2_CMA__FRONTERA__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 28, 4, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 28, 4, GEN2_CMA__FRONTERA__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 32, 5, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 32, 5, GEN2_CMA__FRONTERA__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 56, 5, GEN2_CMA__FRONTERA__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (scatter)
+    }
+    else if(MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+                    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
+      /* Mayer */
+      MV2_COLL_TUNING_START_TABLE  (scatter, 8)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 1,  3, GEN2_CMA__MAYER__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 2,  4, GEN2_CMA__MAYER__2PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 4,  4, GEN2_CMA__MAYER__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 8,  4, GEN2_CMA__MAYER__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 16, 4, GEN2_CMA__MAYER__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 28, 4, GEN2_CMA__MAYER__28PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 32, 4, GEN2_CMA__MAYER__32PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 56, 4, GEN2_CMA__MAYER__56PPN)
+      MV2_COLL_TUNING_FINISH_TABLE (scatter)
+    }
+    else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+				    MV2_ARCH_ARM_CAVIUM_V8_2S_28, MV2_HCA_MLX_CX_FDR) && !heterogeneity) {
       /* ARM system at Hartree Center */
       MV2_COLL_TUNING_START_TABLE  (scatter, 5)
-      MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN)
-      MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN)
-      MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN)
-      MV2_COLL_TUNING_ADD_CONF     (scatter, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN)
-      MV2_COLL_TUNING_ADD_CONF     (scatter, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  2, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 16,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 24,  3, GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN)
       MV2_COLL_TUNING_FINISH_TABLE (scatter)
     }
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
@@ -609,12 +684,14 @@ int MV2_set_scatter_tuning_table(int heterogeneity)
     else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 				    MV2_ARCH_IBM_POWER9, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
       /* Sierra Table: Use table for Ray temporarily */
-      MV2_COLL_TUNING_START_TABLE  (scatter, 8)
+      MV2_COLL_TUNING_START_TABLE  (scatter, 9)
       MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  4, GEN2__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 1,  4, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__1PPN)
       MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  5, GEN2__IBM_POWER9_MLX_CX_EDR__2PPN)
       MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  5, GEN2__IBM_POWER9_MLX_CX_EDR__4PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 4,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__4PPN)
+      MV2_COLL_TUNING_ADD_CONF     (scatter, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
+      MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 6,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN)
       MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  5, GEN2__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 8,  5, GEN2_CMA__IBM_POWER9_MLX_CX_EDR__8PPN)
       MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 5, GEN2__IBM_POWER9_MLX_CX_EDR__16PPN)
@@ -699,14 +776,36 @@ int MV2_set_scatter_tuning_table(int heterogeneity)
       }
       else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
 		 MV2_ARCH_ANY, MV2_HCA_MLX_CX_EDR) && !heterogeneity) {
-        /*RI2 Table*/
-        MV2_COLL_TUNING_START_TABLE  (scatter, 3)
+        MV2_COLL_TUNING_START_TABLE  (scatter, 6)
         MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  5, GEN2__RI2__1PPN)
         MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 1,  5, GEN2_CMA__RI2__1PPN)
         MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  6, GEN2__RI2__2PPN)
         MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 2,  6, GEN2_CMA__RI2__2PPN)
-        MV2_COLL_TUNING_ADD_CONF     (scatter, 28, 5, GEN2__RI2__28PPN)
-        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 28, 5, GEN2_CMA__RI2__28PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  5, GEN2__RI2__4PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 4,  5, GEN2_CMA__RI2__4PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  5, GEN2__RI2__8PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 8,  5, GEN2_CMA__RI2__8PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 5, GEN2__RI2__16PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 16, 5, GEN2_CMA__RI2__16PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 28, 6, GEN2__RI2__28PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 28, 6, GEN2_CMA__RI2__28PPN)
+        MV2_COLL_TUNING_FINISH_TABLE (scatter)
+      }
+      else if (MV2_IS_ARCH_HCA_TYPE(MV2_get_arch_hca_type(),
+		 MV2_ARCH_ANY, MV2_HCA_MLX_CX_HDR) && !heterogeneity) {
+        MV2_COLL_TUNING_START_TABLE  (scatter, 6)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 1,  5, GEN2__RI2__1PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 1,  5, GEN2_CMA__RI2__1PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 2,  6, GEN2__RI2__2PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 2,  6, GEN2_CMA__RI2__2PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 4,  5, GEN2__RI2__4PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 4,  5, GEN2_CMA__RI2__4PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 8,  5, GEN2__RI2__8PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 8,  5, GEN2_CMA__RI2__8PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 16, 5, GEN2__RI2__16PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 16, 5, GEN2_CMA__RI2__16PPN)
+        MV2_COLL_TUNING_ADD_CONF     (scatter, 28, 6, GEN2__RI2__28PPN)
+        MV2_COLL_TUNING_ADD_CONF_CMA (scatter, 28, 6, GEN2_CMA__RI2__28PPN)
         MV2_COLL_TUNING_FINISH_TABLE (scatter)
       }
       else {
diff --git a/src/mpi/coll/scatter_tuning.h b/src/mpi/coll/scatter_tuning.h
index 4212753..f55764a 100644
--- a/src/mpi/coll/scatter_tuning.h
+++ b/src/mpi/coll/scatter_tuning.h
@@ -157,7 +157,7 @@ extern int MPIR_Scatter_MV2_two_level_Direct(const void *sendbuf,
                               int root, MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag);
 
 /* Architecture detection tuning */
-int MV2_set_scatter_tuning_table(int heterogeneity);
+int MV2_set_scatter_tuning_table(int heterogeneity, struct coll_info *colls_arch_hca);
 
 /* Function to clean free memory allocated by scatter tuning table*/
 void MV2_cleanup_scatter_tuning_table();
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..93b0aed
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_Bruck_MV2},		\
+	{4, &MPIR_Allgather_Bruck_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_Bruck_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_Bruck_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..1c83545
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,29 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..0ebef45
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Ring_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_Ring_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..94bbead
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_Bruck_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..aad1e82
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_Bruck_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Bruck_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..d38c370
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..952b1fb
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..817874c
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..5553fc1
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_Ring_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..33ede60
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_Bruck_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..95f7103
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..a132472
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index 90341c5..0000000
--- a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,83 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_RD_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index d295ed6..0000000
--- a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,56 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_Ring_MV2},		\
-	{4, &MPIR_Allgather_Ring_MV2},		\
-	{8, &MPIR_Allgather_Ring_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_Ring_MV2},		\
-	{128, &MPIR_Allgather_Ring_MV2},		\
-	{256, &MPIR_Allgather_Ring_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_Ring_MV2},		\
-	{2048, &MPIR_Allgather_RD_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_RD_MV2},		\
-	{4096, &MPIR_Allgather_RD_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index 11b3c09..0000000
--- a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,83 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_Bruck_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_Bruck_MV2},		\
-	{256, &MPIR_Allgather_Bruck_MV2},		\
-	{512, &MPIR_Allgather_Bruck_MV2},		\
-	{1024, &MPIR_Allgather_Ring_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{1024, &MPIR_Allgather_Ring_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_Ring_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index 7d7ee48..0000000
--- a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,83 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_RD_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_RD_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_RD_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index ea3b88b..0000000
--- a/src/mpi/coll/tuning/allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,83 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	21,		\
-	{		\
-	{1, &MPIR_Allgather_RD_MV2},		\
-	{2, &MPIR_Allgather_RD_MV2},		\
-	{4, &MPIR_Allgather_RD_MV2},		\
-	{8, &MPIR_Allgather_RD_MV2},		\
-	{16, &MPIR_Allgather_RD_MV2},		\
-	{32, &MPIR_Allgather_RD_MV2},		\
-	{64, &MPIR_Allgather_RD_MV2},		\
-	{128, &MPIR_Allgather_RD_MV2},		\
-	{256, &MPIR_Allgather_RD_MV2},		\
-	{512, &MPIR_Allgather_RD_MV2},		\
-	{1024, &MPIR_Allgather_RD_MV2},		\
-	{2048, &MPIR_Allgather_Ring_MV2},		\
-	{4096, &MPIR_Allgather_Ring_MV2},		\
-	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
-	{16384, &MPIR_Allgather_Ring_MV2},		\
-	{32768, &MPIR_Allgather_Ring_MV2},		\
-	{65536, &MPIR_Allgather_Ring_MV2},		\
-	{131072, &MPIR_Allgather_Ring_MV2},		\
-	{262144, &MPIR_Allgather_Ring_MV2},		\
-	{524288, &MPIR_Allgather_Ring_MV2},		\
-	{1048576, &MPIR_Allgather_Ring_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..8bfd010
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,137 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_Bruck_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..35f2898
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Ring_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_Bruck_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..feb51fe
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_Bruck_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_Bruck_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..090c942
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,137 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Ring_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_32ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_32ppn.h
new file mode 100644
index 0000000..4a68e57
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_32ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__FRONTERA__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..e6223b4
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,137 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_56ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_56ppn.h
new file mode 100644
index 0000000..6921a64
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_56ppn.h
@@ -0,0 +1,137 @@
+#define GEN2_CMA__FRONTERA__56PPN {		\
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Bruck_MV2}		\
+	}		\
+	},		 \
+	{		\
+	896,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Bruck_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..7b107b9
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,137 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..8d3f138
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,137 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Ring_MV2},		\
+	{2, &MPIR_Allgather_Bruck_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_Bruck_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_Ring_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..b7248e4
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_Bruck_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..e0763cb
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Ring_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..08333ad
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_Bruck_MV2},		\
+	{4, &MPIR_Allgather_Bruck_MV2},		\
+	{8, &MPIR_Allgather_Bruck_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_Bruck_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_Bruck_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..d8db82f
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_Ring_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..64eec5c
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        21,             \
+        {               \
+        {1, &MPIR_Allgather_RD_MV2},            \
+        {2, &MPIR_Allgather_RD_MV2},            \
+        {4, &MPIR_Allgather_RD_MV2},            \
+        {8, &MPIR_Allgather_RD_MV2},            \
+        {16, &MPIR_Allgather_RD_MV2},           \
+        {32, &MPIR_Allgather_RD_MV2},           \
+        {64, &MPIR_Allgather_RD_Allgather_Comm_MV2},            \
+        {128, &MPIR_Allgather_RD_Allgather_Comm_MV2},           \
+        {256, &MPIR_Allgather_RD_Allgather_Comm_MV2},           \
+        {512, &MPIR_Allgather_RD_Allgather_Comm_MV2},           \
+        {1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},          \
+        {2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},          \
+        {4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},          \
+        {8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},          \
+        {16384, &MPIR_Allgather_Ring_MV2},              \
+        {32768, &MPIR_Allgather_Ring_MV2},              \
+        {65536, &MPIR_Allgather_Ring_MV2},              \
+        {131072, &MPIR_Allgather_Ring_MV2},             \
+        {262144, &MPIR_Allgather_Ring_MV2},             \
+        {524288, &MPIR_Allgather_Ring_MV2},             \
+        {1048576, &MPIR_Allgather_Ring_MV2}             \
+        }               \
+        },               \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..79a1f2d
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_Bruck_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..26747d6
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_Bruck_MV2},		\
+	{4, &MPIR_Allgather_Bruck_MV2},		\
+	{8, &MPIR_Allgather_Bruck_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_Bruck_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..5823d5a
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,110 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..4fe3d5d
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..b2c93ec
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_Ring_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..287d484
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_Bruck_MV2},		\
+	{64, &MPIR_Allgather_Bruck_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_Bruck_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_Bruck_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_Bruck_MV2},		\
+	{128, &MPIR_Allgather_Bruck_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_Bruck_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..6ecbc73
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,56 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Ring_MV2},		\
+	{2, &MPIR_Allgather_Ring_MV2},		\
+	{4, &MPIR_Allgather_Ring_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Ring_MV2},		\
+	{32, &MPIR_Allgather_Ring_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_Ring_MV2},		\
+	{256, &MPIR_Allgather_Ring_MV2},		\
+	{512, &MPIR_Allgather_Ring_MV2},		\
+	{1024, &MPIR_Allgather_Ring_MV2},		\
+	{2048, &MPIR_Allgather_Ring_MV2},		\
+	{4096, &MPIR_Allgather_Ring_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..2dc15fd
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_Bruck_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..8ff1ad5
--- /dev/null
+++ b/src/mpi/coll/tuning/allgather/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,83 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_Bruck_MV2},		\
+	{32, &MPIR_Allgather_RD_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_Bruck_MV2},		\
+	{512, &MPIR_Allgather_RD_MV2},		\
+	{1024, &MPIR_Allgather_RD_MV2},		\
+	{2048, &MPIR_Allgather_RD_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_RD_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{128, &MPIR_Allgather_RD_MV2},		\
+	{256, &MPIR_Allgather_RD_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Allgather_RD_MV2},		\
+	{2, &MPIR_Allgather_RD_MV2},		\
+	{4, &MPIR_Allgather_RD_MV2},		\
+	{8, &MPIR_Allgather_RD_MV2},		\
+	{16, &MPIR_Allgather_RD_MV2},		\
+	{32, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{64, &MPIR_Allgather_RD_MV2},		\
+	{128, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{256, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{512, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{1024, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{2048, &MPIR_Allgather_RD_Allgather_Comm_MV2},		\
+	{4096, &MPIR_Allgather_RD_MV2},		\
+	{8192, &MPIR_Allgather_Ring_MV2},		\
+	{16384, &MPIR_Allgather_Ring_MV2},		\
+	{32768, &MPIR_Allgather_Ring_MV2},		\
+	{65536, &MPIR_Allgather_Ring_MV2},		\
+	{131072, &MPIR_Allgather_Ring_MV2},		\
+	{262144, &MPIR_Allgather_Ring_MV2},		\
+	{524288, &MPIR_Allgather_Ring_MV2},		\
+	{1048576, &MPIR_Allgather_Ring_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allgather_arch_tuning.h b/src/mpi/coll/tuning/allgather_arch_tuning.h
index 3fc77bf..f828790 100644
--- a/src/mpi/coll/tuning/allgather_arch_tuning.h
+++ b/src/mpi/coll/tuning/allgather_arch_tuning.h
@@ -104,11 +104,11 @@
 #include "allgather/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_26ppn.h"
 #include "allgather/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_48ppn.h"
 #include "allgather/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_52ppn.h"
-#include "allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "allgather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "allgather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "allgather/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "allgather/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "allgather/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -122,6 +122,7 @@
 #include "allgather/gen2_IBM_POWER9_MLX_CX_EDR_44ppn.h"
 #include "allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "allgather/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -141,3 +142,32 @@
 #include "allgather/gen2_cma_AMD_EPYC_16ppn.h"
 #include "allgather/gen2_cma_AMD_EPYC_32ppn.h"
 #include "allgather/gen2_cma_AMD_EPYC_64ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "allgather/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "allgather/gen2_cma_NOWHASWELL_1ppn.h"
+#include "allgather/gen2_cma_NOWHASWELL_2ppn.h"
+#include "allgather/gen2_cma_NOWHASWELL_4ppn.h"
+#include "allgather/gen2_cma_NOWHASWELL_8ppn.h"
+#include "allgather/gen2_cma_NOWHASWELL_16ppn.h"
+#include "allgather/gen2_cma_NOWHASWELL_20ppn.h"
+#include "allgather/gen2_cma_FRONTERA_1ppn.h"
+#include "allgather/gen2_cma_FRONTERA_2ppn.h"
+#include "allgather/gen2_cma_FRONTERA_4ppn.h"
+#include "allgather/gen2_cma_FRONTERA_8ppn.h"
+#include "allgather/gen2_cma_FRONTERA_16ppn.h"
+#include "allgather/gen2_cma_FRONTERA_28ppn.h"
+#include "allgather/gen2_cma_FRONTERA_32ppn.h"
+#include "allgather/gen2_cma_FRONTERA_56ppn.h"
+#include "allgather/gen2_cma_MAYER_1ppn.h"
+#include "allgather/gen2_cma_MAYER_2ppn.h"
+#include "allgather/gen2_cma_MAYER_4ppn.h"
+#include "allgather/gen2_cma_MAYER_8ppn.h"
+#include "allgather/gen2_cma_MAYER_16ppn.h"
+#include "allgather/gen2_cma_MAYER_28ppn.h"
+#include "allgather/gen2_cma_MAYER_32ppn.h"
+#include "allgather/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..c7ec75a
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,138 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..b9c9b4d
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,89 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..747ef61
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,138 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..4a2ef96
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,138 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..d5ea086
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,138 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..bd242c8
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,138 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..2341156
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,138 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..59a9960
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..fdc1dc5
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,100 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..ade11d9
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..13e607e
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..979f4fa
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index f153cf4..0000000
--- a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,149 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index 0c12617..0000000
--- a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,100 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	0,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	0,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index 7bba7da..0000000
--- a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,149 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index deaa36b..0000000
--- a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,149 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index 544f4a4..0000000
--- a/src/mpi/coll/tuning/allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,149 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	0,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
-	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
-	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
-	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
-	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..f174226
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..84f3008
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..4c66faa
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..8eca144
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,247 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_32ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_32ppn.h
new file mode 100644
index 0000000..3eb52b9
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_32ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__FRONTERA__32PPN {		\
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	0,		\
+	{0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..e35e43c
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,247 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{0, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_56ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_56ppn.h
new file mode 100644
index 0000000..3851312
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_56ppn.h
@@ -0,0 +1,100 @@
+#define GEN2_CMA__FRONTERA__56PPN {		\
+	{		\
+	56,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..6c25645
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,247 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	0,		\
+	{1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..76ad8c9
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,247 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..b0bf123
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..9cc2d78
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..d091223
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	0,		\
+	{1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	0,		\
+	{1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..2a76611
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..a799650
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        0,              \
+        {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},              \
+        19,             \
+        {               \
+        {4, &MPIR_Allreduce_pt2pt_rs_MV2},              \
+        {8, &MPIR_Allreduce_pt2pt_rs_MV2},              \
+        {16, &MPIR_Allreduce_pt2pt_rs_MV2},             \
+        {32, &MPIR_Allreduce_pt2pt_rs_MV2},             \
+        {64, &MPIR_Allreduce_pt2pt_rs_MV2},             \
+        {128, &MPIR_Allreduce_pt2pt_rd_MV2},            \
+        {256, &MPIR_Allreduce_pt2pt_rd_MV2},            \
+        {512, &MPIR_Allreduce_pt2pt_rd_MV2},            \
+        {1024, &MPIR_Allreduce_pt2pt_rd_MV2},           \
+        {2048, &MPIR_Allreduce_pt2pt_rs_MV2},           \
+        {4096, &MPIR_Allreduce_pt2pt_rs_MV2},           \
+        {8192, &MPIR_Allreduce_pt2pt_rs_MV2},           \
+        {16384, &MPIR_Allreduce_pt2pt_rs_MV2},          \
+        {32768, &MPIR_Allreduce_pt2pt_rs_MV2},          \
+        {65536, &MPIR_Allreduce_pt2pt_rs_MV2},          \
+        {131072, &MPIR_Allreduce_pt2pt_rs_MV2},         \
+        {262144, &MPIR_Allreduce_pt2pt_rs_MV2},         \
+        {524288, &MPIR_Allreduce_pt2pt_rs_MV2},         \
+        {1048576, &MPIR_Allreduce_pt2pt_rs_MV2}         \
+        },              \
+        19,             \
+        {               \
+        {4, &MPIR_Allreduce_reduce_p2p_MV2},            \
+        {8, &MPIR_Allreduce_reduce_p2p_MV2},            \
+        {16, &MPIR_Allreduce_reduce_p2p_MV2},           \
+        {32, &MPIR_Allreduce_reduce_p2p_MV2},           \
+        {64, &MPIR_Allreduce_reduce_p2p_MV2},           \
+        {128, &MPIR_Allreduce_reduce_p2p_MV2},          \
+        {256, &MPIR_Allreduce_reduce_p2p_MV2},          \
+        {512, &MPIR_Allreduce_reduce_p2p_MV2},          \
+        {1024, &MPIR_Allreduce_reduce_p2p_MV2},         \
+        {2048, &MPIR_Allreduce_reduce_p2p_MV2},         \
+        {4096, &MPIR_Allreduce_reduce_p2p_MV2},         \
+        {8192, &MPIR_Allreduce_reduce_p2p_MV2},         \
+        {16384, &MPIR_Allreduce_reduce_p2p_MV2},                \
+        {32768, &MPIR_Allreduce_reduce_p2p_MV2},                \
+        {65536, &MPIR_Allreduce_reduce_p2p_MV2},                \
+        {131072, &MPIR_Allreduce_reduce_p2p_MV2},               \
+        {262144, &MPIR_Allreduce_reduce_p2p_MV2},               \
+        {524288, &MPIR_Allreduce_reduce_p2p_MV2},               \
+        {1048576, &MPIR_Allreduce_reduce_p2p_MV2}               \
+        }               \
+        },               \
+	{		\
+	128,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	0,		\
+	{1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..98a326e
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..a7517f8
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..7e9abda
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,198 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..90bfba0
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	0,		\
+	{0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..aa2b7ad
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,100 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..0585e4c
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	0,		\
+	{0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	0,		\
+	{0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..497ec7d
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,100 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..4ea619a
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{64, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{128, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..3f448c1
--- /dev/null
+++ b/src/mpi/coll/tuning/allreduce/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,149 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	0,		\
+	{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	0,		\
+	{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{512, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	0,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{16, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{32, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{64, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{128, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{256, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{512, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{1024, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{2048, &MPIR_Allreduce_pt2pt_rd_MV2},		\
+	{4096, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{8192, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{16384, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{32768, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{65536, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{131072, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{262144, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{524288, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	{1048576, &MPIR_Allreduce_pt2pt_rs_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{8, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{16, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{32, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{64, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{128, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{256, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{512, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{1024, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{2048, &MPIR_Allreduce_reduce_shmem_MV2},		\
+	{4096, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{8192, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{16384, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{32768, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{65536, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{131072, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{262144, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{524288, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	{1048576, &MPIR_Allreduce_reduce_p2p_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/allreduce_arch_tuning.h b/src/mpi/coll/tuning/allreduce_arch_tuning.h
index e9fbce1..80f9ecf 100644
--- a/src/mpi/coll/tuning/allreduce_arch_tuning.h
+++ b/src/mpi/coll/tuning/allreduce_arch_tuning.h
@@ -112,11 +112,11 @@
 #include "allreduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_26ppn.h"
 #include "allreduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_48ppn.h"
 #include "allreduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_52ppn.h"
-#include "allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "allreduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "allreduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -131,6 +131,7 @@
 #include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_2ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "allreduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -150,3 +151,32 @@
 #include "allreduce/gen2_cma_AMD_EPYC_16ppn.h"
 #include "allreduce/gen2_cma_AMD_EPYC_32ppn.h"
 #include "allreduce/gen2_cma_AMD_EPYC_64ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "allreduce/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "allreduce/gen2_cma_NOWHASWELL_1ppn.h"
+#include "allreduce/gen2_cma_NOWHASWELL_2ppn.h"
+#include "allreduce/gen2_cma_NOWHASWELL_4ppn.h"
+#include "allreduce/gen2_cma_NOWHASWELL_8ppn.h"
+#include "allreduce/gen2_cma_NOWHASWELL_16ppn.h"
+#include "allreduce/gen2_cma_NOWHASWELL_20ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_1ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_2ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_4ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_8ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_16ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_28ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_32ppn.h"
+#include "allreduce/gen2_cma_FRONTERA_56ppn.h"
+#include "allreduce/gen2_cma_MAYER_1ppn.h"
+#include "allreduce/gen2_cma_MAYER_2ppn.h"
+#include "allreduce/gen2_cma_MAYER_4ppn.h"
+#include "allreduce/gen2_cma_MAYER_8ppn.h"
+#include "allreduce/gen2_cma_MAYER_16ppn.h"
+#include "allreduce/gen2_cma_MAYER_28ppn.h"
+#include "allreduce/gen2_cma_MAYER_32ppn.h"
+#include "allreduce/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..cdb4a6b
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_inplace_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_inplace_MV2},		\
+	{32768, &MPIR_Alltoall_inplace_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..050e93c
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,25 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..7bc0680
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..6cc4c7d
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_inplace_MV2},		\
+	{2048, &MPIR_Alltoall_inplace_MV2},		\
+	{4096, &MPIR_Alltoall_inplace_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_inplace_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..6e98daa
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	{0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..33306f9
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_inplace_MV2},		\
+	{2048, &MPIR_Alltoall_inplace_MV2},		\
+	{4096, &MPIR_Alltoall_inplace_MV2},		\
+	{8192, &MPIR_Alltoall_inplace_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..fe451df
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_inplace_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..2468dad
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..dd3ceda
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..fedea09
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..57cbff4
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..bfb128e
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index c8db8c9..0000000
--- a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,71 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_RD_MV2},		\
-	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_pairwise_MV2},		\
-	{4096, &MPIR_Alltoall_pairwise_MV2},		\
-	{8192, &MPIR_Alltoall_pairwise_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_bruck_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_bruck_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_bruck_MV2},		\
-	{16, &MPIR_Alltoall_bruck_MV2},		\
-	{32, &MPIR_Alltoall_bruck_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_bruck_MV2},		\
-	{512, &MPIR_Alltoall_bruck_MV2},		\
-	{1024, &MPIR_Alltoall_bruck_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_pairwise_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index 13e3019..0000000
--- a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,48 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_pairwise_MV2},		\
-	{2, &MPIR_Alltoall_pairwise_MV2},		\
-	{4, &MPIR_Alltoall_pairwise_MV2},		\
-	{8, &MPIR_Alltoall_pairwise_MV2},		\
-	{16, &MPIR_Alltoall_pairwise_MV2},		\
-	{32, &MPIR_Alltoall_pairwise_MV2},		\
-	{64, &MPIR_Alltoall_pairwise_MV2},		\
-	{128, &MPIR_Alltoall_pairwise_MV2},		\
-	{256, &MPIR_Alltoall_pairwise_MV2},		\
-	{512, &MPIR_Alltoall_pairwise_MV2},		\
-	{1024, &MPIR_Alltoall_pairwise_MV2},		\
-	{2048, &MPIR_Alltoall_pairwise_MV2},		\
-	{4096, &MPIR_Alltoall_pairwise_MV2},		\
-	{8192, &MPIR_Alltoall_pairwise_MV2},		\
-	{16384, &MPIR_Alltoall_pairwise_MV2},		\
-	{32768, &MPIR_Alltoall_pairwise_MV2}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	{0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index ba43b8f..0000000
--- a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,71 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_bruck_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_bruck_MV2},		\
-	{32, &MPIR_Alltoall_bruck_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_bruck_MV2},		\
-	{512, &MPIR_Alltoall_bruck_MV2},		\
-	{1024, &MPIR_Alltoall_bruck_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_bruck_MV2},		\
-	{4, &MPIR_Alltoall_bruck_MV2},		\
-	{8, &MPIR_Alltoall_bruck_MV2},		\
-	{16, &MPIR_Alltoall_bruck_MV2},		\
-	{32, &MPIR_Alltoall_bruck_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_bruck_MV2},		\
-	{512, &MPIR_Alltoall_bruck_MV2},		\
-	{1024, &MPIR_Alltoall_bruck_MV2},		\
-	{2048, &MPIR_Alltoall_bruck_MV2},		\
-	{4096, &MPIR_Alltoall_pairwise_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index 0dbe16e..0000000
--- a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,71 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_pairwise_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_pairwise_MV2},		\
-	{8, &MPIR_Alltoall_pairwise_MV2},		\
-	{16, &MPIR_Alltoall_pairwise_MV2},		\
-	{32, &MPIR_Alltoall_pairwise_MV2},		\
-	{64, &MPIR_Alltoall_pairwise_MV2},		\
-	{128, &MPIR_Alltoall_pairwise_MV2},		\
-	{256, &MPIR_Alltoall_pairwise_MV2},		\
-	{512, &MPIR_Alltoall_pairwise_MV2},		\
-	{1024, &MPIR_Alltoall_pairwise_MV2},		\
-	{2048, &MPIR_Alltoall_pairwise_MV2},		\
-	{4096, &MPIR_Alltoall_pairwise_MV2},		\
-	{8192, &MPIR_Alltoall_pairwise_MV2},		\
-	{16384, &MPIR_Alltoall_pairwise_MV2},		\
-	{32768, &MPIR_Alltoall_pairwise_MV2}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_RD_MV2},		\
-	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_RD_MV2},		\
-	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index bd4188c..0000000
--- a/src/mpi/coll/tuning/alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,71 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_RD_MV2},		\
-	{64, &MPIR_Alltoall_pairwise_MV2},		\
-	{128, &MPIR_Alltoall_pairwise_MV2},		\
-	{256, &MPIR_Alltoall_pairwise_MV2},		\
-	{512, &MPIR_Alltoall_pairwise_MV2},		\
-	{1024, &MPIR_Alltoall_pairwise_MV2},		\
-	{2048, &MPIR_Alltoall_pairwise_MV2},		\
-	{4096, &MPIR_Alltoall_pairwise_MV2},		\
-	{8192, &MPIR_Alltoall_pairwise_MV2},		\
-	{16384, &MPIR_Alltoall_pairwise_MV2},		\
-	{32768, &MPIR_Alltoall_pairwise_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_RD_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
-	16,		\
-	{		\
-	{1, &MPIR_Alltoall_RD_MV2},		\
-	{2, &MPIR_Alltoall_RD_MV2},		\
-	{4, &MPIR_Alltoall_RD_MV2},		\
-	{8, &MPIR_Alltoall_RD_MV2},		\
-	{16, &MPIR_Alltoall_RD_MV2},		\
-	{32, &MPIR_Alltoall_bruck_MV2},		\
-	{64, &MPIR_Alltoall_bruck_MV2},		\
-	{128, &MPIR_Alltoall_bruck_MV2},		\
-	{256, &MPIR_Alltoall_bruck_MV2},		\
-	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
-	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..c7f1e0e
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..cef5ea2
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..146dbec
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..f84f900
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_32ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_32ppn.h
new file mode 100644
index 0000000..1c715d7
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_32ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__FRONTERA__32PPN {		\
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..3df930d
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	4,		\
+	{0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_56ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_56ppn.h
new file mode 100644
index 0000000..17cd5af
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_56ppn.h
@@ -0,0 +1,117 @@
+#define GEN2_CMA__FRONTERA__56PPN {		\
+	{		\
+	56,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	896,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..cbe7f85
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,117 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..d7817e4
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,117 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..ff22d4a
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..d02c268
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..42e8e00
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..d41e4c8
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..967134e
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	{0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},               \
+        16,             \
+        {               \
+        {1, &MPIR_Alltoall_RD_MV2},             \
+        {2, &MPIR_Alltoall_RD_MV2},             \
+        {4, &MPIR_Alltoall_RD_MV2},             \
+        {8, &MPIR_Alltoall_bruck_MV2},          \
+        {16, &MPIR_Alltoall_bruck_MV2},         \
+        {32, &MPIR_Alltoall_bruck_MV2},         \
+        {64, &MPIR_Alltoall_bruck_MV2},         \
+        {128, &MPIR_Alltoall_bruck_MV2},                \
+        {256, &MPIR_Alltoall_bruck_MV2},                \
+        {512, &MPIR_Alltoall_Scatter_dest_MV2},         \
+        {1024, &MPIR_Alltoall_Scatter_dest_MV2},                \
+        {2048, &MPIR_Alltoall_Scatter_dest_MV2},                \
+        {4096, &MPIR_Alltoall_Scatter_dest_MV2},                \
+        {8192, &MPIR_Alltoall_Scatter_dest_MV2},                \
+        {16384, &MPIR_Alltoall_Scatter_dest_MV2},               \
+        {32768, &MPIR_Alltoall_Scatter_dest_MV2}                \
+        }               \
+        },               \
+	{		\
+	128,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..c6b95bf
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..509354d
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_bruck_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_bruck_MV2},		\
+	{2048, &MPIR_Alltoall_bruck_MV2},		\
+	{4096, &MPIR_Alltoall_bruck_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..733bf62
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,94 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..68e5092
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..8020af3
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..982d55c
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_bruck_MV2},		\
+	{2, &MPIR_Alltoall_bruck_MV2},		\
+	{4, &MPIR_Alltoall_bruck_MV2},		\
+	{8, &MPIR_Alltoall_bruck_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..dda4099
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,48 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_pairwise_MV2},		\
+	{2, &MPIR_Alltoall_pairwise_MV2},		\
+	{4, &MPIR_Alltoall_pairwise_MV2},		\
+	{8, &MPIR_Alltoall_pairwise_MV2},		\
+	{16, &MPIR_Alltoall_pairwise_MV2},		\
+	{32, &MPIR_Alltoall_pairwise_MV2},		\
+	{64, &MPIR_Alltoall_pairwise_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_pairwise_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_pairwise_MV2},		\
+	{32768, &MPIR_Alltoall_pairwise_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	{0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..598f07b
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	{0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_pairwise_MV2},		\
+	{256, &MPIR_Alltoall_pairwise_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_pairwise_MV2},		\
+	{2048, &MPIR_Alltoall_pairwise_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..bce1c29
--- /dev/null
+++ b/src/mpi/coll/tuning/alltoall/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,71 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{128, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_pairwise_MV2},		\
+	{8192, &MPIR_Alltoall_pairwise_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_RD_MV2},		\
+	{32, &MPIR_Alltoall_RD_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{512, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1},		\
+	16,		\
+	{		\
+	{1, &MPIR_Alltoall_RD_MV2},		\
+	{2, &MPIR_Alltoall_RD_MV2},		\
+	{4, &MPIR_Alltoall_RD_MV2},		\
+	{8, &MPIR_Alltoall_RD_MV2},		\
+	{16, &MPIR_Alltoall_bruck_MV2},		\
+	{32, &MPIR_Alltoall_bruck_MV2},		\
+	{64, &MPIR_Alltoall_bruck_MV2},		\
+	{128, &MPIR_Alltoall_bruck_MV2},		\
+	{256, &MPIR_Alltoall_bruck_MV2},		\
+	{512, &MPIR_Alltoall_bruck_MV2},		\
+	{1024, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{2048, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{4096, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{8192, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{16384, &MPIR_Alltoall_Scatter_dest_MV2},		\
+	{32768, &MPIR_Alltoall_Scatter_dest_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/alltoall_arch_tuning.h b/src/mpi/coll/tuning/alltoall_arch_tuning.h
index 149d654..251de55 100644
--- a/src/mpi/coll/tuning/alltoall_arch_tuning.h
+++ b/src/mpi/coll/tuning/alltoall_arch_tuning.h
@@ -104,11 +104,11 @@
 #include "alltoall/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_26ppn.h"
 #include "alltoall/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_48ppn.h"
 #include "alltoall/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_52ppn.h"
-#include "alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "alltoall/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "alltoall/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -122,6 +122,7 @@
 #include "alltoall/gen2_IBM_POWER9_MLX_CX_EDR_44ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "alltoall/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -141,3 +142,32 @@
 #include "alltoall/gen2_cma_AMD_EPYC_16ppn.h"
 #include "alltoall/gen2_cma_AMD_EPYC_32ppn.h"
 #include "alltoall/gen2_cma_AMD_EPYC_64ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "alltoall/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "alltoall/gen2_cma_NOWHASWELL_1ppn.h"
+#include "alltoall/gen2_cma_NOWHASWELL_2ppn.h"
+#include "alltoall/gen2_cma_NOWHASWELL_4ppn.h"
+#include "alltoall/gen2_cma_NOWHASWELL_8ppn.h"
+#include "alltoall/gen2_cma_NOWHASWELL_16ppn.h"
+#include "alltoall/gen2_cma_NOWHASWELL_20ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_1ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_2ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_4ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_8ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_16ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_28ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_32ppn.h"
+#include "alltoall/gen2_cma_FRONTERA_56ppn.h"
+#include "alltoall/gen2_cma_MAYER_1ppn.h"
+#include "alltoall/gen2_cma_MAYER_2ppn.h"
+#include "alltoall/gen2_cma_MAYER_4ppn.h"
+#include "alltoall/gen2_cma_MAYER_8ppn.h"
+#include "alltoall/gen2_cma_MAYER_16ppn.h"
+#include "alltoall/gen2_cma_MAYER_28ppn.h"
+#include "alltoall/gen2_cma_MAYER_32ppn.h"
+#include "alltoall/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..f871e32
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..84f5fd2
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,57 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..4cfa68d
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..4cc0b23
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..62d231f
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..5e7b3b3
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..bc37d20
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..8a32002
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{16, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1024, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{65536, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..f7670e1
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 8}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..ef4b97d
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..12d64fa
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..aafe2a3
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index 6fc3ff9..0000000
--- a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,167 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{8, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{16, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{32, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{64, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{128, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{256, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{512, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1024, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{16, &MPIR_Bcast_binomial_MV2, -1},		\
-	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
-	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{32768, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{2, &MPIR_Bcast_binomial_MV2, -1},		\
-	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{16, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{32, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{128, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{256, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{1024, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{65536, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
-	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{256, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index ab27b76..0000000
--- a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,112 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{2, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{32, &MPIR_Bcast_binomial_MV2, -1},		\
-	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{512, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{4096, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{32768, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4, &MPIR_Bcast_binomial_MV2, -1},		\
-	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{2048, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{65536, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 8}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index d1ef39a..0000000
--- a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,167 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{4, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{8, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{16, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	8192,		\
-	4,		\
-	4,		\
-	{0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2, &MPIR_Bcast_binomial_MV2, -1},		\
-	{4, &MPIR_Bcast_binomial_MV2, -1},		\
-	{8, &MPIR_Bcast_binomial_MV2, -1},		\
-	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{64, &MPIR_Bcast_binomial_MV2, -1},		\
-	{128, &MPIR_Bcast_binomial_MV2, -1},		\
-	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{512, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{2048, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{4096, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{2, &MPIR_Bcast_binomial_MV2, -1},		\
-	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{16, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{32, &MPIR_Bcast_binomial_MV2, -1},		\
-	{64, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{128, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{256, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{1024, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
-	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index cfaf9e3..0000000
--- a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,167 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	8192,		\
-	4,		\
-	4,		\
-	{0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{4, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{64, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{512, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32768, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
-	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16, &MPIR_Bcast_binomial_MV2, -1},		\
-	{32, &MPIR_Bcast_binomial_MV2, -1},		\
-	{64, &MPIR_Bcast_binomial_MV2, -1},		\
-	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{4096, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16384, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{32768, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4, &MPIR_Bcast_binomial_MV2, -1},		\
-	{8, &MPIR_Bcast_binomial_MV2, -1},		\
-	{16, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{256, &MPIR_Bcast_binomial_MV2, -1},		\
-	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
-	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index 1271c2f..0000000
--- a/src/mpi/coll/tuning/bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,167 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	8192,		\
-	4,		\
-	4,		\
-	{0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{32, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{128, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{1024, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
-	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
-	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
-	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{262144, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
-	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
-	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	8192,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2, &MPIR_Bcast_binomial_MV2, -1},		\
-	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{16, &MPIR_Bcast_binomial_MV2, -1},		\
-	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{64, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{128, &MPIR_Bcast_binomial_MV2, -1},		\
-	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
-	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
-	{524288, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{256, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
-	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	8192,		\
-	4,		\
-	4,		\
-	{0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0},		\
-	21,		\
-	{		\
-	{1, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{2, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{4, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{128, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
-	{2048, &MPIR_Pipelined_Bcast_MV2, -1},		\
-	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
-	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
-	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
-	{262144, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
-	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
-	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
-	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
-	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
-	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..ce3ff06
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,277 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..6a567d1
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{524288, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..c408597
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..7c95369
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..270f0c7
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{65536, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{524288, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..e40bc04
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,277 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1},		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{65536, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1},		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_shm_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..97ec682
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,277 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..bc27162
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..ccf6d5d
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..c607b87
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..92c0d06
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..92b794c
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        8192,           \
+        4,              \
+        4,              \
+        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},                \
+        21,             \
+        {               \
+        {1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},         \
+        {2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},         \
+        {4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},         \
+        {8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},         \
+        {16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},                \
+        {32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},                \
+        {64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},                \
+        {128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},               \
+        {256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},               \
+        {512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},               \
+        {1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},              \
+        {2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},              \
+        {4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},              \
+        {8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},              \
+        {16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},             \
+        {32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},             \
+        {65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},             \
+        {131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},            \
+        {262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},            \
+        {524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},            \
+        {1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}               \
+        },              \
+        21,             \
+        {               \
+        {1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},             \
+        {2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},             \
+        {4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},             \
+        {8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},             \
+        {16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},            \
+        {32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},            \
+        {64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},            \
+        {128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},           \
+        {256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},           \
+        {512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},           \
+        {1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},          \
+        {2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},          \
+        {4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},          \
+        {8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},          \
+        {16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},         \
+        {32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},         \
+        {65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},         \
+        {131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},                \
+        {262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},                \
+        {524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},                \
+        {1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}               \
+        }               \
+        },               \
+	{		\
+	128,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..ed3ab65
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..810deae
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..b5899f5
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,222 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{256, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{512, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_ring_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..4c66dc6
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{2048, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..d1f2b4e
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Bcast_binomial_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..befaf07
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{65536, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Pipelined_Bcast_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..0aa8f32
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,112 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Bcast_binomial_MV2, -1},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Bcast_binomial_MV2, -1},		\
+	{512, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_binomial_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..82d9064
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Bcast_binomial_MV2, -1},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Bcast_binomial_MV2, -1},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8192, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{16384, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32768, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{65536, &MPIR_Bcast_binomial_MV2, -1},		\
+	{131072, &MPIR_Bcast_binomial_MV2, -1},		\
+	{262144, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{524288, &MPIR_Bcast_binomial_MV2, -1},		\
+	{1048576, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 8}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..24383f6
--- /dev/null
+++ b/src/mpi/coll/tuning/bcast/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,167 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	8192,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Bcast_binomial_MV2, -1},		\
+	{2, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4, &MPIR_Bcast_binomial_MV2, -1},		\
+	{8, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16, &MPIR_Bcast_binomial_MV2, -1},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{512, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{1024, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{2048, &MPIR_Bcast_binomial_MV2, -1},		\
+	{4096, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{8192, &MPIR_Bcast_binomial_MV2, -1},		\
+	{16384, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1},		\
+	{131072, &MPIR_Bcast_scatter_ring_allgather_MV2, -1},		\
+	{262144, &MPIR_Bcast_binomial_MV2, -1},		\
+	{524288, &MPIR_Knomial_Bcast_inter_node_wrapper_MV2, -1},		\
+	{1048576, &MPIR_Bcast_scatter_doubling_allgather_MV2, -1}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{512, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1024, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{2048, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{4096, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{8192, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, -1},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{131072, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{262144, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{524288, &MPIR_Shmem_Bcast_MV2, -1},		\
+	{1048576, &MPIR_Shmem_Bcast_MV2, -1}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 4}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	8192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	21,		\
+	{		\
+	{1, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{2, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{4, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{8, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{16, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{64, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{128, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{256, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{512, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{1024, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{2048, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{4096, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{8192, &MPIR_Pipelined_Bcast_Zcpy_MV2, 4},		\
+	{16384, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{32768, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{65536, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{131072, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{262144, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2},		\
+	{524288, &MPIR_Pipelined_Bcast_Zcpy_MV2, 8},		\
+	{1048576, &MPIR_Pipelined_Bcast_Zcpy_MV2, 2}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{2, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{4, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{8, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{16, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{64, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{128, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{256, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{512, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{1024, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{2048, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{4096, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{8192, &MPIR_Knomial_Bcast_intra_node_MV2, 4},		\
+	{16384, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{32768, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{65536, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{131072, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{262144, &MPIR_Knomial_Bcast_intra_node_MV2, 2},		\
+	{524288, &MPIR_Knomial_Bcast_intra_node_MV2, 8},		\
+	{1048576, &MPIR_Knomial_Bcast_intra_node_MV2, 2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/bcast_arch_tuning.h b/src/mpi/coll/tuning/bcast_arch_tuning.h
index fbb4286..4c80c73 100644
--- a/src/mpi/coll/tuning/bcast_arch_tuning.h
+++ b/src/mpi/coll/tuning/bcast_arch_tuning.h
@@ -108,11 +108,11 @@
 #include "bcast/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_16ppn.h"
 #include "bcast/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_24ppn.h"
 #include "bcast/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_48ppn.h"
-#include "bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "bcast/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "bcast/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "bcast/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "bcast/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "bcast/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -126,6 +126,7 @@
 #include "bcast/gen2_IBM_POWER9_MLX_CX_EDR_44ppn.h"
 #include "bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "bcast/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -145,3 +146,30 @@
 #include "bcast/gen2_cma_AMD_EPYC_16ppn.h"
 #include "bcast/gen2_cma_AMD_EPYC_32ppn.h"
 #include "bcast/gen2_cma_AMD_EPYC_64ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "bcast/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "bcast/gen2_cma_NOWHASWELL_1ppn.h"
+#include "bcast/gen2_cma_NOWHASWELL_2ppn.h"
+#include "bcast/gen2_cma_NOWHASWELL_4ppn.h"
+#include "bcast/gen2_cma_NOWHASWELL_8ppn.h"
+#include "bcast/gen2_cma_NOWHASWELL_16ppn.h"
+#include "bcast/gen2_cma_NOWHASWELL_20ppn.h"
+#include "bcast/gen2_cma_FRONTERA_1ppn.h"
+#include "bcast/gen2_cma_FRONTERA_2ppn.h"
+#include "bcast/gen2_cma_FRONTERA_4ppn.h"
+#include "bcast/gen2_cma_FRONTERA_8ppn.h"
+#include "bcast/gen2_cma_FRONTERA_16ppn.h"
+#include "bcast/gen2_cma_FRONTERA_28ppn.h"
+#include "bcast/gen2_cma_MAYER_1ppn.h"
+#include "bcast/gen2_cma_MAYER_2ppn.h"
+#include "bcast/gen2_cma_MAYER_4ppn.h"
+#include "bcast/gen2_cma_MAYER_8ppn.h"
+#include "bcast/gen2_cma_MAYER_16ppn.h"
+#include "bcast/gen2_cma_MAYER_28ppn.h"
+#include "bcast/gen2_cma_MAYER_32ppn.h"
+#include "bcast/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..9a0f1f0
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..793aa76
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,53 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_intra},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_intra},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..ebf01ff
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_intra},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_intra},		\
+	{512, &MPIR_Gather_intra},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_intra},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..f577df7
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..8e30b30
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..5c711eb
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..32037c6
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..bb83368
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..63fc982
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_intra},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..9af1458
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..c0c7b48
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_intra},		\
+	{4, &MPIR_Gather_intra},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..57a14c7
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index f3e614b..0000000
--- a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_intra},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_intra},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
-	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
-	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index b0e3945..0000000
--- a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,104 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_intra},		\
-	{2048, &MPIR_Gather_intra},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index 1d3b5f8..0000000
--- a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_intra},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8192, &MPIR_Gather_intra},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
-	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
-	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_intra},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index baa0cc9..0000000
--- a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_intra},		\
-	{4, &MPIR_Gather_intra},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
-	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
-	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index 74e9a80..0000000
--- a/src/mpi/coll/tuning/gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_intra},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_MV2_Direct},		\
-	{65536, &MPIR_Gather_MV2_Direct},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_intra}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_Direct},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_MV2_Direct},		\
-	{262144, &MPIR_Gather_MV2_Direct},		\
-	{524288, &MPIR_Gather_MV2_Direct},		\
-	{1048576, &MPIR_Gather_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4, &MPIR_Gather_MV2_two_level_Direct},		\
-	{8, &MPIR_Gather_MV2_two_level_Direct},		\
-	{16, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32, &MPIR_Gather_MV2_two_level_Direct},		\
-	{64, &MPIR_Gather_MV2_two_level_Direct},		\
-	{128, &MPIR_Gather_MV2_two_level_Direct},		\
-	{256, &MPIR_Gather_MV2_two_level_Direct},		\
-	{512, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
-	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
-	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
-	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
-	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
-	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
-	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
-	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Gather_MV2_Direct},		\
-	{2, &MPIR_Gather_MV2_Direct},		\
-	{4, &MPIR_Gather_MV2_Direct},		\
-	{8, &MPIR_Gather_MV2_Direct},		\
-	{16, &MPIR_Gather_MV2_Direct},		\
-	{32, &MPIR_Gather_MV2_Direct},		\
-	{64, &MPIR_Gather_MV2_Direct},		\
-	{128, &MPIR_Gather_MV2_Direct},		\
-	{256, &MPIR_Gather_MV2_Direct},		\
-	{512, &MPIR_Gather_MV2_Direct},		\
-	{1024, &MPIR_Gather_MV2_Direct},		\
-	{2048, &MPIR_Gather_MV2_Direct},		\
-	{4096, &MPIR_Gather_MV2_Direct},		\
-	{8192, &MPIR_Gather_MV2_Direct},		\
-	{16384, &MPIR_Gather_intra},		\
-	{32768, &MPIR_Gather_intra},		\
-	{65536, &MPIR_Gather_intra},		\
-	{131072, &MPIR_Gather_intra},		\
-	{262144, &MPIR_Gather_intra},		\
-	{524288, &MPIR_Gather_intra},		\
-	{1048576, &MPIR_Gather_intra}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..da3ce02
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..48ba53e
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..cfb73b1
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..349daa9
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_32ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_32ppn.h
new file mode 100644
index 0000000..3802a39
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_32ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	512,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..2e922be
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_56ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_56ppn.h
new file mode 100644
index 0000000..faa3f3a
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_56ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__56PPN {		\
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	896,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..e9de0f3
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..acf2879
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..26bbb97
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..72ba541
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_intra},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..2a81816
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..5dfa085
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_intra},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..03a9e8a
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        21,             \
+        {               \
+        {1, &MPIR_Gather_MV2_two_level_Direct},         \
+        {2, &MPIR_Gather_MV2_two_level_Direct},         \
+        {4, &MPIR_Gather_MV2_two_level_Direct},         \
+        {8, &MPIR_Gather_MV2_two_level_Direct},         \
+        {16, &MPIR_Gather_MV2_two_level_Direct},                \
+        {32, &MPIR_Gather_MV2_two_level_Direct},                \
+        {64, &MPIR_Gather_MV2_two_level_Direct},                \
+        {128, &MPIR_Gather_MV2_two_level_Direct},               \
+        {256, &MPIR_Gather_MV2_two_level_Direct},               \
+        {512, &MPIR_Gather_MV2_two_level_Direct},               \
+        {1024, &MPIR_Gather_MV2_two_level_Direct},              \
+        {2048, &MPIR_Gather_MV2_two_level_Direct},              \
+        {4096, &MPIR_Gather_MV2_Direct},                \
+        {8192, &MPIR_Gather_MV2_two_level_Direct},              \
+        {16384, &MPIR_Gather_MV2_two_level_Direct},             \
+        {32768, &MPIR_Gather_intra},            \
+        {65536, &MPIR_Gather_MV2_two_level_Direct},             \
+        {131072, &MPIR_Gather_intra},           \
+        {262144, &MPIR_Gather_MV2_two_level_Direct},            \
+        {524288, &MPIR_Gather_MV2_two_level_Direct},            \
+        {1048576, &MPIR_Gather_intra}           \
+        },              \
+        21,             \
+        {               \
+        {1, &MPIR_Gather_MV2_Direct},           \
+        {2, &MPIR_Gather_MV2_Direct},           \
+        {4, &MPIR_Gather_MV2_Direct},           \
+        {8, &MPIR_Gather_MV2_Direct},           \
+        {16, &MPIR_Gather_MV2_Direct},          \
+        {32, &MPIR_Gather_MV2_Direct},          \
+        {64, &MPIR_Gather_MV2_Direct},          \
+        {128, &MPIR_Gather_MV2_Direct},         \
+        {256, &MPIR_Gather_MV2_Direct},         \
+        {512, &MPIR_Gather_MV2_Direct},         \
+        {1024, &MPIR_Gather_MV2_Direct},                \
+        {2048, &MPIR_Gather_MV2_Direct},                \
+        {4096, &MPIR_Gather_MV2_Direct},                \
+        {8192, &MPIR_Gather_intra},             \
+        {16384, &MPIR_Gather_intra},            \
+        {32768, &MPIR_Gather_MV2_Direct},               \
+        {65536, &MPIR_Gather_intra},            \
+        {131072, &MPIR_Gather_MV2_Direct},              \
+        {262144, &MPIR_Gather_intra},           \
+        {524288, &MPIR_Gather_intra},           \
+        {1048576, &MPIR_Gather_MV2_Direct}              \
+        }               \
+        },               \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..86723e1
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_intra},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..f522064
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..bad0f06
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..a42bc50
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..7e0c87d
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_intra},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..c27f0ac
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_intra},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..6644c33
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_intra},		\
+	{8192, &MPIR_Gather_intra},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_intra}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..b35638b
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..eca71a3
--- /dev/null
+++ b/src/mpi/coll/tuning/gather/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_MV2_Direct},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_MV2_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_MV2_two_level_Direct},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_MV2_Direct},		\
+	{524288, &MPIR_Gather_MV2_Direct},		\
+	{1048576, &MPIR_Gather_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_two_level_Direct},		\
+	{2, &MPIR_Gather_MV2_two_level_Direct},		\
+	{4, &MPIR_Gather_MV2_two_level_Direct},		\
+	{8, &MPIR_Gather_MV2_two_level_Direct},		\
+	{16, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32, &MPIR_Gather_MV2_two_level_Direct},		\
+	{64, &MPIR_Gather_MV2_two_level_Direct},		\
+	{128, &MPIR_Gather_MV2_two_level_Direct},		\
+	{256, &MPIR_Gather_MV2_two_level_Direct},		\
+	{512, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_two_level_Direct},		\
+	{32768, &MPIR_Gather_MV2_two_level_Direct},		\
+	{65536, &MPIR_Gather_intra},		\
+	{131072, &MPIR_Gather_MV2_two_level_Direct},		\
+	{262144, &MPIR_Gather_MV2_two_level_Direct},		\
+	{524288, &MPIR_Gather_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Gather_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Gather_MV2_Direct},		\
+	{2, &MPIR_Gather_MV2_Direct},		\
+	{4, &MPIR_Gather_MV2_Direct},		\
+	{8, &MPIR_Gather_MV2_Direct},		\
+	{16, &MPIR_Gather_MV2_Direct},		\
+	{32, &MPIR_Gather_MV2_Direct},		\
+	{64, &MPIR_Gather_MV2_Direct},		\
+	{128, &MPIR_Gather_MV2_Direct},		\
+	{256, &MPIR_Gather_MV2_Direct},		\
+	{512, &MPIR_Gather_MV2_Direct},		\
+	{1024, &MPIR_Gather_MV2_Direct},		\
+	{2048, &MPIR_Gather_MV2_Direct},		\
+	{4096, &MPIR_Gather_MV2_Direct},		\
+	{8192, &MPIR_Gather_MV2_Direct},		\
+	{16384, &MPIR_Gather_MV2_Direct},		\
+	{32768, &MPIR_Gather_intra},		\
+	{65536, &MPIR_Gather_MV2_Direct},		\
+	{131072, &MPIR_Gather_intra},		\
+	{262144, &MPIR_Gather_intra},		\
+	{524288, &MPIR_Gather_intra},		\
+	{1048576, &MPIR_Gather_intra}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/gather_arch_tuning.h b/src/mpi/coll/tuning/gather_arch_tuning.h
index 71c102c..7c0ae25 100644
--- a/src/mpi/coll/tuning/gather_arch_tuning.h
+++ b/src/mpi/coll/tuning/gather_arch_tuning.h
@@ -109,11 +109,11 @@
 #include "gather/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_26ppn.h"
 #include "gather/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_48ppn.h"
 #include "gather/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_52ppn.h"
-#include "gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "gather/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "gather/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "gather/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "gather/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "gather/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -127,6 +127,7 @@
 #include "gather/gen2_IBM_POWER9_MLX_CX_EDR_44ppn.h"
 #include "gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "gather/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -146,3 +147,32 @@
 #include "gather/gen2_cma_AMD_EPYC_16ppn.h"
 #include "gather/gen2_cma_AMD_EPYC_32ppn.h"
 #include "gather/gen2_cma_AMD_EPYC_64ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "gather/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "gather/gen2_cma_NOWHASWELL_1ppn.h"
+#include "gather/gen2_cma_NOWHASWELL_2ppn.h"
+#include "gather/gen2_cma_NOWHASWELL_4ppn.h"
+#include "gather/gen2_cma_NOWHASWELL_8ppn.h"
+#include "gather/gen2_cma_NOWHASWELL_16ppn.h"
+#include "gather/gen2_cma_NOWHASWELL_20ppn.h"
+#include "gather/gen2_cma_FRONTERA_1ppn.h"
+#include "gather/gen2_cma_FRONTERA_2ppn.h"
+#include "gather/gen2_cma_FRONTERA_4ppn.h"
+#include "gather/gen2_cma_FRONTERA_8ppn.h"
+#include "gather/gen2_cma_FRONTERA_16ppn.h"
+#include "gather/gen2_cma_FRONTERA_28ppn.h"
+#include "gather/gen2_cma_FRONTERA_32ppn.h"
+#include "gather/gen2_cma_FRONTERA_56ppn.h"
+#include "gather/gen2_cma_MAYER_1ppn.h"
+#include "gather/gen2_cma_MAYER_2ppn.h"
+#include "gather/gen2_cma_MAYER_4ppn.h"
+#include "gather/gen2_cma_MAYER_8ppn.h"
+#include "gather/gen2_cma_MAYER_16ppn.h"
+#include "gather/gen2_cma_MAYER_28ppn.h"
+#include "gather/gen2_cma_MAYER_32ppn.h"
+#include "gather/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..8500123
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,140 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..f7b0a70
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,90 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..c09b90f
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,140 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..30963e2
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,140 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..8ffd3d6
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,140 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_redscat_gather_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..9372a0e
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,140 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..529d6aa
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,140 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	38,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..fc42a9e
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..e06fa07
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,102 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..6bdf444
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..3a9cd62
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..34504a0
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index 2e4ecb3..0000000
--- a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,152 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_redscat_gather_MV2},		\
-	{8, &MPIR_Reduce_redscat_gather_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_redscat_gather_MV2},		\
-	{64, &MPIR_Reduce_redscat_gather_MV2},		\
-	{128, &MPIR_Reduce_redscat_gather_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
-	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
-	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
-	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_binomial_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_binomial_MV2},		\
-	{8, &MPIR_Reduce_binomial_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_binomial_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_binomial_MV2},		\
-	{1024, &MPIR_Reduce_binomial_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_binomial_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index c2de8a0..0000000
--- a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,102 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	4,		\
-	4,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_binomial_MV2},		\
-	{8, &MPIR_Reduce_binomial_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_binomial_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_binomial_MV2},		\
-	{256, &MPIR_Reduce_binomial_MV2},		\
-	{512, &MPIR_Reduce_binomial_MV2},		\
-	{1024, &MPIR_Reduce_binomial_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_binomial_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	4,		\
-	4,		\
-	{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_binomial_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index bdbaeea..0000000
--- a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,152 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_redscat_gather_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_redscat_gather_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_binomial_MV2},		\
-	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_binomial_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_binomial_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_binomial_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_binomial_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_binomial_MV2},		\
-	{8, &MPIR_Reduce_binomial_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_binomial_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_binomial_MV2},		\
-	{256, &MPIR_Reduce_binomial_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_binomial_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
-	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_binomial_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{262144, &MPIR_Reduce_binomial_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index 5ebf322..0000000
--- a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,152 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_binomial_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_redscat_gather_MV2},		\
-	{256, &MPIR_Reduce_redscat_gather_MV2},		\
-	{512, &MPIR_Reduce_redscat_gather_MV2},		\
-	{1024, &MPIR_Reduce_binomial_MV2},		\
-	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
-	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_binomial_MV2},		\
-	{512, &MPIR_Reduce_binomial_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_binomial_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_binomial_MV2},		\
-	{64, &MPIR_Reduce_binomial_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_binomial_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8192, &MPIR_Reduce_binomial_MV2},		\
-	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_binomial_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index dbb0cef..0000000
--- a/src/mpi/coll/tuning/reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,152 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_redscat_gather_MV2},		\
-	{8, &MPIR_Reduce_redscat_gather_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_binomial_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_redscat_gather_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
-	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_binomial_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_binomial_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_binomial_MV2},		\
-	{512, &MPIR_Reduce_binomial_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_binomial_MV2},		\
-	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16384, &MPIR_Reduce_binomial_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{524288, &MPIR_Reduce_binomial_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	4,		\
-	4,		\
-	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{8192, &MPIR_Reduce_binomial_MV2},		\
-	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{32768, &MPIR_Reduce_binomial_MV2},		\
-	{65536, &MPIR_Reduce_binomial_MV2},		\
-	{131072, &MPIR_Reduce_binomial_MV2},		\
-	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
-	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
-	{1048576, &MPIR_Reduce_binomial_MV2}		\
-	},		\
-	19,		\
-	{		\
-	{4, &MPIR_Reduce_shmem_MV2},		\
-	{8, &MPIR_Reduce_shmem_MV2},		\
-	{16, &MPIR_Reduce_shmem_MV2},		\
-	{32, &MPIR_Reduce_shmem_MV2},		\
-	{64, &MPIR_Reduce_shmem_MV2},		\
-	{128, &MPIR_Reduce_shmem_MV2},		\
-	{256, &MPIR_Reduce_shmem_MV2},		\
-	{512, &MPIR_Reduce_shmem_MV2},		\
-	{1024, &MPIR_Reduce_shmem_MV2},		\
-	{2048, &MPIR_Reduce_shmem_MV2},		\
-	{4096, &MPIR_Reduce_shmem_MV2},		\
-	{8192, &MPIR_Reduce_shmem_MV2},		\
-	{16384, &MPIR_Reduce_shmem_MV2},		\
-	{32768, &MPIR_Reduce_shmem_MV2},		\
-	{65536, &MPIR_Reduce_shmem_MV2},		\
-	{131072, &MPIR_Reduce_shmem_MV2},		\
-	{262144, &MPIR_Reduce_shmem_MV2},		\
-	{524288, &MPIR_Reduce_shmem_MV2},		\
-	{1048576, &MPIR_Reduce_shmem_MV2}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..841d1cc
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,252 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2},		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2},		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..be2a8d2
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..b9c4d4d
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..6e1edf1
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,252 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_redscat_gather_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_32ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_32ppn.h
new file mode 100644
index 0000000..f8230c1
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_32ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__FRONTERA__32PPN {		\
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..a979a8a
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,252 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_56ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_56ppn.h
new file mode 100644
index 0000000..e60247f
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_56ppn.h
@@ -0,0 +1,252 @@
+#define GEN2_CMA__FRONTERA__56PPN {		\
+	{		\
+	56,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_redscat_gather_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_redscat_gather_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2},		\
+	}		\
+	},		 \
+	{		\
+	896,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..d170f8a
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,252 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..700d939
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,252 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..f5cdbf9
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..c09c230
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..ea10752
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_redscat_gather_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..1dc2135
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_redscat_gather_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..9cbaca8
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        4,              \
+        4,              \
+        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},              \
+        19,             \
+        {               \
+        {4, &MPIR_Reduce_binomial_MV2},         \
+        {8, &MPIR_Reduce_inter_knomial_wrapper_MV2},            \
+        {16, &MPIR_Reduce_inter_knomial_wrapper_MV2},           \
+        {32, &MPIR_Reduce_inter_knomial_wrapper_MV2},           \
+        {64, &MPIR_Reduce_binomial_MV2},                \
+        {128, &MPIR_Reduce_binomial_MV2},               \
+        {256, &MPIR_Reduce_inter_knomial_wrapper_MV2},          \
+        {512, &MPIR_Reduce_binomial_MV2},               \
+        {1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},         \
+        {2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},         \
+        {4096, &MPIR_Reduce_redscat_gather_MV2},                \
+        {8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},         \
+        {16384, &MPIR_Reduce_redscat_gather_MV2},               \
+        {32768, &MPIR_Reduce_binomial_MV2},             \
+        {65536, &MPIR_Reduce_redscat_gather_MV2},               \
+        {131072, &MPIR_Reduce_binomial_MV2},            \
+        {262144, &MPIR_Reduce_redscat_gather_MV2},              \
+        {524288, &MPIR_Reduce_binomial_MV2},            \
+        {1048576, &MPIR_Reduce_redscat_gather_MV2}              \
+        },              \
+        19,             \
+        {               \
+        {4, &MPIR_Reduce_shmem_MV2},            \
+        {8, &MPIR_Reduce_binomial_MV2},         \
+        {16, &MPIR_Reduce_binomial_MV2},                \
+        {32, &MPIR_Reduce_intra_knomial_wrapper_MV2},           \
+        {64, &MPIR_Reduce_shmem_MV2},           \
+        {128, &MPIR_Reduce_binomial_MV2},               \
+        {256, &MPIR_Reduce_intra_knomial_wrapper_MV2},          \
+        {512, &MPIR_Reduce_shmem_MV2},          \
+        {1024, &MPIR_Reduce_binomial_MV2},              \
+        {2048, &MPIR_Reduce_binomial_MV2},              \
+        {4096, &MPIR_Reduce_shmem_MV2},         \
+        {8192, &MPIR_Reduce_shmem_MV2},         \
+        {16384, &MPIR_Reduce_shmem_MV2},                \
+        {32768, &MPIR_Reduce_shmem_MV2},                \
+        {65536, &MPIR_Reduce_shmem_MV2},                \
+        {131072, &MPIR_Reduce_shmem_MV2},               \
+        {262144, &MPIR_Reduce_binomial_MV2},            \
+        {524288, &MPIR_Reduce_shmem_MV2},               \
+        {1048576, &MPIR_Reduce_shmem_MV2}               \
+        }               \
+        },               \
+	{		\
+	128,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..4e00151
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..c0d8e06
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..e8bc981
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,202 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..8e6f333
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..1c65ce1
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,102 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..26f01bf
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..9c3412c
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,102 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	4,		\
+	4,		\
+	{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..e2e4d68
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..3aff596
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,152 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_redscat_gather_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_redscat_gather_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_redscat_gather_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_redscat_gather_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8192, &MPIR_Reduce_redscat_gather_MV2},		\
+	{16384, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_inter_knomial_wrapper_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_redscat_gather_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1024, &MPIR_Reduce_redscat_gather_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2},		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce/psm_INTEL_PLATINUM_8160_2S_48_INTEL_HFI_100_48ppn.h b/src/mpi/coll/tuning/reduce/psm_INTEL_PLATINUM_8160_2S_48_INTEL_HFI_100_48ppn.h
new file mode 100644
index 0000000..a85b7eb
--- /dev/null
+++ b/src/mpi/coll/tuning/reduce/psm_INTEL_PLATINUM_8160_2S_48_INTEL_HFI_100_48ppn.h
@@ -0,0 +1,252 @@
+#define PSM__INTEL_PLATINUM_8160_2S_48_INTEL_HFI_100__48PPN {		\
+	{		\
+	48,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_redscat_gather_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_redscat_gather_MV2},		\
+	{32, &MPIR_Reduce_redscat_gather_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_redscat_gather_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_intra_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_binomial_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	192,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	384,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_binomial_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_binomial_MV2},		\
+	{1024, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_binomial_MV2},		\
+	{262144, &MPIR_Reduce_binomial_MV2},		\
+	{524288, &MPIR_Reduce_binomial_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_shmem_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	},		 \
+	{		\
+	768,		\
+	4,		\
+	4,		\
+	{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{8, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{16, &MPIR_Reduce_binomial_MV2},		\
+	{32, &MPIR_Reduce_binomial_MV2},		\
+	{64, &MPIR_Reduce_binomial_MV2},		\
+	{128, &MPIR_Reduce_binomial_MV2},		\
+	{256, &MPIR_Reduce_binomial_MV2},		\
+	{512, &MPIR_Reduce_inter_knomial_wrapper_MV2},		\
+	{1024, &MPIR_Reduce_binomial_MV2},		\
+	{2048, &MPIR_Reduce_binomial_MV2},		\
+	{4096, &MPIR_Reduce_binomial_MV2},		\
+	{8192, &MPIR_Reduce_binomial_MV2},		\
+	{16384, &MPIR_Reduce_binomial_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_binomial_MV2},		\
+	{131072, &MPIR_Reduce_redscat_gather_MV2},		\
+	{262144, &MPIR_Reduce_redscat_gather_MV2},		\
+	{524288, &MPIR_Reduce_redscat_gather_MV2},		\
+	{1048576, &MPIR_Reduce_binomial_MV2}		\
+	},		\
+	19,		\
+	{		\
+	{4, &MPIR_Reduce_shmem_MV2},		\
+	{8, &MPIR_Reduce_shmem_MV2},		\
+	{16, &MPIR_Reduce_shmem_MV2},		\
+	{32, &MPIR_Reduce_shmem_MV2},		\
+	{64, &MPIR_Reduce_shmem_MV2},		\
+	{128, &MPIR_Reduce_shmem_MV2},		\
+	{256, &MPIR_Reduce_shmem_MV2},		\
+	{512, &MPIR_Reduce_shmem_MV2},		\
+	{1024, &MPIR_Reduce_shmem_MV2},		\
+	{2048, &MPIR_Reduce_shmem_MV2},		\
+	{4096, &MPIR_Reduce_shmem_MV2},		\
+	{8192, &MPIR_Reduce_shmem_MV2},		\
+	{16384, &MPIR_Reduce_shmem_MV2},		\
+	{32768, &MPIR_Reduce_binomial_MV2},		\
+	{65536, &MPIR_Reduce_shmem_MV2},		\
+	{131072, &MPIR_Reduce_shmem_MV2},		\
+	{262144, &MPIR_Reduce_shmem_MV2},		\
+	{524288, &MPIR_Reduce_shmem_MV2},		\
+	{1048576, &MPIR_Reduce_shmem_MV2}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/reduce_arch_tuning.h b/src/mpi/coll/tuning/reduce_arch_tuning.h
index 190450d..474b67a 100644
--- a/src/mpi/coll/tuning/reduce_arch_tuning.h
+++ b/src/mpi/coll/tuning/reduce_arch_tuning.h
@@ -107,12 +107,13 @@
 #include "reduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_8ppn.h"
 #include "reduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_16ppn.h"
 #include "reduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_26ppn.h"
+#include "reduce/psm_INTEL_PLATINUM_8160_2S_48_INTEL_HFI_100_48ppn.h"
 #include "reduce/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_52ppn.h"
-#include "reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "reduce/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "reduce/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "reduce/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "reduce/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "reduce/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -127,6 +128,7 @@
 #include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_2ppn.h"
 #include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "reduce/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -146,3 +148,32 @@
 #include "reduce/gen2_cma_AMD_EPYC_16ppn.h"
 #include "reduce/gen2_cma_AMD_EPYC_32ppn.h"
 #include "reduce/gen2_cma_AMD_EPYC_64ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "reduce/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "reduce/gen2_cma_NOWHASWELL_1ppn.h"
+#include "reduce/gen2_cma_NOWHASWELL_2ppn.h"
+#include "reduce/gen2_cma_NOWHASWELL_4ppn.h"
+#include "reduce/gen2_cma_NOWHASWELL_8ppn.h"
+#include "reduce/gen2_cma_NOWHASWELL_16ppn.h"
+#include "reduce/gen2_cma_NOWHASWELL_20ppn.h"
+#include "reduce/gen2_cma_FRONTERA_1ppn.h"
+#include "reduce/gen2_cma_FRONTERA_2ppn.h"
+#include "reduce/gen2_cma_FRONTERA_4ppn.h"
+#include "reduce/gen2_cma_FRONTERA_8ppn.h"
+#include "reduce/gen2_cma_FRONTERA_16ppn.h"
+#include "reduce/gen2_cma_FRONTERA_28ppn.h"
+#include "reduce/gen2_cma_FRONTERA_32ppn.h"
+#include "reduce/gen2_cma_FRONTERA_56ppn.h"
+#include "reduce/gen2_cma_MAYER_1ppn.h"
+#include "reduce/gen2_cma_MAYER_2ppn.h"
+#include "reduce/gen2_cma_MAYER_4ppn.h"
+#include "reduce/gen2_cma_MAYER_8ppn.h"
+#include "reduce/gen2_cma_MAYER_16ppn.h"
+#include "reduce/gen2_cma_MAYER_28ppn.h"
+#include "reduce/gen2_cma_MAYER_32ppn.h"
+#include "reduce/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_16ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_16ppn.h
new file mode 100644
index 0000000..d747ba8
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_16ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_1ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_1ppn.h
new file mode 100644
index 0000000..ea2ee32
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_1ppn.h
@@ -0,0 +1,53 @@
+#define GEN2_CMA__AMD_EPYC_ROME__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_2ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_2ppn.h
new file mode 100644
index 0000000..c4a9128
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_2ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_32ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_32ppn.h
new file mode 100644
index 0000000..3517e3b
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_32ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_4ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_4ppn.h
new file mode 100644
index 0000000..c8b8b44
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_4ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_64ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_64ppn.h
new file mode 100644
index 0000000..6b3654e
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_64ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__64PPN {		\
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_8ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_8ppn.h
new file mode 100644
index 0000000..6259584
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_AMD_EPYC_ROME_8ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__AMD_EPYC_ROME__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
new file mode 100644
index 0000000..5630474
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
new file mode 100644
index 0000000..3db2b34
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
new file mode 100644
index 0000000..88d4800
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__24PPN {		\
+	{		\
+	24,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
new file mode 100644
index 0000000..18dd2b2
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
new file mode 100644
index 0000000..20de9b7
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__ARM_CAVIUM_V8_2S_28_MLX_CX_FDR__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
deleted file mode 100644
index b492bbf..0000000
--- a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__16PPN {		\
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Binomial},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Binomial}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	64,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
deleted file mode 100644
index 8b4a137..0000000
--- a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h
+++ /dev/null
@@ -1,104 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__1PPN {		\
-	{		\
-	2,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Binomial},		\
-	{4096, &MPIR_Scatter_MV2_Binomial},		\
-	{8192, &MPIR_Scatter_MV2_Binomial},		\
-	{16384, &MPIR_Scatter_MV2_Binomial},		\
-	{32768, &MPIR_Scatter_MV2_Binomial},		\
-	{65536, &MPIR_Scatter_MV2_Binomial},		\
-	{131072, &MPIR_Scatter_MV2_Binomial},		\
-	{262144, &MPIR_Scatter_MV2_Binomial},		\
-	{524288, &MPIR_Scatter_MV2_Binomial},		\
-	{1048576, &MPIR_Scatter_MV2_Binomial}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	4,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Binomial},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Binomial},		\
-	{524288, &MPIR_Scatter_MV2_Binomial},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
deleted file mode 100644
index d1e3614..0000000
--- a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__24PPN {		\
-	{		\
-	24,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Binomial},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Binomial},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Binomial}		\
-	}		\
-	},		 \
-	{		\
-	48,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{8, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	96,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
deleted file mode 100644
index f2df89d..0000000
--- a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__4PPN {		\
-	{		\
-	4,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Binomial},		\
-	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Binomial},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Binomial},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	8,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
deleted file mode 100644
index 25ae756..0000000
--- a/src/mpi/coll/tuning/scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h
+++ /dev/null
@@ -1,155 +0,0 @@
-#define GEN2_CMA__ARM_CAVIUM_V8_MLX_CX_FDR__8PPN {		\
-	{		\
-	8,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Binomial},		\
-	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
-	{131072, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Binomial},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Binomial},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	16,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	},		 \
-	{		\
-	32,		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Binomial},		\
-	{2, &MPIR_Scatter_MV2_Binomial},		\
-	{4, &MPIR_Scatter_MV2_Binomial},		\
-	{8, &MPIR_Scatter_MV2_Binomial},		\
-	{16, &MPIR_Scatter_MV2_Binomial},		\
-	{32, &MPIR_Scatter_MV2_Binomial},		\
-	{64, &MPIR_Scatter_MV2_Binomial},		\
-	{128, &MPIR_Scatter_MV2_Binomial},		\
-	{256, &MPIR_Scatter_MV2_Binomial},		\
-	{512, &MPIR_Scatter_MV2_Binomial},		\
-	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	},		\
-	21,		\
-	{		\
-	{1, &MPIR_Scatter_MV2_Direct},		\
-	{2, &MPIR_Scatter_MV2_Direct},		\
-	{4, &MPIR_Scatter_MV2_Direct},		\
-	{8, &MPIR_Scatter_MV2_Direct},		\
-	{16, &MPIR_Scatter_MV2_Direct},		\
-	{32, &MPIR_Scatter_MV2_Direct},		\
-	{64, &MPIR_Scatter_MV2_Direct},		\
-	{128, &MPIR_Scatter_MV2_Direct},		\
-	{256, &MPIR_Scatter_MV2_Direct},		\
-	{512, &MPIR_Scatter_MV2_Direct},		\
-	{1024, &MPIR_Scatter_MV2_Direct},		\
-	{2048, &MPIR_Scatter_MV2_Direct},		\
-	{4096, &MPIR_Scatter_MV2_Direct},		\
-	{8192, &MPIR_Scatter_MV2_Direct},		\
-	{16384, &MPIR_Scatter_MV2_Direct},		\
-	{32768, &MPIR_Scatter_MV2_Direct},		\
-	{65536, &MPIR_Scatter_MV2_Direct},		\
-	{131072, &MPIR_Scatter_MV2_Direct},		\
-	{262144, &MPIR_Scatter_MV2_Direct},		\
-	{524288, &MPIR_Scatter_MV2_Direct},		\
-	{1048576, &MPIR_Scatter_MV2_Direct}		\
-	}		\
-	}		 \
-}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_16ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_16ppn.h
new file mode 100644
index 0000000..5854d47
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_16ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial},		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_1ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_1ppn.h
new file mode 100644
index 0000000..12dc8df
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_1ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__FRONTERA__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_28ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_28ppn.h
new file mode 100644
index 0000000..7da7f8b
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_28ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__FRONTERA__28PPN {		\
+	{		\
+	28,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial},		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_2ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_2ppn.h
new file mode 100644
index 0000000..f13aa5f
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_2ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial},		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_32ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_32ppn.h
new file mode 100644
index 0000000..2ab5597
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_32ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial},		\
+	}		\
+	},		 \
+	{		\
+	512,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_4ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_4ppn.h
new file mode 100644
index 0000000..288b9c3
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_4ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial},		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_56ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_56ppn.h
new file mode 100644
index 0000000..7a0730d
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_56ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__56PPN {		\
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct},		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	896,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_8ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_8ppn.h
new file mode 100644
index 0000000..f9c6489
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_FRONTERA_8ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__FRONTERA__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial},		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
new file mode 100644
index 0000000..3582f83
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h
@@ -0,0 +1,257 @@
+#define GEN2_CMA__IBM_POWER9_MLX_CX_EDR__6PPN {		\
+	{		\
+	6,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	12,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	24,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	48,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	96,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_16ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_16ppn.h
new file mode 100644
index 0000000..687fb88
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_16ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_1ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_1ppn.h
new file mode 100644
index 0000000..c131e7a
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_1ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__MAYER__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_28ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_28ppn.h
new file mode 100644
index 0000000..adbc29f
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_28ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__28PPN {		\
+	{		\
+	28,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_2ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_2ppn.h
new file mode 100644
index 0000000..5b69104
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_2ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_32ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_32ppn.h
new file mode 100644
index 0000000..efb823e
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_32ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__32PPN {		\
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+        {               \
+        64,             \
+        21,             \
+        {               \
+        {1, &MPIR_Scatter_MV2_Binomial},                \
+        {2, &MPIR_Scatter_MV2_Binomial},                \
+        {4, &MPIR_Scatter_MV2_Binomial},                \
+        {8, &MPIR_Scatter_MV2_Binomial},                \
+        {16, &MPIR_Scatter_MV2_Binomial},               \
+        {32, &MPIR_Scatter_MV2_Binomial},               \
+        {64, &MPIR_Scatter_MV2_Binomial},               \
+        {128, &MPIR_Scatter_MV2_Binomial},              \
+        {256, &MPIR_Scatter_MV2_Binomial},              \
+        {512, &MPIR_Scatter_MV2_Direct},                \
+        {1024, &MPIR_Scatter_MV2_Direct},               \
+        {2048, &MPIR_Scatter_MV2_Direct},               \
+        {4096, &MPIR_Scatter_MV2_Direct},               \
+        {8192, &MPIR_Scatter_MV2_Direct},               \
+        {16384, &MPIR_Scatter_MV2_Direct},              \
+        {32768, &MPIR_Scatter_MV2_Direct},              \
+        {65536, &MPIR_Scatter_MV2_Direct},              \
+        {131072, &MPIR_Scatter_MV2_Direct},             \
+        {262144, &MPIR_Scatter_MV2_Direct},             \
+        {524288, &MPIR_Scatter_MV2_Direct},             \
+        {1048576, &MPIR_Scatter_MV2_Direct}             \
+        },              \
+        21,             \
+        {               \
+        {1, &MPIR_Scatter_MV2_Direct},          \
+        {2, &MPIR_Scatter_MV2_Direct},          \
+        {4, &MPIR_Scatter_MV2_Direct},          \
+        {8, &MPIR_Scatter_MV2_Direct},          \
+        {16, &MPIR_Scatter_MV2_Direct},         \
+        {32, &MPIR_Scatter_MV2_Direct},         \
+        {64, &MPIR_Scatter_MV2_Direct},         \
+        {128, &MPIR_Scatter_MV2_Direct},                \
+        {256, &MPIR_Scatter_MV2_Direct},                \
+        {512, &MPIR_Scatter_MV2_Direct},                \
+        {1024, &MPIR_Scatter_MV2_Direct},               \
+        {2048, &MPIR_Scatter_MV2_Direct},               \
+        {4096, &MPIR_Scatter_MV2_Direct},               \
+        {8192, &MPIR_Scatter_MV2_Direct},               \
+        {16384, &MPIR_Scatter_MV2_Direct},              \
+        {32768, &MPIR_Scatter_MV2_Direct},              \
+        {65536, &MPIR_Scatter_MV2_Direct},              \
+        {131072, &MPIR_Scatter_MV2_Direct},             \
+        {262144, &MPIR_Scatter_MV2_Direct},             \
+        {524288, &MPIR_Scatter_MV2_Direct},             \
+        {1048576, &MPIR_Scatter_MV2_Direct}             \
+        }               \
+        },               \
+	{		\
+	128,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	256,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_4ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_4ppn.h
new file mode 100644
index 0000000..9711996
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_4ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_56ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_56ppn.h
new file mode 100644
index 0000000..bc53272
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_56ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__56PPN {		\
+	{		\
+	56,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	112,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	224,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	448,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_8ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_8ppn.h
new file mode 100644
index 0000000..8a00f50
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_MAYER_8ppn.h
@@ -0,0 +1,206 @@
+#define GEN2_CMA__MAYER__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_16ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_16ppn.h
new file mode 100644
index 0000000..6ce2e8e
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_16ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__16PPN {		\
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{128, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	64,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_1ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_1ppn.h
new file mode 100644
index 0000000..202ca32
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_1ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__NOWHASWELL__1PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_20ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_20ppn.h
new file mode 100644
index 0000000..195e00e
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_20ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__20PPN {		\
+	{		\
+	20,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	40,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	80,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_2ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_2ppn.h
new file mode 100644
index 0000000..c2f7e8f
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_2ppn.h
@@ -0,0 +1,104 @@
+#define GEN2_CMA__NOWHASWELL__2PPN {		\
+	{		\
+	2,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Binomial},		\
+	{2048, &MPIR_Scatter_MV2_Binomial},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Binomial},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_4ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_4ppn.h
new file mode 100644
index 0000000..59a67b3
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_4ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__4PPN {		\
+	{		\
+	4,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{16384, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Binomial}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Binomial},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Binomial}		\
+	}		\
+	},		 \
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Binomial},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_8ppn.h b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_8ppn.h
new file mode 100644
index 0000000..1548f69
--- /dev/null
+++ b/src/mpi/coll/tuning/scatter/gen2_cma_NOWHASWELL_8ppn.h
@@ -0,0 +1,155 @@
+#define GEN2_CMA__NOWHASWELL__8PPN {		\
+	{		\
+	8,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4096, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{65536, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{131072, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{262144, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{524288, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_two_level_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Direct},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Binomial},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Binomial},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	16,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{256, &MPIR_Scatter_MV2_two_level_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Direct},		\
+	{4, &MPIR_Scatter_MV2_Direct},		\
+	{8, &MPIR_Scatter_MV2_Direct},		\
+	{16, &MPIR_Scatter_MV2_Direct},		\
+	{32, &MPIR_Scatter_MV2_Direct},		\
+	{64, &MPIR_Scatter_MV2_Direct},		\
+	{128, &MPIR_Scatter_MV2_Binomial},		\
+	{256, &MPIR_Scatter_MV2_Binomial},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	},		 \
+	{		\
+	32,		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{2, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{4, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{8, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{16, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{32, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{64, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{128, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{256, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{512, &MPIR_Scatter_MV2_two_level_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	},		\
+	21,		\
+	{		\
+	{1, &MPIR_Scatter_MV2_Binomial},		\
+	{2, &MPIR_Scatter_MV2_Binomial},		\
+	{4, &MPIR_Scatter_MV2_Binomial},		\
+	{8, &MPIR_Scatter_MV2_Binomial},		\
+	{16, &MPIR_Scatter_MV2_Binomial},		\
+	{32, &MPIR_Scatter_MV2_Binomial},		\
+	{64, &MPIR_Scatter_MV2_Binomial},		\
+	{128, &MPIR_Scatter_MV2_Direct},		\
+	{256, &MPIR_Scatter_MV2_Direct},		\
+	{512, &MPIR_Scatter_MV2_Direct},		\
+	{1024, &MPIR_Scatter_MV2_Direct},		\
+	{2048, &MPIR_Scatter_MV2_Direct},		\
+	{4096, &MPIR_Scatter_MV2_Direct},		\
+	{8192, &MPIR_Scatter_MV2_Direct},		\
+	{16384, &MPIR_Scatter_MV2_Direct},		\
+	{32768, &MPIR_Scatter_MV2_Direct},		\
+	{65536, &MPIR_Scatter_MV2_Direct},		\
+	{131072, &MPIR_Scatter_MV2_Direct},		\
+	{262144, &MPIR_Scatter_MV2_Direct},		\
+	{524288, &MPIR_Scatter_MV2_Direct},		\
+	{1048576, &MPIR_Scatter_MV2_Direct}		\
+	}		\
+	}		 \
+}
diff --git a/src/mpi/coll/tuning/scatter_arch_tuning.h b/src/mpi/coll/tuning/scatter_arch_tuning.h
index 5913ba3..804173f 100644
--- a/src/mpi/coll/tuning/scatter_arch_tuning.h
+++ b/src/mpi/coll/tuning/scatter_arch_tuning.h
@@ -110,11 +110,11 @@
 #include "scatter/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_26ppn.h"
 #include "scatter/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_48ppn.h"
 #include "scatter/psm_INTEL_PLATINUM_8170_2S_52_INTEL_HFI_100_52ppn.h"
-#include "scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_1ppn.h"
-#include "scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_4ppn.h"
-#include "scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_8ppn.h"
-#include "scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_16ppn.h"
-#include "scatter/gen2_cma_ARM_CAVIUM_V8_MLX_CX_FDR_24ppn.h"
+#include "scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_1ppn.h"
+#include "scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_4ppn.h"
+#include "scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_8ppn.h"
+#include "scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_16ppn.h"
+#include "scatter/gen2_cma_ARM_CAVIUM_V8_2S_28_MLX_CX_FDR_24ppn.h"
 #include "scatter/gen2_cma_IBM_POWER8_MLX_CX_EDR_2ppn.h"
 #include "scatter/gen2_cma_IBM_POWER8_MLX_CX_EDR_4ppn.h"
 #include "scatter/gen2_cma_IBM_POWER8_MLX_CX_EDR_8ppn.h"
@@ -128,6 +128,7 @@
 #include "scatter/gen2_IBM_POWER9_MLX_CX_EDR_44ppn.h"
 #include "scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_1ppn.h"
 #include "scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_4ppn.h"
+#include "scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_6ppn.h"
 #include "scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_8ppn.h"
 #include "scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_16ppn.h"
 #include "scatter/gen2_cma_IBM_POWER9_MLX_CX_EDR_22ppn.h"
@@ -147,3 +148,32 @@
 #include "scatter/gen2_cma_AMD_EPYC_16ppn.h"
 #include "scatter/gen2_cma_AMD_EPYC_32ppn.h"
 #include "scatter/gen2_cma_AMD_EPYC_64ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_1ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_2ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_4ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_8ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_16ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_32ppn.h"
+#include "scatter/gen2_cma_AMD_EPYC_ROME_64ppn.h"
+#include "scatter/gen2_cma_NOWHASWELL_1ppn.h"
+#include "scatter/gen2_cma_NOWHASWELL_2ppn.h"
+#include "scatter/gen2_cma_NOWHASWELL_4ppn.h"
+#include "scatter/gen2_cma_NOWHASWELL_8ppn.h"
+#include "scatter/gen2_cma_NOWHASWELL_16ppn.h"
+#include "scatter/gen2_cma_NOWHASWELL_20ppn.h"
+#include "scatter/gen2_cma_FRONTERA_1ppn.h"
+#include "scatter/gen2_cma_FRONTERA_2ppn.h"
+#include "scatter/gen2_cma_FRONTERA_4ppn.h"
+#include "scatter/gen2_cma_FRONTERA_8ppn.h"
+#include "scatter/gen2_cma_FRONTERA_16ppn.h"
+#include "scatter/gen2_cma_FRONTERA_28ppn.h"
+#include "scatter/gen2_cma_FRONTERA_32ppn.h"
+#include "scatter/gen2_cma_FRONTERA_56ppn.h"
+#include "scatter/gen2_cma_MAYER_1ppn.h"
+#include "scatter/gen2_cma_MAYER_2ppn.h"
+#include "scatter/gen2_cma_MAYER_4ppn.h"
+#include "scatter/gen2_cma_MAYER_8ppn.h"
+#include "scatter/gen2_cma_MAYER_16ppn.h"
+#include "scatter/gen2_cma_MAYER_28ppn.h"
+#include "scatter/gen2_cma_MAYER_32ppn.h"
+#include "scatter/gen2_cma_MAYER_56ppn.h"
diff --git a/src/mpi/comm/commutil.c b/src/mpi/comm/commutil.c
index b2de7af..6e6d3a5 100644
--- a/src/mpi/comm/commutil.c
+++ b/src/mpi/comm/commutil.c
@@ -145,6 +145,11 @@ int MPIR_Comm_init(MPID_Comm * comm_p)
     comm_p->dev.ch.intra_sock_comm=MPI_COMM_NULL;
     comm_p->dev.ch.intra_sock_leader_comm=MPI_COMM_NULL;
 #endif /*defined(_SMP_LIMIC) */
+
+#if ENABLE_PVAR_MV2
+    comm_p->sub_comm_counters = NULL;
+#endif
+
 #endif /* _OSU_MVAPICH_ */
 
     /* abstractions bleed a bit here... :(*/
@@ -589,6 +594,11 @@ int MPIR_Comm_commit(MPID_Comm * comm)
 
     MPID_MPI_FUNC_ENTER(MPID_STATE_MPIR_COMM_COMMIT);
 
+#if ENABLE_PVAR_MV2
+    extern int sub_comm_counter_idx;
+    comm->sub_comm_counters = (unsigned long long *)MPIU_Calloc(sub_comm_counter_idx, sizeof(unsigned long long));
+#endif
+
     /* It's OK to relax these assertions, but we should do so very
      * intentionally.  For now this function is the only place that we create
      * our hierarchy of communicators */
@@ -1036,7 +1046,15 @@ int MPIR_Comm_delete_internal(MPID_Comm * comm_ptr)
             MPIR_Group_release(comm_ptr->local_group);
         if (comm_ptr->remote_group)
             MPIR_Group_release(comm_ptr->remote_group);
-
+ 
+        /* Free sub-communicator counters */
+        #if ENABLE_PVAR_MV2
+        if(comm_ptr->sub_comm_counters)
+        {
+           MPIU_Free(comm_ptr->sub_comm_counters);
+        }
+        #endif
+ 
         /* free the intra/inter-node communicators, if they exist */
 #if defined(CHANNEL_MRAIL) || defined(CHANNEL_PSM)
         if( comm_ptr->dev.ch.shmem_coll_ok == 1) { 
diff --git a/src/mpi/comm/create_2level_comm.c b/src/mpi/comm/create_2level_comm.c
index e928a0e..fa8efea 100644
--- a/src/mpi/comm/create_2level_comm.c
+++ b/src/mpi/comm/create_2level_comm.c
@@ -724,6 +724,7 @@ int create_allgather_comm(MPID_Comm * comm_ptr, MPIR_Errflag_t *errflag)
             break;
         }
     }
+
     mpi_errno=PMPI_Group_free(&comm_group);
     if(mpi_errno) {
         MPIR_ERR_POP(mpi_errno);
@@ -743,6 +744,7 @@ int create_sharp_comm(MPI_Comm comm, int size, int my_rank)
     int mpi_errno = MPI_SUCCESS;
     MPID_Comm* comm_ptr = NULL;
     int leader_group_size = 0, my_local_id = -1;
+    MPIR_Errflag_t errflag = MPIR_ERR_NONE;
 
     if (size <= 1) {
         return mpi_errno;
@@ -784,14 +786,27 @@ int create_sharp_comm(MPI_Comm comm, int size, int my_rank)
             PRINT_ERROR("Invalid value for MV2_ENABLE_SHARP\n");
             mpi_errno = MPI_ERR_OTHER;
         }
+        int can_support_sharp = 0;
+        can_support_sharp = (mpi_errno == SHARP_COLL_SUCCESS) ? 1 : 0;
+
+
+        int global_sharp_init_ok = 0;
+        mpi_errno = MPIR_Allreduce_impl(&can_support_sharp, &global_sharp_init_ok,  1, 
+                                        MPI_INT, MPI_LAND, comm_ptr, &errflag);
         if (mpi_errno) {
+           MPIR_ERR_POP(mpi_errno);  
+        }
+
+        if (global_sharp_init_ok == 0) {
            mv2_free_sharp_handlers(comm_ptr->dev.ch.sharp_coll_info); 
            /* avoid using sharp and fall back to other designs */
            comm_ptr->dev.ch.sharp_coll_info = NULL;
+           comm_ptr->dev.ch.is_sharp_ok = -1; /* we set it to -1 so that we do not get back to here anymore */
            mpi_errno = MPI_SUCCESS;
+           PRINT_DEBUG(DEBUG_Sharp_verbose, "Falling back from Sharp  \n");
            goto sharp_fall_back;
-        }
-        
+        } 
+
         sharp_coll_info->sharp_comm_module = MPIU_Malloc(sizeof(coll_sharp_module_t));
         MPIU_Memset(sharp_coll_info->sharp_comm_module, 0, sizeof(coll_sharp_module_t));
         /* create sharp module which contains sharp communicator */
@@ -810,6 +825,8 @@ int create_sharp_comm(MPI_Comm comm, int size, int my_rank)
         }
         comm_ptr->dev.ch.is_sharp_ok = 1;
 
+        PRINT_DEBUG(DEBUG_Sharp_verbose, "Sharp was initialized successfully \n");
+
         /* If the user does not set the MV2_SHARP_MAX_MSG_SIZE then try to tune
          * mv2_sharp_tuned_msg_size variable based on node count */
         if (mv2_enable_sharp_coll == 1 &&
diff --git a/src/mpi/init/init.c b/src/mpi/init/init.c
index 274938e..5694430 100644
--- a/src/mpi/init/init.c
+++ b/src/mpi/init/init.c
@@ -213,6 +213,31 @@ int MPI_Init( int *argc, char ***argv )
         }
     }
 
+    /* initialize the two level communicator for MPI_COMM_WORLD  */
+    if (mv2_use_osu_collectives && 
+            mv2_enable_shmem_collectives) {
+
+       MPID_Comm *comm_ptr = NULL;
+       MPID_Comm_get_ptr(MPI_COMM_WORLD, comm_ptr);
+       int flag=0; 
+       PMPI_Comm_test_inter(comm_ptr->handle, &flag);
+
+       if(flag == 0 && comm_ptr->dev.ch.shmem_coll_ok == 0 &&
+               comm_ptr->local_size < mv2_two_level_comm_early_init_threshold &&
+               check_split_comm(pthread_self())) { 
+
+            disable_split_comm(pthread_self());
+            mpi_errno = create_2level_comm(comm_ptr->handle, comm_ptr->local_size, comm_ptr->rank);
+            if(mpi_errno) {
+               MPIR_ERR_POP(mpi_errno);
+            }
+            enable_split_comm(pthread_self());
+            if(mpi_errno) {
+               MPIR_ERR_POP(mpi_errno);
+            }
+       } 
+    }
+
     /* ... end of body of routine ... */
     MPID_MPI_INIT_FUNC_EXIT(MPID_STATE_MPI_INIT);
     return mpi_errno;
diff --git a/src/mpi_t/mpit.c b/src/mpi_t/mpit.c
index 275b1ec..31a4825 100644
--- a/src/mpi_t/mpit.c
+++ b/src/mpi_t/mpit.c
@@ -25,6 +25,8 @@ name2index_hash_t *cat_hash;
 name2index_hash_t *cvar_hash;
 name2index_hash_t *pvar_hashs[MPIR_T_PVAR_CLASS_NUMBER];
 
+int sub_comm_counter_idx = 0;
+
 /* Create an enum.
  * IN: enum_name, name of the enum
  * OUT: handle, handle of the enum
@@ -408,9 +410,13 @@ void MPIR_T_PVAR_REGISTER_impl(
         hash_entry->name = name;
         hash_entry->idx = pvar_idx;
         HASH_ADD_KEYPTR(hh, pvar_hashs[seq], hash_entry->name,
-                        strlen(hash_entry->name), hash_entry);
-
-        /* Add the pvar to a category */
+                        strlen(hash_entry->name), hash_entry); 
+        if(pvar->bind == MPI_T_BIND_MPI_COMM)
+         {
+                pvar->sub_comm_index = sub_comm_counter_idx;
+                sub_comm_counter_idx+=count;
+         }
+	/* Add the pvar to a category */
         MPIR_T_cat_add_pvar(cat, utarray_len(pvar_table)-1);
     }
 }
diff --git a/src/mpi_t/mpit_finalize.c b/src/mpi_t/mpit_finalize.c
index e93c692..d394403 100644
--- a/src/mpi_t/mpit_finalize.c
+++ b/src/mpi_t/mpit_finalize.c
@@ -5,6 +5,7 @@
  */
 
 #include "mpiimpl.h"
+#include "mv2_mpit.h"
 
 /* -- Begin Profiling Symbol Block for routine MPI_T_finalize */
 #if defined(HAVE_PRAGMA_WEAK)
@@ -160,6 +161,9 @@ static void MPIR_T_pvar_env_finalize(void)
 
 void MPIR_T_env_finalize(void)
 {
+#ifdef _OSU_MVAPICH_
+    MPIT_FREE_MV2_VARIABLES();
+#endif
     MPIR_T_enum_env_finalize();
     MPIR_T_cvar_env_finalize();
     MPIR_T_pvar_env_finalize();
diff --git a/src/mpi_t/mpit_initthread.c b/src/mpi_t/mpit_initthread.c
index 824608d..3f922ed 100644
--- a/src/mpi_t/mpit_initthread.c
+++ b/src/mpi_t/mpit_initthread.c
@@ -35,6 +35,10 @@ int MPI_T_init_thread(int required, int *provided) __attribute__((weak,alias("PM
 #undef MPI_T_init_thread
 #define MPI_T_init_thread PMPI_T_init_thread
 
+#ifdef ENABLE_PVAR_MEM
+int mv2_enable_pvar_mem = 0;
+#endif
+
 /* any non-MPI functions go here, especially non-static ones */
 static inline void MPIR_T_enum_env_init(void)
 {
@@ -74,6 +78,13 @@ static inline void MPIR_T_pvar_env_init(void)
     for (i = 0; i < MPIR_T_PVAR_CLASS_NUMBER; i++) {
         pvar_hashs[i] = NULL;
     }
+
+#ifdef ENABLE_PVAR_MEM
+    const char* value;
+    if((value = getenv("MV2_ENABLE_PVAR_MEM"))!=NULL) {
+        mv2_enable_pvar_mem = !!atoi(value);
+    }
+#endif
 }
 
 void MPIR_T_env_init(void)
@@ -87,7 +98,11 @@ void MPIR_T_env_init(void)
         MPIR_T_cvar_env_init();
         MPIR_T_pvar_env_init();
 #ifdef _OSU_MVAPICH_
-        MPIT_MEM_REGISTER_PVARS();
+#if ENABLE_PVAR_MEM
+	if(mv2_enable_pvar_mem) {
+	    MPIT_MEM_REGISTER_PVARS();
+	}
+#endif /* ENABLE_PVAR_MEM */
         MPIT_REGISTER_MV2_VARIABLES();
 #endif
     }
diff --git a/src/mpi_t/mv2_mpit.c b/src/mpi_t/mv2_mpit.c
index 04024e6..a72545a 100644
--- a/src/mpi_t/mv2_mpit.c
+++ b/src/mpi_t/mv2_mpit.c
@@ -25,6 +25,11 @@ MPIR_T_PVAR_ULONG_COUNTER_DECL(MV2, mv2_rdmafp_ctrl_packet_count);
 MPIR_T_PVAR_ULONG_COUNTER_DECL(MV2, mv2_rdmafp_out_of_order_packet_count);
 MPIR_T_PVAR_ULONG_COUNTER_DECL(MV2, mv2_rdmafp_exact_recv_count);
 
+
+MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, unexpected_recvs_rendezvous);
+MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, expected_recvs_rendezvous);
+
+
 /*
  * Track vbuf usage
  */
@@ -76,6 +81,21 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_num_2level_comm_requests);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_num_2level_comm_success);
 
 /*
+* Timers for mv2 (MVAPICH) bcast algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_scatter_doubling_allgather);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_scatter_ring_allgather);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_scatter_ring_allgather_shm);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_shmem);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_knomial_internode);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_knomial_intranode);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_mcast_internode);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_pipelined);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_pipelined_zcpy);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_bcast_shmem_zcpy);
+
+/*
  * Count MVAPICH Broadcast algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_bcast_binomial);
@@ -136,6 +156,14 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_bcast_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_bcast_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_bcast_count_recv);
 
+/*
+* Timers for mv2 (MVAPICH) AlltoAll algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoall_inplace);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoall_bruck);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoall_rd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoall_sd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoall_pw);
 
 /*
  * Count MVAPICH Alltoall algorithms used
@@ -170,6 +198,13 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoall_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoall_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoall_count_recv);
 
+
+/*
+* Timers for mv2 (MVAPICH) AlltoAllv algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoallv_intra);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoallv_pw);
+
 /*
  * Count MVAPICH Alltoallv algorithms used
  */ 
@@ -184,6 +219,11 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoallv_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoallv_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) Alltoall CUDA algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_alltoall_cuda);
+
+/*
  * Count MVAPICH Alltoall Cuda algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoall_cuda_intra_bytes_send);
@@ -196,8 +236,22 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoall_cuda_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_alltoall_cuda_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) allreduce algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_sharp);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_shm_rd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_shm_rs);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_shm_intra);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_intra_p2p);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_2lvl);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_shmem);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_mcast);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allreduce_reduce_scatter_allgather_colls);
+
+/*
  * Count MVAPICH Allreduce algorithms used
  */
+MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allreduce_subcomm);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allreduce_sharp);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allreduce_shm_rd);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allreduce_shm_rs);
@@ -221,9 +275,23 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allreduce_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allreduce_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) Allgather algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_rd);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_bruck);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_ring);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_directspread);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_gather_bcast);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_2lvl_nonblocked);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_2lvl_ring_nonblocked);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_2lvl_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_2lvl_ring);
+
+/*
  * Count MVAPICH Allgather algorithms used
  */
-MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_rd_allgather_comm);
+MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2,mv2_coll_allgather_rd_allgather_comm);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_rd);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_bruck);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_ring);
@@ -272,6 +340,12 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_count_recv);
 
+
+/*
+* Timers for mv2 (MVAPICH) Allgather CUDA algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgather_cuda);
+
 /*
  * Count MVAPICH AllGather Cuda algorithms used
  */
@@ -286,6 +360,20 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgather_cuda_count_recv);
 
 
 /*
+* Timers for mv2 (MVAPICH) Gather algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_pt2pt);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_direct_blk);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_two_level_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_limic_scheme_pt_pt);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_limic_scheme_pt_linear);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_limic_scheme_linear_pt);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_limic_scheme_linear_linear);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_limic_scheme_single_leader);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gather_intra_node_limic);
+
+/*
  * Count MVAPICH Gather algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gather_pt2pt);
@@ -316,6 +404,18 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gather_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gather_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gather_count_recv);
 
+
+/*
+* Timers for mv2 (MVAPICH) Reduce Scatter algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_noncomm);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_basic);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_rec_halving);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_pairwise);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_ring);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_ring_2lvl);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_scatter_non_comm);
+
 /*
  * Count MVAPICH Reduce Scatter algorithms used
  */
@@ -350,6 +450,17 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_scatter_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_scatter_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) Scatter algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_mcast);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_direct_blk);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_two_level_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_two_level_direct);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_scatter_inter);
+
+/*
  * Count MVAPICH Scatter algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_scatter_mcast);
@@ -398,9 +509,20 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_scatter_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_scatter_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_scatter_count_recv);
 
+
+/*
+* Timers for mv2 (MVAPICH) Reduce algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_binomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_redscat_gather);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_shmem);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_knomial);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_reduce_zcpy);
+
 /*
  * Count MVAPICH Reduce algorithms used
  */
+MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_subcomm);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_binomial);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_redscat_gather);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_shmem);
@@ -432,6 +554,11 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_reduce_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) Gatherv algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_gatherv_algo);
+
+/*
  * Count MVAPICH Gatherv algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gatherv_algo);
@@ -446,6 +573,14 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gatherv_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_gatherv_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) Allgatherv algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgatherv_rec_doubling);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgatherv_bruck);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgatherv_ring);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_allgatherv_ring_cyclic);
+
+/*
  * Count MVAPICH Allgatherv algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgatherv_rec_doubling);
@@ -471,6 +606,12 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgatherv_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_allgatherv_count_recv);
 
 /*
+* Timers for mv2 (MVAPICH) Barrier algorithms
+*/
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_barrier_pairwise);
+MPIR_T_PVAR_DOUBLE_TIMER_DECL(MV2, mv2_coll_timer_barrier_shmem);
+
+/*
  * Count MVAPICH Barrier algorithms used
  */
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_barrier_pairwise);
@@ -483,6 +624,7 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_barrier_bytes_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_barrier_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_barrier_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_barrier_count_recv);
+MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_barrier_subcomm);
 
 /*
  * Count MVAPICH Exscan algorithms used
@@ -516,10 +658,147 @@ MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_iscatter_bytes_recv);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_iscatter_count_send);
 MPIR_T_PVAR_ULONG2_COUNTER_DECL(MV2, mv2_coll_iscatter_count_recv);
 
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL(MV2, mv2_pt2pt_mpid_send);
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL(MV2, mv2_pt2pt_mpid_isend);
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL(MV2, mv2_pt2pt_mpid_recv);
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL(MV2, mv2_pt2pt_mpid_irecv);
+
+int num_counter_pvar_buckets = 6;
+
+/* FIXME : Make this dynamically allocated */
+pvar_bucket counter_pvar_buckets[counter_pvar_array_size] = {{0}};
+
+void initialize_counter_pvar_buckets()
+{
+   char *path = getenv("MV2_USE_BUCKET_FILE");
+   if(path != NULL)
+   {
+    const char s[2] = "-";
+    FILE * fp;
+    char * line = NULL;
+    size_t len = 0;
+    ssize_t read;
+    
+    fp = fopen(path, "r");
+    int count = 0;
+    while ((read = getline(&line, &len, fp)) != -1) count++;
+    fclose(fp);
+    num_counter_pvar_buckets = count + 1;
+
+    fp = fopen(path, "r");
+    int i = 0;
+    while ((read = getline(&line, &len, fp)) != -1) {
+        //printf("%s", line);
+        char *min = strtok(line, s);
+        char *max = strtok(NULL, s);
+        int minlen = strlen(min);
+        int maxlen = strlen(max);
+
+        int min_val,max_val;
+        if(min[minlen-1]=='K' || min[minlen-1]=='k')
+        {
+             min[minlen-1]='\0';
+             min_val = atoi(min) * 1024;
+        }
+        else if(min[minlen-1]=='M' || min[minlen-1]=='m')
+        {
+             min[minlen-1]='\0';
+             min_val = atoi(min) * 1024 * 1024;
+        }
+        else
+            min_val = atoi(min);
+
+        if(max[maxlen-2]=='K' || max[maxlen-2]=='k')
+        {
+             max[maxlen-2]='\0';
+             max_val = atoi(max) * 1024;
+        }
+        else if(max[maxlen-2]=='M' || max[maxlen-2]=='m')
+        {
+             max[maxlen-2]='\0';
+             max_val = atoi(max) * 1024 * 1024;
+        }
+        else
+            max_val = atoi(max);
+
+       counter_pvar_buckets[i].min = min_val;
+       counter_pvar_buckets[i].max = max_val;
+       i++;
+    }
+    //last two values are always previous_max +1 to infinity
+    counter_pvar_buckets[count].min = counter_pvar_buckets[count-1].max + 1;
+    counter_pvar_buckets[count].max = -1;
+    fclose(fp); 
+    }
+
+    else { 
+    counter_pvar_buckets[0].min = 1; counter_pvar_buckets[0].max = 512;
+    counter_pvar_buckets[1].min = 513; counter_pvar_buckets[1].max = 2048;
+    counter_pvar_buckets[2].min = 2049; counter_pvar_buckets[2].max = 8192;
+    counter_pvar_buckets[3].min = 8193; counter_pvar_buckets[3].max = 65536;
+    counter_pvar_buckets[4].min = 65537; counter_pvar_buckets[4].max = 1048576;
+    counter_pvar_buckets[5].min = 1048576; counter_pvar_buckets[5].max = -1; 
+    }
+ 
+}
+
+void MPIT_FREE_MV2_VARIABLES(void)
+{
+    MPIR_T_PVAR_COUNTER_BUCKET_DYNAMIC_FREE(mv2_pt2pt_mpid_send);
+    MPIR_T_PVAR_COUNTER_BUCKET_DYNAMIC_FREE(mv2_pt2pt_mpid_isend);
+    MPIR_T_PVAR_COUNTER_BUCKET_DYNAMIC_FREE(mv2_pt2pt_mpid_recv);
+    MPIR_T_PVAR_COUNTER_BUCKET_DYNAMIC_FREE(mv2_pt2pt_mpid_irecv);
+}
 
 void
 MPIT_REGISTER_MV2_VARIABLES (void)
 {
+    initialize_counter_pvar_buckets();
+ 
+    MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_pt2pt_mpid_send,
+            num_counter_pvar_buckets,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "CH3", // category name 
+            "bucket level counters for mpid send");  
+
+    MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_pt2pt_mpid_isend,
+            num_counter_pvar_buckets,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "CH3", // category name 
+            "bucket level counters for mpid isend");
+
+    MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_pt2pt_mpid_recv,
+            num_counter_pvar_buckets,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "CH3", // category name 
+            "bucket level counters for mpid recv");
+
+    MPIR_T_PVAR_COUNTER_BUCKET_REGISTER_DYNAMIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_pt2pt_mpid_irecv,
+            num_counter_pvar_buckets,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "CH3", // category name 
+            "bucket level counters for mpid irecv");
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -601,8 +880,147 @@ MPIT_REGISTER_MV2_VARIABLES (void)
             (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
             "CH3", /* category name */
             "CH3 RDMA UD retransmission count");
+
+
+   MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
+        MV2,
+        MPI_UNSIGNED_LONG_LONG,
+        unexpected_recvs_rendezvous,
+        MPI_T_VERBOSITY_USER_DETAIL,
+        MPI_T_BIND_NO_OBJECT,
+        (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+        "CH3",
+        "number of rendezvous receives for which message was found in unexpected queue");
+
+   MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
+        MV2,
+        MPI_UNSIGNED_LONG_LONG,
+        expected_recvs_rendezvous,
+        MPI_T_VERBOSITY_USER_DETAIL,
+        MPI_T_BIND_NO_OBJECT,
+        (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+        "CH3",
+        "number of expected rendezvous recvs");
+
 			
 	/* BEGIN: Register PVARs for Bcast algorithms */
+
+
+    /* 1. Timer PVARs for Bcast */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+            MV2,
+            MPI_DOUBLE,
+            mv2_coll_timer_bcast_binomial,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_binomial algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_scatter_doubling_allgather,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_scatter_doubling_allgather algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_scatter_ring_allgather,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_scatter_ring_allgather algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_scatter_ring_allgather_shm,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_scatter_ring_allgather_shm algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_shmem,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_shmem algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_knomial_internode,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_knomial_internode algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_knomial_intranode,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_knomial_intranode algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_mcast_internode,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_mcast_internode algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    	    MV2,
+    	    MPI_DOUBLE,
+    	    mv2_coll_timer_bcast_pipelined,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_pipelined algorithm");
+    
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+            MV2,
+            MPI_DOUBLE,
+            mv2_coll_timer_bcast_shmem_zcpy,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_shm_zcpy algorithm");
+    
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+            MV2,
+            MPI_DOUBLE,
+            mv2_coll_timer_bcast_pipelined_zcpy,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE", /* category name */
+            "total time spent on the MV2 bcast_pipelined_zcpy algorithm");
+
+
+    /* 2. Counter PVARs for Bcast */
+ 
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -1126,6 +1544,61 @@ MPIT_REGISTER_MV2_VARIABLES (void)
     /* End: Register PVARs for Bcast algorithms */
  
     /* BEGIN: Register PVARs for alltoall algorithms */
+
+    /* 1. Timer PVARs for alltoall */
+    
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoall_inplace,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoall_inplace algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoall_bruck,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoall_bruck algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoall_rd,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoall_rd algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoall_sd,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoall_sd algorithm");
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoall_pw,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoall_pw algorithm");
+
+    /* 2. Counter PVARs for alltoall */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -1389,7 +1862,30 @@ MPIT_REGISTER_MV2_VARIABLES (void)
             "Count of messages recv by intra algorithm of alltoall collective");
     /* End: Register PVARs for alltoall algorithms */
  
-    /* BEGIN: Register PVARs for alltoallv algorithms */
+    /* BEGIN: Register PVARs for alltoallv algorithms */\
+
+    /* 1. Timer PVARs for alltoallv */
+    
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoallv_intra,
+    		MPI_T_VERBOSITY_USER_BASIC,MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoallv_intra algorithm");
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_alltoallv_pw,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 alltoall_pw algorithm");
+
+    /* 2. Counter PVARs for alltoallv */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -1474,6 +1970,21 @@ MPIT_REGISTER_MV2_VARIABLES (void)
     /* End: Register PVARs for alltoallv algorithms */
 	
 	/* Begin: Register PVARs for alltoall cuda algorithms */
+
+    /* 1. Timer PVARs for alltoall CUDA */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+            MV2,
+            MPI_DOUBLE,
+            mv2_coll_timer_alltoall_cuda,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_NO_OBJECT,
+            MPIR_T_PVAR_FLAG_SUM,
+            "COLLECTIVE",
+            "Count of messages recv by alltoall CUDA collective");
+
+    /* 2. Counter PVARs for alltoall CUDA*/
+
 	MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -1549,6 +2060,103 @@ MPIT_REGISTER_MV2_VARIABLES (void)
 	/* End: Register PVARs for alltoall cuda algorithms */
  
     /* BEGIN: Register PVARs for allreduce algorithms */
+
+    /* 1. Timer PVARs for allreduce*/
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_allreduce_sharp,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 allreduce_sharp algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_shm_rd,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_shm_rd algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_shm_rs,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_shm_rs algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE, 
+			mv2_coll_timer_allreduce_shm_intra,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_shm_intra algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_intra_p2p,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_intra_p2p algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2, 
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_2lvl,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_2lvl algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2, 
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_shmem,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_shmem algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2, 
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_mcast,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_mcast algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2, 
+			MPI_DOUBLE,
+			mv2_coll_timer_allreduce_reduce_scatter_allgather_colls,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allreduce_reduce_scatter_allgather_colls algorithm");
+
+    /* 2. Counter PVARs for allreduce */
+
+    MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_coll_allreduce_subcomm,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_MPI_COMM,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "COLLECTIVE", /* category name */
+            "Number of times MV2 allreduce was invoked at a sub-communicator level");
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -1741,6 +2349,102 @@ MPIT_REGISTER_MV2_VARIABLES (void)
 	/* End: Register PVARs for AllReduce algorithms */
 	
     /* Begin: Register PVARs for Allgather algorithms */
+
+    /* 1. Timer PVARs for Allgather */
+
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_rd,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_rd algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_bruck,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_bruck algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_ring,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_ring algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_direct,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_direct algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_directspread,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_directspread algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_gather_bcast,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_gather_bcast algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_2lvl_nonblocked,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_2lvl_nonblocked algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_2lvl_ring_nonblocked,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_2lvl_ring_nonblocked algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_2lvl_direct,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_2lvl_direct algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgather_2lvl_ring,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgather_2lvl_ring algorithm"); 
+
+    /* 2. Counter PVARs for Allgather */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -2167,7 +2871,22 @@ MPIT_REGISTER_MV2_VARIABLES (void)
     /* End: Register PVARs for Allgather algorithms */
 	
 	/* Begin: Register PVARs for AllGather CUDA algorithms */
-	 MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
+
+	/* 1. Timer PVARs for Allgather CUDA */
+    
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_allgather_cuda,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 allgather_cuda algorithm");
+
+    /* 2. Counter PVARs for Allgather CUDA */
+	
+	MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
             mv2_coll_allgather_cuda_intra_bytes_send,
@@ -2242,6 +2961,102 @@ MPIT_REGISTER_MV2_VARIABLES (void)
 	/* End: Register PVARs for AllGather CUDA algorithms */	
 	
     /* Begin: Register PVARs for Gather algorithms */
+
+    /* 1. Timer PVARs for Gather */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_gather_pt2pt,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 gather_pt2pt algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_direct,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_direct algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_direct_blk,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 direct_blk algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_two_level_direct,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_two_level_direct algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_limic_scheme_pt_pt,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_limic_scheme_pt_pt algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_limic_scheme_pt_linear,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_limic_scheme_pt_linear algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_limic_scheme_linear_pt,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_limic_scheme_linear_pt algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_limic_scheme_linear_linear,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_limic_scheme_linear_linear algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_limic_scheme_single_leader,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_limic_scheme_single_leader algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gather_intra_node_limic,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gather_intra_node_limic algorithm");
+
+    /* 2. Counter PVARs for Gather */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -2479,6 +3294,75 @@ MPIT_REGISTER_MV2_VARIABLES (void)
     /* End: Register PVARs for Gather algorithms */
 	
     /* Begin: Register PVARs for Reduce Scatter algorithms */
+
+    /* 1. Timer PVARs for reduce scatter */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_reduce_scatter_noncomm,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 reduce_scatter_noncomm algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_scatter_basic,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_scatter_basic algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_scatter_rec_halving,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_scatter_rec_halving algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_scatter_pairwise,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_scatter_pairwise algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_scatter_ring,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_scatter_ring algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_scatter_non_comm,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_scatter_non_comm algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_scatter_ring_2lvl,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_scatter_ring_2lvl algorithm");
+
+    /* 2. Counter PVARs for reduce scatter */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -2743,6 +3627,66 @@ MPIT_REGISTER_MV2_VARIABLES (void)
     /* End: Register PVARs for Reduce Scatter algorithms */
 	
     /* Begin: Register PVARs for Scatter algorithms */
+
+    /* 1. Timer PVARs for Scatter */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_scatter_mcast,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 scatter_mcast algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_scatter_binomial,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 scatter_binomial algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_scatter_direct,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 scatter_direct algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_scatter_direct_blk,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 scatter_direct_blk algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_scatter_two_level_binomial,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 scatter_two_level_binomial algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_scatter_two_level_direct,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 scatter_two_level_direct algorithm");
+
+    /* 2. Counter PVARs for Scatter */
+    
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -3098,6 +4042,67 @@ MPIT_REGISTER_MV2_VARIABLES (void)
         /* End: Register PVARs for Scatter algorithms */
 
     /* Begin: Register PVARs for Reduce algorithms */
+    
+    /* 1. Timer PVARs for Reduce */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_reduce_binomial,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 reduce_binomial algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_redscat_gather,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_redscat_gather algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_shmem,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_shmem algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_knomial,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_knomial algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_reduce_zcpy,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 reduce_zcpy algorithm");
+
+    /* 2. Counter PVARs for Reduce */
+
+   MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_coll_reduce_subcomm,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_MPI_COMM,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "COLLECTIVE", /* category name */
+            "Number of times MV2 reduce was invoked at a sub-communicator level");
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -3362,6 +4367,21 @@ MPIT_REGISTER_MV2_VARIABLES (void)
     /* End: Register PVARs for Reduce algorithms */
 	
     /* Begin: Register PVARs for Gatherv algorithms */
+
+    /* 1. Timer PVARs for Gatherv */
+
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_gatherv_algo,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 gatherv algorithm");	
+
+    /* 2. Counter PVARs for Gatherv */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -3444,7 +4464,50 @@ MPIT_REGISTER_MV2_VARIABLES (void)
             "COLLECTIVE",
             "Count of messages recv by gatherv collective");			
     /* End: Register PVARs for Gatherv algorithms */
+
     /* Begin: Register PVARs for Allgatherv algorithms */
+
+    /* 1. Timer PVARs for allgatherv */
+
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgatherv_rec_doubling,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgatherv_rec_doubling algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgatherv_bruck,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgatherv_bruck algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgatherv_ring,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgatherv_ring algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_allgatherv_ring_cyclic,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 allgatherv_ring_cyclic algorithm");
+
+    /* 2. Counter PVARs for allgatherv */
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
@@ -3482,7 +4545,42 @@ MPIT_REGISTER_MV2_VARIABLES (void)
             "COLLECTIVE", /* category name */
             "Number of times cyclic ring Allgatherv was invoked");
     /* End: Register PVARs for Allgatherv algorithms */
-    /* Beign: Register PVARs for Barrier algorithms */
+
+    /* Begin: Register PVARs for Barrier algorithms */
+
+    /* 1. Timer PVARs for Barrier */
+
+    MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+    		MV2,
+    		MPI_DOUBLE,
+    		mv2_coll_timer_barrier_pairwise,
+    		MPI_T_VERBOSITY_USER_BASIC,
+    		MPI_T_BIND_NO_OBJECT,
+    		MPIR_T_PVAR_FLAG_SUM,
+    		"COLLECTIVE", /* category name */
+    		"total time spent on the MV2 barrier_pairwise algorithm");
+	MPIR_T_PVAR_TIMER_REGISTER_STATIC(
+			MV2,
+			MPI_DOUBLE,
+			mv2_coll_timer_barrier_shmem,
+			MPI_T_VERBOSITY_USER_BASIC,
+			MPI_T_BIND_NO_OBJECT,
+			MPIR_T_PVAR_FLAG_SUM,
+			"COLLECTIVE", /* category name */
+			"total time spent on the MV2 barrier_shmem algorithm");
+
+    /* 2. Counter PVARs for Barrier */
+
+    MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
+            MV2,
+            MPI_UNSIGNED_LONG_LONG,
+            mv2_coll_barrier_subcomm,
+            MPI_T_VERBOSITY_USER_BASIC,
+            MPI_T_BIND_MPI_COMM,
+            (MPIR_T_PVAR_FLAG_READONLY | MPIR_T_PVAR_FLAG_CONTINUOUS),
+            "COLLECTIVE", /* category name */
+            "Number of times barrier was invoked at sub-communicator level");
+
     MPIR_T_PVAR_COUNTER_REGISTER_STATIC(
             MV2,
             MPI_UNSIGNED_LONG_LONG,
diff --git a/src/mpi_t/pvar_read.c b/src/mpi_t/pvar_read.c
index 62f3d58..6dfe235 100644
--- a/src/mpi_t/pvar_read.c
+++ b/src/mpi_t/pvar_read.c
@@ -34,6 +34,23 @@ int MPIR_T_pvar_read_impl(MPI_T_pvar_session session, MPI_T_pvar_handle handle,
 {
     int i, mpi_errno = MPI_SUCCESS;
 
+     //Special handling for sub-comm counter pvars
+     #if ENABLE_PVAR_MV2
+     if(handle->info->bind == MPI_T_BIND_MPI_COMM && handle->info->varclass == MPI_T_PVAR_CLASS_COUNTER)
+     {
+     
+         MPID_Comm *comm = NULL;
+         MPID_Comm_get_ptr(*(MPI_Comm*)handle->obj_handle, comm);
+         int idx = handle->info->sub_comm_index;
+         int j = 0;
+         for (j = 0; j < handle->info->count; j++) {
+             ((unsigned long long *)buf)[j] = comm->sub_comm_counters[idx+j];
+         }
+
+         goto fn_exit;
+    }
+    #endif
+ 
     /* Reading a never started pvar, or a stopped and then reset wartermark,
      * will run into this nasty situation. MPI-3.0 did not define what error
      * code should be returned. We returned a generic MPI error code. With MPI-3.1
diff --git a/src/mpid/ch3/channels/common/include/debug_utils.h b/src/mpid/ch3/channels/common/include/debug_utils.h
index fda111d..3138bba 100644
--- a/src/mpid/ch3/channels/common/include/debug_utils.h
+++ b/src/mpid/ch3/channels/common/include/debug_utils.h
@@ -150,6 +150,9 @@ extern int DEBUG_SHM_verbose;
 // Verbosity level for Channel manager
 extern int DEBUG_CHM_verbose;
 
+// Verbosity level for RNDV transfers
+extern int DEBUG_RNDV_verbose;
+
 // Verbosity level for Init phase
 extern int DEBUG_INIT_verbose;
 
@@ -159,6 +162,9 @@ extern int DEBUG_RDMACM_verbose;
 // Verbosity level for One-sided
 extern int DEBUG_1SC_verbose;
 
+// Verbosity level for dreg cache
+extern int DEBUG_DREG_verbose;
+
 // Initialize the verbosity level of the above variables
 extern int initialize_debug_variables();
 
diff --git a/src/mpid/ch3/channels/common/include/dreg.h b/src/mpid/ch3/channels/common/include/dreg.h
index 6ccef32..7a9ca3f 100644
--- a/src/mpid/ch3/channels/common/include/dreg.h
+++ b/src/mpid/ch3/channels/common/include/dreg.h
@@ -65,6 +65,7 @@ struct dreg_entry {
     struct ibv_mr *memhandle[MAX_NUM_HCAS];
 
     int refcount;
+    int in_deregister_mr_array;
 
     /* page number, e.g. address >> DREG_PAGEBITS */
     unsigned long  npages;
diff --git a/src/mpid/ch3/channels/common/include/hwloc_bind.h b/src/mpid/ch3/channels/common/include/hwloc_bind.h
index 4316bbb..4a91133 100644
--- a/src/mpid/ch3/channels/common/include/hwloc_bind.h
+++ b/src/mpid/ch3/channels/common/include/hwloc_bind.h
@@ -26,7 +26,7 @@ typedef struct {
 } tab_socket_t;
 
 typedef enum {
-    POLICY_BUNCH,
+    POLICY_BUNCH = 0,
     POLICY_SCATTER,
     POLICY_HYBRID,
 } policy_type_t;
diff --git a/src/mpid/ch3/channels/common/include/ib_param.h b/src/mpid/ch3/channels/common/include/ib_param.h
index 1a9735a..dc48dcb 100644
--- a/src/mpid/ch3/channels/common/include/ib_param.h
+++ b/src/mpid/ch3/channels/common/include/ib_param.h
@@ -72,6 +72,8 @@ extern int                  rdma_credit_preserve;
 extern int                  rdma_rq_size;
 extern unsigned long        rdma_dreg_cache_limit;
 extern int                  rdma_rndv_protocol;
+extern int                  smp_rndv_protocol;
+extern int                  rdma_rndv_immediate;
 extern int                  rdma_r3_threshold;
 extern int                  rdma_r3_threshold_nocache;
 extern int                  rdma_max_r3_pending_data;
diff --git a/src/mpid/ch3/channels/common/include/mv2_arch_hca_detect.h b/src/mpid/ch3/channels/common/include/mv2_arch_hca_detect.h
index cf1acf6..f6daa93 100644
--- a/src/mpid/ch3/channels/common/include/mv2_arch_hca_detect.h
+++ b/src/mpid/ch3/channels/common/include/mv2_arch_hca_detect.h
@@ -22,7 +22,7 @@
 
 /* HCA Types */
 #define MV2_HCA_UNKWN   0
-#define MV2_HCA_ANY     (UINT32_MAX)
+#define MV2_HCA_ANY     (UINT16_MAX)
 
 #define MV2_HCA_TYPE_IB
 
@@ -43,18 +43,35 @@
 /* Mellanox Cards */
 typedef enum {
         MV2_HCA_LIST_START=1,
+/* Chelsio Cards */
+        MV2_HCA_IWARP_TYPE_START,
+        MV2_HCA_CHLSIO_START,
+        MV2_HCA_CHELSIO_T3,
+        MV2_HCA_CHELSIO_T4,
+        MV2_HCA_CHLSIO_END,
+
+/* Intel iWarp Cards */
+        MV2_HCA_INTEL_IWARP_START,
+        MV2_HCA_INTEL_NE020,
+        MV2_HCA_INTEL_IWARP_END,
+        MV2_HCA_IWARP_TYPE_END,
+        MV2_HCA_LIST_END,
+
+/* Mellanox IB HCAs */
         MV2_HCA_IB_TYPE_START,
         MV2_HCA_MLX_START,
+        MV2_HCA_MLX_PCI_X,
         MV2_HCA_MLX_PCI_EX_SDR,
         MV2_HCA_MLX_PCI_EX_DDR,
         MV2_HCA_MLX_CX_SDR,
         MV2_HCA_MLX_CX_DDR,
         MV2_HCA_MLX_CX_QDR,
         MV2_HCA_MLX_CX_FDR,
-        MV2_HCA_MLX_CX_EDR,
-        MV2_HCA_MLX_PCI_X,
         MV2_HCA_MLX_CX_CONNIB,
+        MV2_HCA_MLX_CX_EDR,
+        MV2_HCA_MLX_CX_HDR,
         MV2_HCA_MLX_END,
+        MV2_HCA_IB_TYPE_END,
 
 /* Qlogic Cards */
         MV2_HCA_QLGIC_START,
@@ -71,21 +88,7 @@ typedef enum {
         MV2_HCA_INTEL_START,
         MV2_HCA_INTEL_HFI1,
         MV2_HCA_INTEL_END,
-        MV2_HCA_IB_TYPE_END,
 
-/* Chelsio Cards */
-        MV2_HCA_IWARP_TYPE_START,
-        MV2_HCA_CHLSIO_START,
-        MV2_HCA_CHELSIO_T3,
-        MV2_HCA_CHELSIO_T4,
-        MV2_HCA_CHLSIO_END,
-
-/* Intel iWarp Cards */
-        MV2_HCA_INTEL_IWARP_START,
-        MV2_HCA_INTEL_NE020,
-        MV2_HCA_INTEL_IWARP_END,
-        MV2_HCA_IWARP_TYPE_END,
-        MV2_HCA_LIST_END,
 } mv2_hca_types_list;
 
 
@@ -116,7 +119,7 @@ typedef enum {
  * 2001 - 3000 - IBM architectures
  */
 #define MV2_ARCH_UNKWN  0
-#define MV2_ARCH_ANY    (UINT32_MAX)
+#define MV2_ARCH_ANY    (UINT16_MAX)
 
 /* Intel Architectures */
 typedef enum {
@@ -146,6 +149,8 @@ typedef enum {
         MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
         MV2_ARCH_INTEL_XEON_E5_2695_V4_2S_36,
         MV2_ARCH_INTEL_PLATINUM_8160_2S_48,
+        MV2_ARCH_INTEL_PLATINUM_8260_2S_48,
+        MV2_ARCH_INTEL_PLATINUM_8280_2S_56,
         MV2_ARCH_INTEL_PLATINUM_8170_2S_52,
         MV2_ARCH_INTEL_PLATINUM_GENERIC,
         MV2_ARCH_INTEL_GOLD_6132_2S_28,
@@ -165,7 +170,8 @@ typedef enum {
         MV2_ARCH_AMD_OPTERON_6136_32,
         MV2_ARCH_AMD_OPTERON_6276_64,
         MV2_ARCH_AMD_BULLDOZER_4274HE_16,
-	MV2_ARCH_AMD_EPYC_7551_64,
+    	MV2_ARCH_AMD_EPYC_7551_64,
+        MV2_ARCH_AMD_EPYC_7742_128,
         MV2_ARCH_AMD_END,
 /* IBM Architectures */
         MV2_ARCH_IBM_START,
@@ -175,20 +181,23 @@ typedef enum {
         MV2_ARCH_IBM_END,
 /* ARM Architectures */
         MV2_ARCH_ARM_START,
-        MV2_ARCH_ARM_CAVIUM_V8,
+        MV2_ARCH_ARM_CAVIUM_V8_2S_28,
+        MV2_ARCH_ARM_CAVIUM_V8_2S_32,
         MV2_ARCH_ARM_END,
         MV2_ARCH_LIST_END, 
 } mv2_proc_arch_list;
 
 typedef uint64_t mv2_arch_hca_type;
-typedef uint32_t mv2_arch_type;
-typedef uint32_t mv2_hca_type;
+typedef uint16_t mv2_arch_type;
+typedef uint16_t mv2_hca_type;
+typedef uint16_t mv2_arch_num_cores;
+typedef uint16_t mv2_arch_reserved;  /* reserved 16-bits for future use */
 
-#define NUM_HCA_BITS (32)
-#define NUM_ARCH_BITS (32)
+#define NUM_HCA_BITS (16)
+#define NUM_ARCH_BITS (16)
 
-#define MV2_GET_ARCH(_arch_hca) ((_arch_hca) >> NUM_HCA_BITS)
-#define MV2_GET_HCA(_arch_hca) (UINT32_MAX & (_arch_hca))
+#define MV2_GET_ARCH(_arch_hca) ((_arch_hca) >> 32)
+#define MV2_GET_HCA(_arch_hca) (((_arch_hca) << 32) >> 48)
 
 /* CPU Family */
 typedef enum{
@@ -208,9 +217,40 @@ typedef enum{
     mv2_num_rail_4,
 } mv2_multirail_info_type;
 
+
 #define MV2_IS_ARCH_HCA_TYPE(_arch_hca, _arch, _hca) \
     mv2_is_arch_hca_type(_arch_hca, _arch, _hca)
 
+enum collectives {
+    allgather = 0,
+    allreduce,
+    alltoall,
+    alltoallv,
+    bcast,
+    gather,
+    reduce,
+    scatter,
+    colls_max
+};
+
+static char collective_names[colls_max][12] = {
+    "Allgather",
+    "Allreduce",
+    "Alltoall",
+    "Alltoallv",
+    "Broadcast",
+    "Gather",
+    "Reduce",
+    "Scatter"
+};
+
+struct coll_info {
+    mv2_hca_type                 hca_type;
+    mv2_arch_type                arch_type;
+};
+
+extern mv2_arch_type table_arch_tmp;
+extern mv2_hca_type  table_hca_tmp;
 
 /* ************************ FUNCTION DECLARATIONS ************************** */
 
diff --git a/src/mpid/ch3/channels/common/src/affinity/hwloc_bind.c b/src/mpid/ch3/channels/common/src/affinity/hwloc_bind.c
index ff884b3..8c4c6bf 100644
--- a/src/mpid/ch3/channels/common/src/affinity/hwloc_bind.c
+++ b/src/mpid/ch3/channels/common/src/affinity/hwloc_bind.c
@@ -48,14 +48,15 @@
 #define FILENAME_LENGTH 512
 
 /* Hybrid mapping related definitions */
-#define BASE_THREAD_SIBLING_FILE \
-    "/sys/devices/system/cpu/cpu0/topology/thread_siblings_list"
+#define HYBRID_LINEAR  0
+#define HYBRID_COMPACT 1
+#define HYBRID_SPREAD  2
+#define HYBRID_BUNCH   3
+#define HYBRID_SCATTER 4
+#define HYBRID_NUMA    5
 
-#define HYBRID_LINEAR  0x001
-#define HYBRID_COMPACT 0x010
-#define HYBRID_SPREAD  0x011
-#define HYBRID_BUNCH   0x100
-#define HYBRID_SCATTER 0x101
+const char *mv2_cpu_policy_names[] = {"Bunch", "Scatter", "Hybrid"};
+const char *mv2_hybrid_policy_names[] = {"Linear", "Compact", "Spread", "Bunch", "Scatter", "NUMA"};
 
 int mv2_hybrid_binding_policy = HYBRID_LINEAR; /* default as linear */
 int mv2_pivot_core_id = 0;     /* specify pivot core to start binding MPI ranks */
@@ -65,6 +66,7 @@ int num_physical_cores = 0;
 int num_pu = 0;
 int hw_threads_per_core = 0;
 int *mv2_core_map; /* list of core ids achieved after hwloc tree scanning */
+int *mv2_core_map_per_numa; /* list of core ids based on NUMA nodes */
 
 int mv2_my_cpu_id = -1;
 int mv2_my_sock_id = -1;
@@ -2072,7 +2074,12 @@ int smpi_load_hwloc_topology(void)
     mpi_errno = hwloc_topology_init(&topology);
     hwloc_topology_set_flags(topology,
             HWLOC_TOPOLOGY_FLAG_IO_DEVICES   |
-            HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM |
+    
+    /* removing HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM flag since we now 
+     * have cpu_cores in the heterogeneity detection logic
+     */
+     //     HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM |
+     
             HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM);
 
     uid = getuid();
@@ -2442,11 +2449,19 @@ void mv2_show_cpu_affinity(int verbosity)
     }
     if (my_rank == 0) {
         char *value;
+        value = getenv("OMP_NUM_THREADS");
         num_cpus = sysconf(_SC_NPROCESSORS_CONF);
         fprintf(stderr, "-------------CPU AFFINITY-------------\n");
-        fprintf(stderr, "OMP_NUM_THREADS: %9d\n",
-                        ( (value = getenv("OMP_NUM_THREADS")) != NULL) ? atoi(value) : 0);
-        fprintf(stderr, "MV2_THREADS_PER_PROCESS: %d\n", mv2_threads_per_proc);        
+        fprintf(stderr, "OMP_NUM_THREADS           : %d\n",(value != NULL) ? atoi(value) : 0);
+        fprintf(stderr, "MV2_THREADS_PER_PROCESS   : %d\n",mv2_threads_per_proc);        
+        fprintf(stderr, "MV2_CPU_BINDING_POLICY    : %s\n",mv2_cpu_policy_names[mv2_binding_policy]);
+        /* hybrid binding policy is only applicable when mv2_binding_policy is hybrid */
+        if (mv2_binding_policy ==  POLICY_HYBRID) {
+            fprintf(stderr, "MV2_HYBRID_BINDING_POLICY : %s\n",
+                              mv2_hybrid_policy_names[mv2_hybrid_binding_policy]);
+        }
+        fprintf(stderr, "--------------------------------------\n");
+
         buf = (char *) MPIU_Malloc(sizeof(char) * 6 * num_cpus);
         for (i = 0; i < pg_size; i++) {
             MPIDI_Comm_get_vc(comm_world, i, &vc);
@@ -2566,6 +2581,24 @@ void mv2_get_pu_list_on_socket (hwloc_topology_t topology, hwloc_obj_t obj,
     return;
 }
 
+void get_pu_list_on_numanode (hwloc_topology_t topology, hwloc_obj_t obj, int depth, 
+                    int *pu_ids, int *idx) {
+    int i;
+    if (obj->type == HWLOC_OBJ_PU) {
+        pu_ids[*idx] = obj->os_index;
+        *idx = *idx + 1;
+        return;
+    }
+
+    for (i = 0; i < obj->arity; i++) {
+        get_pu_list_on_numanode (topology, obj->children[i], depth+1, pu_ids, idx);
+    }
+
+    return;
+}
+
+
+
 #undef FUNCNAME
 #define FUNCNAME mv2_generate_implicit_cpu_mapping
 #undef FCNAME
@@ -2574,37 +2607,57 @@ static int mv2_generate_implicit_cpu_mapping (int local_procs, int num_app_threa
     
     hwloc_obj_t obj;
 
-    int i, j, k, curr, count, chunk, size, step;
+    int i, j, k, l, curr, count, chunk, size, scanned, step, node_offset, node_base_pu;
     int topodepth, num_physical_cores_per_socket, num_pu_per_socket;
+    int num_numanodes, num_pu_per_numanode;
     char mapping [s_cpu_mapping_line_max];
     
-    i = j = k = curr = count = chunk = size = step = 0;
+    i = j = k = l = curr = count = chunk = size = scanned = step = node_offset = node_base_pu = 0;
     count = mv2_pivot_core_id;
     
     /* call optimized topology load */
     smpi_load_hwloc_topology ();
 
     num_sockets = hwloc_get_nbobjs_by_type(topology, HWLOC_OBJ_SOCKET);
+    num_numanodes = hwloc_get_nbobjs_by_type(topology, HWLOC_OBJ_NUMANODE);
+
     num_physical_cores = hwloc_get_nbobjs_by_type(topology, HWLOC_OBJ_CORE);
     num_pu = hwloc_get_nbobjs_by_type(topology, HWLOC_OBJ_PU);
 
     num_physical_cores_per_socket = num_physical_cores / num_sockets;
     num_pu_per_socket = num_pu / num_sockets;
+    num_pu_per_numanode = num_pu / num_numanodes;
 
     topodepth = hwloc_get_type_depth (topology, HWLOC_OBJ_CORE);
     obj = hwloc_get_obj_by_depth (topology, topodepth, 0); /* check on core 0*/
 
     hw_threads_per_core = hwloc_bitmap_weight (obj->allowed_cpuset);
     
-    mv2_core_map = MPIU_Malloc(sizeof(int) * num_sockets * num_pu_per_socket);
+    mv2_core_map = MPIU_Malloc(sizeof(int) * num_pu);
+    mv2_core_map_per_numa = MPIU_Malloc(sizeof(int) * num_pu);
 
     /* generate core map of the system by scanning the hwloc tree and save it 
      *  in mv2_core_map array. All the policies below are core_map aware now */
     topodepth = hwloc_get_type_depth (topology, HWLOC_OBJ_SOCKET);
     for (i = 0; i < num_sockets; i++) {
         obj = hwloc_get_obj_by_depth (topology, topodepth, i);
-        mv2_get_pu_list_on_socket (topology, obj, topodepth, mv2_core_map, &size);
+        mv2_get_pu_list_on_socket (topology, obj, topodepth, mv2_core_map, &scanned);
     } 
+    
+    size = scanned;
+        
+
+    /* generate core map of the system basd on NUMA domains by scanning the hwloc 
+     * tree and save it in mv2_core_map_per_numa array. NUMA based policies are now 
+     * map-aware */
+    scanned = 0;
+    for (i = 0; i < num_numanodes; i++) {
+        obj = hwloc_get_obj_by_type(topology, HWLOC_OBJ_NUMANODE, i);
+        get_pu_list_on_numanode (topology, obj, topodepth, mv2_core_map_per_numa, &scanned);
+    }
+
+    /* make sure total PUs are same when we scanned the machine w.r.t sockets and NUMA */
+    MPIU_Assert(size == scanned);
 
     if (mv2_hybrid_binding_policy == HYBRID_COMPACT) {
         /* Compact mapping: Bind each MPI rank to a single phyical core, and bind
@@ -2653,10 +2706,13 @@ static int mv2_generate_implicit_cpu_mapping (int local_procs, int num_app_threa
             /* limit the mapping to max available PUs */
             num_physical_cores = num_pu;
         }
-        chunk = size / local_procs;
+        chunk = num_physical_cores / local_procs;
         for (i = 0; i < local_procs; i++) {
              for (k = curr; k < curr+chunk; k++) {
-                 j += snprintf (mapping+j, _POSIX2_LINE_MAX, "%d,", mv2_core_map[k]);
+                 for (l = 0; l < hw_threads_per_core; l++) {
+                    j += snprintf (mapping+j, _POSIX2_LINE_MAX, "%d,", 
+                            mv2_core_map[k * hw_threads_per_core + l]);
+                 }
              }
              mapping [--j] = '\0';
              j += snprintf (mapping+j, _POSIX2_LINE_MAX, ":");
@@ -2684,6 +2740,19 @@ static int mv2_generate_implicit_cpu_mapping (int local_procs, int num_app_threa
                     (k + num_pu_per_socket) % size :
                     (k + num_pu_per_socket + hw_threads_per_core) % size;
         }
+    } else if (mv2_hybrid_binding_policy == HYBRID_NUMA) {
+        /* NUMA mapping: Bind consecutive MPI ranks to different NUMA domains in
+         * round-robin fashion. */
+        for (i = 0; i < local_procs; i++) {
+            j += snprintf (mapping+j, _POSIX2_LINE_MAX, "%d,", 
+                               mv2_core_map_per_numa[node_base_pu+node_offset]);
+            mapping [--j] = '\0';
+            j += snprintf (mapping+j, _POSIX2_LINE_MAX, ":");
+            node_base_pu = (node_base_pu + num_pu_per_numanode) % size;
+            node_offset = (node_base_pu == 0) ? 
+                            (node_offset + ((hw_threads_per_core > 0) ? hw_threads_per_core : 1)) : 
+                            node_offset;
+        }
     }
 
     /* copy the generated mapping string to final mapping*/
@@ -2698,6 +2767,7 @@ static int mv2_generate_implicit_cpu_mapping (int local_procs, int num_app_threa
     
     /* cleanup */
     MPIU_Free(mv2_core_map);
+    MPIU_Free(mv2_core_map_per_numa);
      
     return MPI_SUCCESS;
 }
@@ -2727,12 +2797,21 @@ int MPIDI_CH3I_set_affinity(MPIDI_PG_t * pg, int pg_rank)
     }
 
     arch_type = mv2_get_arch_type ();
-    /* set CPU_BINDING_POLICY=hybrid for Skylake and KNL */
+    /* set CPU_BINDING_POLICY=hybrid for Power, Skylake, and KNL */
     if (arch_type == MV2_ARCH_IBM_POWER8 ||
-             arch_type == MV2_ARCH_INTEL_XEON_PHI_7250 ||
-             arch_type == MV2_ARCH_INTEL_PLATINUM_8170_2S_52 ||
-             arch_type == MV2_ARCH_INTEL_PLATINUM_8160_2S_48) {
+        arch_type == MV2_ARCH_IBM_POWER9 ||
+        arch_type == MV2_ARCH_INTEL_XEON_PHI_7250 ||
+        arch_type == MV2_ARCH_INTEL_PLATINUM_8170_2S_52 ||
+        arch_type == MV2_ARCH_INTEL_PLATINUM_8160_2S_48 ||
+        arch_type == MV2_ARCH_AMD_EPYC_7551_64 /* EPYC */ ||
+        arch_type == MV2_ARCH_AMD_EPYC_7742_128 /* rome */) {
         setenv ("MV2_CPU_BINDING_POLICY", "hybrid", 0);
+        
+        /* if CPU is EPYC, further force hybrid_binding_policy to NUMA */
+        if (arch_type == MV2_ARCH_AMD_EPYC_7551_64 ||
+            arch_type == MV2_ARCH_AMD_EPYC_7742_128 /* rome */) {
+            setenv ("MV2_HYBRID_BINDING_POLICY", "numa", 0);
+        } 
     }
 
     if (mv2_enable_affinity && (num_local_procs > N_CPUs_online)) {
@@ -2832,6 +2911,11 @@ int MPIDI_CH3I_set_affinity(MPIDI_PG_t * pg, int pg_rank)
                            mv2_hybrid_binding_policy = HYBRID_BUNCH;
                        } else if (!strcmp(value, "scatter") || !strcmp(value, "SCATTER")) {
                            mv2_hybrid_binding_policy = HYBRID_SCATTER;
+                       } else if (!strcmp(value, "numa") || !strcmp(value, "NUMA")) {
+                           /* we only force NUMA binding if we have more than 2 ppn,
+                            * otherwise we use bunch (linear) mapping */
+                           mv2_hybrid_binding_policy =
+                               (num_local_procs > 2) ?  HYBRID_NUMA : HYBRID_LINEAR;
                        }
                    }
 
diff --git a/src/mpid/ch3/channels/common/src/cm/cm.c b/src/mpid/ch3/channels/common/src/cm/cm.c
index 348e849..7087843 100644
--- a/src/mpid/ch3/channels/common/src/cm/cm.c
+++ b/src/mpid/ch3/channels/common/src/cm/cm.c
@@ -60,7 +60,11 @@ do {                                                        \
         (USE_XRC && VC_XST_ISSET (vc, XF_SEND_IDLE)) &&     \
         MPIDI_CH3I_CM_SendQ_empty(vc) &&                    \
         !(SMP_INIT && (vc->smp.local_nodes >= 0))) {        \
-        vc->eager_fast_fn = mv2_eager_fast_send;            \
+        if (likely(rdma_use_coalesce)) {                    \
+            vc->eager_fast_fn = mv2_eager_fast_coalesce_send;\
+        } else {                                            \
+            vc->eager_fast_fn = mv2_eager_fast_send;        \
+        }                                                   \
     }                                                       \
 } while (0);
 #else
@@ -72,7 +76,11 @@ do {                                                        \
         vc->ch.state == MPIDI_CH3I_VC_STATE_IDLE &&         \
         MPIDI_CH3I_CM_SendQ_empty(vc) &&                    \
         !(SMP_INIT && (vc->smp.local_nodes >= 0))) {        \
-        vc->eager_fast_fn = mv2_eager_fast_send;            \
+        if (likely(rdma_use_coalesce)) {                    \
+            vc->eager_fast_fn = mv2_eager_fast_coalesce_send;\
+        } else {                                            \
+            vc->eager_fast_fn = mv2_eager_fast_send;        \
+        }                                                   \
     }                                                       \
 } while (0);
 #endif
@@ -1198,7 +1206,7 @@ void cm_xrc_send_enable(MPIDI_VC_t * vc)
     VC_XST_CLR(vc, XF_SEND_CONNECTING);
     VC_XST_CLR(vc, XF_REUSE_WAIT);
 #ifdef _ENABLE_UD_
-    if (vc->mrail.state & MRAILI_UD_CONNECTED) {
+    if (rdma_enable_hybrid && vc->mrail.state & MRAILI_UD_CONNECTED) {
         MRAILI_RC_Enable(vc);
     }
 #endif
diff --git a/src/mpid/ch3/channels/common/src/detect/arch/mv2_arch_detect.c b/src/mpid/ch3/channels/common/src/detect/arch/mv2_arch_detect.c
index 873cfb4..c24f7e4 100644
--- a/src/mpid/ch3/channels/common/src/detect/arch/mv2_arch_detect.c
+++ b/src/mpid/ch3/channels/common/src/detect/arch/mv2_arch_detect.c
@@ -67,13 +67,16 @@ static int numcores_persocket[SOCKETS]={0};
 #endif /*#if defined(_SMP_LIMIC_)*/
 
 static mv2_arch_type g_mv2_arch_type = MV2_ARCH_UNKWN;
-static int g_mv2_num_cpus = -1;
+int g_mv2_num_cpus = -1;
 static int g_mv2_cpu_model = -1;
 static mv2_cpu_family_type g_mv2_cpu_family_type = MV2_CPU_FAMILY_NONE;
 
 extern int mv2_enable_zcpy_bcast;
 extern int mv2_use_slot_shmem_coll;
 
+mv2_arch_type table_arch_tmp;
+mv2_hca_type  table_hca_tmp;
+
 #define CONFIG_FILE         "/proc/cpuinfo"
 #define MAX_LINE_LENGTH     512
 #define MAX_NAME_LENGTH     512
@@ -91,8 +94,11 @@ extern int mv2_use_slot_shmem_coll;
 #define INTEL_XEON_E5_2695_V3_MODEL 63
 #define INTEL_XEON_E5_2670_V3_MODEL 64
 #define INTEL_XEON_E5_2680_V4_MODEL 79
+/* Skylake */
 #define INTEL_PLATINUM_8160_MODEL   85
 #define INTEL_PLATINUM_8170_MODEL   85
+/* Cascade Lake */
+#define INTEL_PLATINUM_8260_MODEL   85
 
 #define MV2_STR_VENDOR_ID    "vendor_id"
 #define MV2_STR_AUTH_AMD     "AuthenticAMD"
@@ -121,9 +127,12 @@ extern int mv2_use_slot_shmem_coll;
 #define INTEL_E5_2695_V3_MODEL_NAME "Intel(R) Xeon(R) CPU E5-2695 v3 @ 2.30GHz"
 #define INTEL_E5_2695_V4_MODEL_NAME "Intel(R) Xeon(R) CPU E5-2695 v4 @ 2.10GHz"
 
+/* For both Skylake and Cascade Lake, generic models are tthe same */
 #define INTEL_PLATINUM_GENERIC_MODEL_NAME  "Intel(R) Xeon(R) Platinum"
 #define INTEL_PLATINUM_8160_MODEL_NAME "Intel(R) Xeon(R) Platinum 8160 CPU @ 2.10GHz"
 #define INTEL_PLATINUM_8170_MODEL_NAME "Intel(R) Xeon(R) Platinum 8170 CPU @ 2.10GHz"
+#define INTEL_PLATINUM_8260_MODEL_NAME "Intel(R) Xeon(R) Platinum 8260Y CPU @ 2.40GHz"
+#define INTEL_PLATINUM_8280_MODEL_NAME "Intel(R) Xeon(R) Platinum 8280 CPU @ 2.70GHz"
 
 #define INTEL_GOLD_GENERIC_MODEL_NAME  "Intel(R) Xeon(R) Gold"
 #define INTEL_GOLD_6132_MODEL_NAME "Intel(R) Xeon(R) Gold 6132 CPU @ 2.60GHz"
@@ -168,9 +177,11 @@ static mv2_arch_types_log_t mv2_arch_types_log[] =
     {MV2_ARCH_INTEL_XEON_E5_2695_V4_2S_36,"MV2_ARCH_INTEL_XEON_E5_2695_V4_2S_36"},
     {MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,"MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28"},
 
-    /* Skylake Architectures */
+    /* Skylake and Cascade Lake Architectures */
     {MV2_ARCH_INTEL_PLATINUM_GENERIC,      "MV2_ARCH_INTEL_PLATINUM_GENERIC"},
     {MV2_ARCH_INTEL_PLATINUM_8160_2S_48,   "MV2_ARCH_INTEL_PLATINUM_8160_2S_48"},
+    {MV2_ARCH_INTEL_PLATINUM_8260_2S_48,   "MV2_ARCH_INTEL_PLATINUM_8260_2S_48"},
+    {MV2_ARCH_INTEL_PLATINUM_8280_2S_56,   "MV2_ARCH_INTEL_PLATINUM_8280_2S_56"},
     {MV2_ARCH_INTEL_PLATINUM_8170_2S_52,   "MV2_ARCH_INTEL_PLATINUM_8170_2S_52"},
     {MV2_ARCH_INTEL_GOLD_GENERIC,          "MV2_ARCH_INTEL_GOLD_GENERIC"},
     {MV2_ARCH_INTEL_GOLD_6132_2S_28,       "MV2_ARCH_INTEL_GOLD_6132_2S_28"},
@@ -192,6 +203,7 @@ static mv2_arch_types_log_t mv2_arch_types_log[] =
     {MV2_ARCH_AMD_OPTERON_6276_64,  "MV2_ARCH_AMD_OPTERON_6276_64"},
     {MV2_ARCH_AMD_BULLDOZER_4274HE_16,"MV2_ARCH_AMD_BULLDOZER_4274HE_16"},
     {MV2_ARCH_AMD_EPYC_7551_64, "MV2_ARCH_AMD_EPYC_7551_64"},
+    {MV2_ARCH_AMD_EPYC_7742_128, "MV2_ARCH_AMD_EPYC_7742_128"},
 
     /* IBM Architectures */
     {MV2_ARCH_IBM_PPC,              "MV2_ARCH_IBM_PPC"},
@@ -199,7 +211,8 @@ static mv2_arch_types_log_t mv2_arch_types_log[] =
     {MV2_ARCH_IBM_POWER9,           "MV2_ARCH_IBM_POWER9"},
 
     /* ARM Architectures */
-    {MV2_ARCH_ARM_CAVIUM_V8,           "MV2_ARCH_ARM_CAVIUM_V8"},
+    {MV2_ARCH_ARM_CAVIUM_V8_2S_28,  "MV2_ARCH_ARM_CAVIUM_V8_2S_28"},
+    {MV2_ARCH_ARM_CAVIUM_V8_2S_32,  "MV2_ARCH_ARM_CAVIUM_V8_2S_32"},
 
     /* Unknown */
     {MV2_ARCH_UNKWN,                "MV2_ARCH_UNKWN"},
@@ -361,10 +374,25 @@ mv2_arch_type mv2_get_intel_arch_type(char *model_name, int num_sockets, int num
                     arch_type = MV2_ARCH_INTEL_XEON_E5_2698_V3_2S_32;
                 }
             }
-        } else if(48 == num_cpus || 52 == num_cpus){
-            // Map 8160 and 8170 (Diamond) Skylake cpus to 8170
-            if(NULL != strstr(model_name, INTEL_PLATINUM_GENERIC_MODEL_NAME)) {
-	        arch_type = MV2_ARCH_INTEL_PLATINUM_8170_2S_52;
+        /* Support Pitzer cluster */
+        } else if(40 == num_cpus){
+            if(NULL != strstr(model_name, INTEL_GOLD_GENERIC_MODEL_NAME)) { /* SkL Gold */
+                arch_type = MV2_ARCH_INTEL_PLATINUM_8170_2S_52; /* Use generic SKL tables */
+            }
+	/* detect skylake or cascade lake CPUs */
+        } else if(48 == num_cpus || 52 == num_cpus || 56 == num_cpus || 44 == num_cpus /* azure skx */){
+            if (NULL != strstr(model_name, INTEL_PLATINUM_GENERIC_MODEL_NAME)) {
+                arch_type = MV2_ARCH_INTEL_PLATINUM_8170_2S_52;
+            }
+
+            /* Check if the model is Cascade lake, if yes then change from generic */
+            if (NULL != strstr(model_name, INTEL_PLATINUM_8260_MODEL_NAME)) {
+                arch_type = MV2_ARCH_INTEL_PLATINUM_8260_2S_48;
+            }
+
+            /* Frontera */
+            if(NULL != strstr(model_name, INTEL_PLATINUM_8280_MODEL_NAME)) {
+                arch_type = MV2_ARCH_INTEL_PLATINUM_8280_2S_56; 
             }
         }  else if(36 == num_cpus || 72 == num_cpus){
             if(NULL != strstr(model_name, INTEL_E5_2695_V4_MODEL_NAME)) {
@@ -483,8 +511,12 @@ mv2_arch_type mv2_get_arch_type()
                     tmp = strtok(NULL, MV2_STR_WS);
                     if (! strncmp(tmp, MV2_STR_CAVIUM_ID, strlen(MV2_STR_CAVIUM_ID))) {
                         g_mv2_cpu_family_type = MV2_CPU_FAMILY_ARM;
-                        arch_type = MV2_ARCH_ARM_CAVIUM_V8;
                         g_mv2_cpu_model = MV2_ARM_CAVIUM_V8_MODEL;
+			if (num_cpus == 56) {
+			    arch_type = MV2_ARCH_ARM_CAVIUM_V8_2S_28;
+			} else if (num_cpus == 64) {
+			    arch_type = MV2_ARCH_ARM_CAVIUM_V8_2S_32;
+			}
                         continue;
                     }
                 }
@@ -522,8 +554,10 @@ mv2_arch_type mv2_get_arch_type()
 
                     } else if(24 == num_cpus) {
                         arch_type =  MV2_ARCH_AMD_MAGNY_COURS_24;
-                    } else if(64 == num_cpus) {
+                    } else if(64 == num_cpus || 60 == num_cpus /* azure vm */) {
                         arch_type =  MV2_ARCH_AMD_EPYC_7551_64;
+                    } else if(128 == num_cpus) { /* rome */
+                        arch_type = MV2_ARCH_AMD_EPYC_7742_128;
                     }
                 } else if(4 == num_sockets) {
                     if(16 == num_cpus) {
@@ -588,24 +622,26 @@ int mv2_is_arch_hca_type(mv2_arch_hca_type arch_hca_type,
         mv2_arch_type arch_type, mv2_hca_type hca_type)
 {
     int ret;
-    if (MV2_ARCH_ANY == arch_type && MV2_HCA_ANY == hca_type){
+    uint16_t  my_num_cores, my_arch_type, my_hca_type;
+    uint64_t mask = UINT16_MAX;
+    my_num_cores = (arch_hca_type & mask);
+    arch_hca_type >>= 16;
+    my_hca_type = arch_hca_type & mask;
+    arch_hca_type >>= 16;
+    my_arch_type = arch_hca_type & mask;
+
+    table_arch_tmp = my_arch_type;
+    table_hca_tmp = my_hca_type;
+
+    if (((MV2_ARCH_ANY == arch_type) || (MV2_ARCH_ANY == my_arch_type)) &&
+        ((MV2_HCA_ANY == hca_type) || (MV2_HCA_ANY == my_hca_type))) {
         ret = 1;
-
-    } else if (MV2_ARCH_ANY == arch_type){
-        mv2_arch_hca_type tmp = UINT32_MAX;
-        mv2_arch_hca_type input = arch_hca_type & tmp;
-        ret = (input==hca_type) ? 1: 0;
-
-    } else if (MV2_HCA_ANY == hca_type){
-        mv2_arch_hca_type tmp = UINT32_MAX;
-        tmp = tmp << 32;
-        mv2_arch_hca_type input = arch_hca_type & tmp;
-        ret = (input==arch_type) ? 1: 0;
-
+    } else if (MV2_ARCH_ANY == arch_type){  // cores
+        ret = (my_hca_type==hca_type) ? 1: 0;
+    } else if ((MV2_HCA_ANY == hca_type) || (MV2_HCA_ANY == my_hca_type)) {
+        ret = (my_arch_type==arch_type) ? 1: 0;
     } else{
-        uint64_t value = arch_type;
-        value = value << 32 | hca_type;
-        ret = (value==arch_hca_type) ? 1:0;
+        ret = (my_arch_type==arch_type && my_hca_type==hca_type) ? 1:0;
     }
     return ret;
 }
diff --git a/src/mpid/ch3/channels/common/src/detect/hca/mv2_hca_detect.c b/src/mpid/ch3/channels/common/src/detect/hca/mv2_hca_detect.c
index 8a6f06b..4acc8d9 100644
--- a/src/mpid/ch3/channels/common/src/detect/hca/mv2_hca_detect.c
+++ b/src/mpid/ch3/channels/common/src/detect/hca/mv2_hca_detect.c
@@ -49,6 +49,7 @@ cvars:
 === END_MPI_T_CVAR_INFO_BLOCK ===
 */
 
+extern int g_mv2_num_cpus;
 static mv2_multirail_info_type g_mv2_multirail_info = mv2_num_rail_unknown;
 
 #define MV2_STR_MLX          "mlx"
@@ -91,6 +92,7 @@ static mv2_hca_types_log_t mv2_hca_types_log[] = {
     {MV2_HCA_MLX_CX_QDR,    "MV2_HCA_MLX_CX_QDR"},
     {MV2_HCA_MLX_CX_FDR,    "MV2_HCA_MLX_CX_FDR"},
     {MV2_HCA_MLX_CX_EDR,    "MV2_HCA_MLX_CX_EDR"},
+    {MV2_HCA_MLX_CX_HDR,    "MV2_HCA_MLX_CX_HDR"},
     {MV2_HCA_MLX_CX_CONNIB, "MV2_HCA_MLX_CX_CONNIB"},
     {MV2_HCA_MLX_PCI_X,     "MV2_HCA_MLX_PCI_X"},
 
@@ -119,6 +121,9 @@ static mv2_hca_types_log_t mv2_hca_types_log[] = {
 char* mv2_get_hca_name(mv2_hca_type hca_type)
 {
     int i=0;
+    if (hca_type == MV2_HCA_ANY) {
+        return("MV2_HCA_ANY");
+    }
     while(mv2_hca_types_log[i].hca_type != MV2_HCA_LAST_ENTRY){
 
         if(mv2_hca_types_log[i].hca_type == hca_type){
@@ -139,7 +144,9 @@ static int get_rate(umad_ca_t *umad_ca)
         int default_port = atoi(value);
         
         if(default_port <= umad_ca->numports){
-            return umad_ca->ports[default_port]->rate;
+            if (IBV_PORT_ACTIVE == umad_ca->ports[default_port]->state) {
+                return umad_ca->ports[default_port]->rate;
+            }
         }
     }
 
@@ -159,8 +166,13 @@ static const int get_link_width(uint8_t width)
     case 2:  return 4;
     case 4:  return 8;
     case 8:  return 12;
-    default: return 0;
-    }   
+    /* Links on Frontera are returning 16 as link width for now.
+     * This is a temporary work around for that. */
+    case 16:  return 2;
+    default:
+        PRINT_ERROR("Invalid link width %u\n", width);
+        return 0;
+    }
 }
 
 static const float get_link_speed(uint8_t speed)
@@ -174,8 +186,11 @@ static const float get_link_speed(uint8_t speed)
 
     case 16: return 14.0; /* FDR */
     case 32: return 25.0; /* EDR */
-    default: return 0;    /* Invalid speed */
-    }   
+    case 64: return 50.0; /* EDR */
+    default:
+        PRINT_ERROR("Invalid link speed %u\n", speed);
+        return 0;    /* Invalid speed */
+    }
 }
 
 int mv2_check_hca_type(mv2_hca_type type, int rank)
@@ -276,10 +291,14 @@ mv2_hca_type mv2_new_get_hca_type(struct ibv_context *ctx,
         if (!ibv_query_port(ctx, query_port, &port_attr)) {
             rate = (int) (get_link_width(port_attr.active_width)
                     * get_link_speed(port_attr.active_speed));
-            PRINT_DEBUG(0, "rate : %d\n", rate);
+            PRINT_DEBUG(DEBUG_INIT_verbose, "rate : %d\n", rate);
         }
         /* mlx4, mlx5 */ 
         switch(rate) {
+            case 200:
+                hca_type = MV2_HCA_MLX_CX_HDR;
+                break;
+
             case 100:
                 hca_type = MV2_HCA_MLX_CX_EDR;
                 break;
@@ -393,7 +412,7 @@ mv2_hca_type mv2_get_hca_type( struct ibv_device *dev )
         || !strncmp(dev_name, MV2_STR_MLX5, 4) 
         || !strncmp(dev_name, MV2_STR_MTHCA, 5)) {
 
-        hca_type = MV2_HCA_MLX_PCI_X;
+        hca_type = MV2_HCA_UNKWN;
 #if !defined(HAVE_LIBIBUMAD)
         int query_port = 1;
         struct ibv_context *ctx= NULL;
@@ -419,10 +438,11 @@ mv2_hca_type mv2_get_hca_type( struct ibv_device *dev )
             query_port = (default_port <= max_ports) ? default_port : 1;
         }
         
-        if (!ibv_query_port(ctx, query_port, &port_attr)) {
-            rate = (int) (get_link_width( port_attr.active_width)
-                    * get_link_speed( port_attr.active_speed));
-            PRINT_DEBUG(0, "rate : %d\n", rate);
+        if (!ibv_query_port(ctx, query_port, &port_attr) &&
+            (port_attr.state == IBV_PORT_ACTIVE)) {
+            rate = (int) (get_link_width(port_attr.active_width)
+                    * get_link_speed(port_attr.active_speed));
+            PRINT_DEBUG(DEBUG_INIT_verbose, "rate : %d\n", rate);
         }
 #else
         umad_ca_t umad_ca;
@@ -480,6 +500,10 @@ mv2_hca_type mv2_get_hca_type( struct ibv_device *dev )
 #endif
         { /* mlx4, mlx5 */ 
             switch(rate) {
+                case 200:
+                    hca_type = MV2_HCA_MLX_CX_HDR;
+                    break;
+
                 case 100:
                     hca_type = MV2_HCA_MLX_CX_EDR;
                     break;
@@ -586,21 +610,24 @@ mv2_hca_type mv2_get_hca_type(void *dev)
 mv2_arch_hca_type mv2_new_get_arch_hca_type (mv2_hca_type hca_type)
 {
     mv2_arch_hca_type arch_hca = mv2_get_arch_type();
-    arch_hca = arch_hca << 32 | hca_type;
+    arch_hca = arch_hca << 16 | hca_type;
+    arch_hca = arch_hca << 16 | (mv2_arch_num_cores) g_mv2_num_cpus;
     return arch_hca;
 }
 
 mv2_arch_hca_type mv2_get_arch_hca_type (struct ibv_device *dev)
 {
     mv2_arch_hca_type arch_hca = mv2_get_arch_type();
-    arch_hca = arch_hca << 32 | mv2_get_hca_type(dev);
+    arch_hca = arch_hca << 16 | mv2_get_hca_type(dev);
+    arch_hca = arch_hca << 16 | (mv2_arch_num_cores) g_mv2_num_cpus;
     return arch_hca;
 }
 #else 
 mv2_arch_hca_type mv2_get_arch_hca_type (void *dev)
 {
     mv2_arch_hca_type arch_hca = mv2_get_arch_type();
-    arch_hca = arch_hca << 32 | mv2_get_hca_type(dev);
+    arch_hca = arch_hca << 16 | mv2_get_hca_type(dev);
+    arch_hca = arch_hca << 16 | (mv2_arch_num_cores) g_mv2_num_cpus;
     return arch_hca;
 }
 #endif
@@ -632,7 +659,9 @@ mv2_multirail_info_type mv2_get_multirail_info()
                 g_mv2_multirail_info = mv2_num_rail_unknown;
                 break;
         }
-        ibv_free_device_list(dev_list);
+        if (dev_list) {
+            ibv_free_device_list(dev_list);
+        }
     }
     return g_mv2_multirail_info;
 }
@@ -691,7 +720,8 @@ int mv2_set_force_hca_type()
         else {
             mv2_MPIDI_CH3I_RDMA_Process.hca_type = hca_type;
             mv2_arch_hca_type arch_hca = mv2_get_arch_type();
-            mv2_MPIDI_CH3I_RDMA_Process.arch_hca_type = arch_hca << 32 | hca_type;
+            mv2_MPIDI_CH3I_RDMA_Process.arch_hca_type = 
+                (((arch_hca << 16 | hca_type) << 16) | g_mv2_num_cpus);
             goto fn_change;
         }
     }
diff --git a/src/mpid/ch3/channels/common/src/rdma_cm/rdma_cm.c b/src/mpid/ch3/channels/common/src/rdma_cm/rdma_cm.c
index a01e682..119bf12 100644
--- a/src/mpid/ch3/channels/common/src/rdma_cm/rdma_cm.c
+++ b/src/mpid/ch3/channels/common/src/rdma_cm/rdma_cm.c
@@ -416,7 +416,11 @@ int static ib_cma_event_handler(struct rdma_cm_id *cma_id,
                              pg_rank, rank);
                          if (mv2_use_eager_fast_send &&
                              !(SMP_INIT && (vc->smp.local_nodes >= 0))) {
-                             vc->eager_fast_fn = mv2_eager_fast_send;
+                             if (likely(rdma_use_coalesce)) {
+                                 vc->eager_fast_fn = mv2_eager_fast_coalesce_send;
+                             } else {
+                                 vc->eager_fast_fn = mv2_eager_fast_send;
+                             }
                          }
                      }
                  }
@@ -440,7 +444,11 @@ int static ib_cma_event_handler(struct rdma_cm_id *cma_id,
                              "%d->%d\n", pg_rank, rank);
                              if (mv2_use_eager_fast_send &&
                                  !(SMP_INIT && (vc->smp.local_nodes >= 0))) {
-                                 vc->eager_fast_fn = mv2_eager_fast_send;
+                                 if (likely(rdma_use_coalesce)) {
+                                     vc->eager_fast_fn = mv2_eager_fast_coalesce_send;
+                                 } else {
+                                     vc->eager_fast_fn = mv2_eager_fast_send;
+                                 }
                              }
                          }
                      }
diff --git a/src/mpid/ch3/channels/common/src/reg_cache/dreg.c b/src/mpid/ch3/channels/common/src/reg_cache/dreg.c
index b417567..550baf6 100644
--- a/src/mpid/ch3/channels/common/src/reg_cache/dreg.c
+++ b/src/mpid/ch3/channels/common/src/reg_cache/dreg.c
@@ -901,6 +901,8 @@ void flush_dereg_mrs_external()
     for(j = 0; j < n_dereg_mr; j++) {
         
         d = deregister_mr_array[j];
+        PRINT_DEBUG(DEBUG_DREG_verbose, "Trying to free dreg %p. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                    d, d->refcount, d->is_valid, d->npages, d->pagenum);
         MPIU_Assert(d->is_valid == 0);
         MPIU_Assert(d->refcount == 0);
        
@@ -925,6 +927,9 @@ void flush_dereg_mrs_external()
                 DREG_REMOVE_FROM_UNUSED_LIST(d);
             }
 
+            d->in_deregister_mr_array = 0;
+            PRINT_DEBUG(DEBUG_DREG_verbose, "Adding dreg %p to free list. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                        d, d->refcount, d->is_valid, d->npages, d->pagenum);
             DREG_ADD_TO_FREE_LIST(d);
     }
 
@@ -961,6 +966,8 @@ dreg_entry *dreg_register(void* buf, size_t len)
     {
         ++dreg_stat_cache_hit;
         dreg_incr_refcount(d);
+        PRINT_DEBUG(DEBUG_DREG_verbose, "Dreg hit with dreg %p for buf %p, ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                    d, buf, d->refcount, d->is_valid, d->npages, d->pagenum);
         MPIR_T_PVAR_COUNTER_INC(MV2, mv2_reg_cache_hits, 1);
     }
     else
@@ -984,12 +991,15 @@ dreg_entry *dreg_register(void* buf, size_t len)
 #if !defined(DISABLE_PTMALLOC)
                 unlock_dreg();
 #endif /* !defined(DISABLE_PTMALLOC) */
+                PRINT_DEBUG(DEBUG_DREG_verbose, "Eviction failed\n");
                 return NULL;
             }
+            PRINT_DEBUG(DEBUG_DREG_verbose, "Eviction sucessful\n");
             /* eviction successful, try again */
         }
-
         dreg_incr_refcount(d);
+        PRINT_DEBUG(DEBUG_DREG_verbose, "Dreg miss for %p. Dreg = %p ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                    buf, d, d->refcount, d->is_valid, d->npages, d->pagenum);
     }
 
 #if !defined(DISABLE_PTMALLOC)
@@ -1035,14 +1045,17 @@ dreg_entry* dreg_get(void)
     if (d != NULL)
     {
         d->refcount = 0;
+        d->in_deregister_mr_array = 0;
         d->next_unused = NULL;
         d->prev_unused = NULL;
         d->next = NULL;
+        PRINT_DEBUG(DEBUG_DREG_verbose, "Got Dreg %p from free list. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                    d, d->refcount, d->is_valid, d->npages, d->pagenum);
     } 
 #if defined(DEBUG)
     else
     {
-        DEBUG_PRINT("dreg_get: no free dreg entries");
+        PRINT_DEBUG(DEBUG_DREG_verbose, "No free dreg entries\n");
     }
 #endif /* defined(DEBUG) */
     return d;
@@ -1066,6 +1079,8 @@ void dreg_decr_refcount(dreg_entry* d)
     MPIU_Assert(d->refcount > 0);
     --d->refcount;
 
+    PRINT_DEBUG(DEBUG_DREG_verbose, "Decrementing refcount for dreg %p. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                d, d->refcount, d->is_valid, d->npages, d->pagenum);
     if (d->refcount == 0)
     {
 #ifdef NEMESIS_BUILD
@@ -1097,6 +1112,8 @@ void dreg_decr_refcount(dreg_entry* d)
             }
 
             dreg_remove(d);
+            PRINT_DEBUG(DEBUG_DREG_verbose, "Adding dreg %p to free list. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                        d, d->refcount, d->is_valid, d->npages, d->pagenum);
             DREG_ADD_TO_FREE_LIST(d);
         }
     }
@@ -1119,6 +1136,8 @@ void dreg_incr_refcount(dreg_entry* d)
     }
 
     ++d->refcount;
+    PRINT_DEBUG(DEBUG_DREG_verbose, "Incrementing refcount for dreg %p. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                d, d->refcount, d->is_valid, d->npages, d->pagenum);
 }
 
 /*
@@ -1138,6 +1157,10 @@ int dreg_evict()
 
     dreg_entry* d = dreg_unused_tail;
 
+    while (d && d->in_deregister_mr_array) {
+        d = d->next_unused;
+    }
+
     if (d == NULL)
     {
         /* no entries left on unused list, return failure */
@@ -1151,6 +1174,8 @@ int dreg_evict()
     MPIU_Assert(d->refcount == 0);
 #endif
 
+    PRINT_DEBUG(DEBUG_DREG_verbose, "Trying to evict dreg %p. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                d, d->refcount, d->is_valid, d->npages, d->pagenum);
 #ifdef NEMESIS_BUILD
     for (; hca_index < ib_hca_num_hcas; ++hca_index)
 #else
@@ -1161,6 +1186,8 @@ int dreg_evict()
         {
             d->is_valid = 0;
 
+            PRINT_DEBUG(DEBUG_DREG_verbose, "Unregistering dreg %p: ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                        d, d->refcount, d->is_valid, d->npages, d->pagenum);
             if (deregister_memory(d->memhandle[hca_index]))
             {
                 ibv_error_abort(IBV_RETURN_ERR, "Deregister fails\n");
@@ -1169,6 +1196,8 @@ int dreg_evict()
     }
 
     dreg_remove(d);
+    PRINT_DEBUG(DEBUG_DREG_verbose, "Adding dreg %p to free list: ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                d, d->refcount, d->is_valid, d->npages, d->pagenum);
     DREG_ADD_TO_FREE_LIST(d);
     ++dreg_stat_evicted;
     return 1;
@@ -1346,10 +1375,15 @@ find_buf:
                 /* OR: This memory region is in the process of
                 * being deregistered. Leave it alone! */
 
+                PRINT_DEBUG(DEBUG_DREG_verbose, "Not freeing dreg %p. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                            d, d->refcount, d->is_valid, d->npages, d->pagenum);
                 break;
             }
             deregister_mr_array[n_dereg_mr] = d;
+            d->in_deregister_mr_array = 1;
             d->is_valid = 0;
+            PRINT_DEBUG(DEBUG_DREG_verbose, "Trying to free associated dreg %p. ref_count = %d, valid = %d, npages = %lu, pagenum = %lu\n",
+                        d, d->refcount, d->is_valid, d->npages, d->pagenum);
             /*
             *  dreg_remove can call free() while removing vma_entry
             *  It can lead to resursion here. but, still we have added 
diff --git a/src/mpid/ch3/channels/common/src/util/debug_utils.c b/src/mpid/ch3/channels/common/src/util/debug_utils.c
index 296891f..e0fd7ce 100644
--- a/src/mpid/ch3/channels/common/src/util/debug_utils.c
+++ b/src/mpid/ch3/channels/common/src/util/debug_utils.c
@@ -74,6 +74,9 @@ int DEBUG_SHM_verbose;
 // Verbosity level for Channel manager
 int DEBUG_CHM_verbose;
 
+// Verbosity level for RNDV transfers
+int DEBUG_RNDV_verbose;
+
 // Verbosity level for Init phase
 int DEBUG_INIT_verbose;
 
@@ -83,6 +86,9 @@ int DEBUG_RDMACM_verbose;
 // Verbosity level for One-sided
 int DEBUG_1SC_verbose;
 
+// Verbosity level for dreg cache
+int DEBUG_DREG_verbose;
+
 static inline int env2int (char *name)
 {
     char* env_str = getenv( name );
@@ -111,9 +117,11 @@ int initialize_debug_variables() {
     DEBUG_MCST_verbose = env2int( "MV2_DEBUG_MCST_VERBOSE" );
     DEBUG_SHM_verbose = env2int( "MV2_DEBUG_SHM_VERBOSE" );
     DEBUG_CHM_verbose = env2int( "MV2_DEBUG_CHM_VERBOSE" );
+    DEBUG_RNDV_verbose = env2int( "MV2_DEBUG_RNDV_VERBOSE" );
     DEBUG_INIT_verbose = env2int( "MV2_DEBUG_INIT_VERBOSE" );
     DEBUG_RDMACM_verbose = env2int( "MV2_DEBUG_RDMACM_VERBOSE" );
     DEBUG_1SC_verbose = env2int( "MV2_DEBUG_1SC_VERBOSE" );
+    DEBUG_DREG_verbose = env2int( "MV2_DEBUG_DREG_VERBOSE" );
     return 0;
 }
 
diff --git a/src/mpid/ch3/channels/mrail/include/mpidi_ch3_impl.h b/src/mpid/ch3/channels/mrail/include/mpidi_ch3_impl.h
index d0a7c44..9da64dd 100644
--- a/src/mpid/ch3/channels/mrail/include/mpidi_ch3_impl.h
+++ b/src/mpid/ch3/channels/mrail/include/mpidi_ch3_impl.h
@@ -79,9 +79,12 @@ extern MPIDI_VC_t *mv2_read_progress_pending_vc;
 extern int mv2_eager_fast_send(MPIDI_VC_t* vc, const void *buf,
                                 MPIDI_msg_sz_t data_sz, int rank, int tag,
                                 MPID_Comm *comm, int context_offset, MPID_Request **sreq_p);
+extern int mv2_eager_fast_coalesce_send(MPIDI_VC_t* vc, const void *buf,
+                                MPIDI_msg_sz_t data_sz, int rank, int tag,
+                                MPID_Comm *comm, int context_offset, MPID_Request **sreq_p);
 extern int mv2_eager_fast_rfp_send(MPIDI_VC_t* vc, const void *buf,
                                 MPIDI_msg_sz_t data_sz, int rank, int tag,
-                                MPID_Comm *comm, int context_offset);
+                                MPID_Comm *comm, int context_offset, MPID_Request **sreq_p);
 extern int mv2_smp_fast_write_contig(MPIDI_VC_t* vc, const void *buf,
                                 MPIDI_msg_sz_t data_sz, int rank, int tag,
                                 MPID_Comm *comm, int context_offset, MPID_Request **sreq_p);
@@ -127,7 +130,11 @@ extern int mv2_smp_fast_write_contig(MPIDI_VC_t* vc, const void *buf,
         /* Re-enable direct send */                                     \
         if (mv2_use_eager_fast_send &&                                  \
             !(SMP_INIT && (vc->smp.local_nodes >= 0))) {                \
-            vc->eager_fast_fn = mv2_eager_fast_send;                    \
+            if (likely(rdma_use_coalesce)) {                            \
+                vc->eager_fast_fn = mv2_eager_fast_coalesce_send;       \
+            } else {                                                    \
+                vc->eager_fast_fn = mv2_eager_fast_send;                \
+            }                                                           \
         }                                                               \
     }                                                                   \
 }
@@ -165,7 +172,11 @@ extern int mv2_smp_fast_write_contig(MPIDI_VC_t* vc, const void *buf,
         /* Re-enable direct send */                                     \
         if (mv2_use_eager_fast_send &&                                  \
             !(SMP_INIT && (vc->smp.local_nodes >= 0))) {                \
-            vc->eager_fast_fn = mv2_eager_fast_send;                    \
+            if (likely(rdma_use_coalesce)) {                            \
+                vc->eager_fast_fn = mv2_eager_fast_coalesce_send;       \
+            } else {                                                    \
+                vc->eager_fast_fn = mv2_eager_fast_send;                \
+            }                                                           \
         }                                                               \
     }                                                                   \
 }
@@ -201,7 +212,11 @@ extern int mv2_smp_fast_write_contig(MPIDI_VC_t* vc, const void *buf,
         /* Re-enable direct send */                                         \
         if (mv2_use_eager_fast_send &&                                      \
             !(SMP_INIT && (vc->smp.local_nodes >= 0))) {                    \
-            vc->eager_fast_fn = mv2_eager_fast_send;                        \
+            if (likely(rdma_use_coalesce)) {                            \
+                vc->eager_fast_fn = mv2_eager_fast_coalesce_send;       \
+            } else {                                                    \
+                vc->eager_fast_fn = mv2_eager_fast_send;                \
+            }                                                           \
         }                                                                   \
     }                                                                       \
 }
@@ -458,8 +473,9 @@ MPICR_cr_state MPIDI_CH3I_CR_Get_state();
 #define MPIDI_CH3I_SMP_SendQ_enqueue(vc, req)                            \
 {                                                                        \
     /* MT - not thread safe! */                                          \
-    MPIDI_DBG_PRINTF((50, FCNAME, "SendQ_enqueue vc=%08p req=0x%08x",    \
-                  vc, req->handle));                                     \
+    PRINT_DEBUG(DEBUG_SHM_verbose>1,                                     \
+            "SendQ_enqueue vc: %p, dst: %d, req: %p, type: %d, ch.reqtype: %d\n", \
+            vc, vc->pg_rank, req, MPIDI_Request_get_type(req), req->ch.reqtype);  \
     req->dev.next = NULL;                                                \
     MPIR_Request_add_ref(req);                                           \
     if (vc->smp.sendq_tail != NULL)                                      \
@@ -481,8 +497,9 @@ MPICR_cr_state MPIDI_CH3I_CR_Get_state();
 #define MPIDI_CH3I_SMP_SendQ_enqueue_head(vc, req)                            \
 {                                                                             \
     /* MT - not thread safe! */                                               \
-    MPIDI_DBG_PRINTF((50, FCNAME, "SendQ_enqueue_head vc=%08p req=0x%08x",    \
-                  vc, req->handle));                                          \
+    PRINT_DEBUG(DEBUG_SHM_verbose>1,                                          \
+            "SendQ_enqueue_head vc: %p, dst: %d, req: %p, type: %d, ch.reqtype: %d\n", \
+            vc, vc->pg_rank, req, MPIDI_Request_get_type(req), req->ch.reqtype);       \
     MPIR_Request_add_ref(req);                                                \
     req->dev.next = vc->smp.sendq_head;                                       \
     if (vc->smp.sendq_tail == NULL)                                           \
@@ -498,8 +515,9 @@ MPICR_cr_state MPIDI_CH3I_CR_Get_state();
 {                                                                             \
     MPID_Request *req = vc->smp.sendq_head;                                   \
     /* MT - not thread safe! */                                               \
-    MPIDI_DBG_PRINTF((50, FCNAME, "SendQ_dequeue vc=%08p req=0x%08x",         \
-                  vc, vc->smp.sendq_head));                                   \
+    PRINT_DEBUG(DEBUG_SHM_verbose>1,                                          \
+            "SendQ_dequeue vc: %p, dst: %d, req: %p, type: %d, ch.reqtype: %d\n",   \
+            vc, vc->pg_rank, req, MPIDI_Request_get_type(req), req->ch.reqtype);    \
     vc->smp.sendq_head = vc->smp.sendq_head->dev.next;                        \
     if (vc->smp.sendq_head == NULL)                                           \
     {                                                                         \
diff --git a/src/mpid/ch3/channels/mrail/include/mpidi_ch3_pre.h b/src/mpid/ch3/channels/mrail/include/mpidi_ch3_pre.h
index d5d5452..ed9d40d 100644
--- a/src/mpid/ch3/channels/mrail/include/mpidi_ch3_pre.h
+++ b/src/mpid/ch3/channels/mrail/include/mpidi_ch3_pre.h
@@ -373,6 +373,8 @@ struct MPIDI_CH3I_Request						\
     (_rreq)->mrail.d_entry = NULL;       \
     (_rreq)->mrail.remote_addr = NULL;   \
     (_rreq)->mrail.nearly_complete = 0;  \
+    (_rreq)->mrail.local_complete  = 0;  \
+    (_rreq)->mrail.remote_complete = 0;  \
     (_rreq)->mrail.is_rma_last_stream_unit = 1;  \
     MPIDI_CH3_REQUEST_INIT_CUDA(_rreq)   \
     MPIDI_CH3_REQUEST_INIT_CUDA_IPC(_rreq) 
diff --git a/src/mpid/ch3/channels/mrail/include/smp_smpi.h b/src/mpid/ch3/channels/mrail/include/smp_smpi.h
index 6a97805..93f0030 100644
--- a/src/mpid/ch3/channels/mrail/include/smp_smpi.h
+++ b/src/mpid/ch3/channels/mrail/include/smp_smpi.h
@@ -30,7 +30,7 @@
 /* SMP user parameters*/
 
 extern int                  g_smp_eagersize;
-extern size_t               s_smpi_length_queue;
+extern size_t               s_smp_queue_length;
 extern int                  s_smp_num_send_buffer;
 extern int                  s_smp_batch_size;
 extern int                  s_smp_block_size;
@@ -92,7 +92,7 @@ typedef struct polling_set_element {
 #define SMPI_AVAIL(a)   \
  ((a & 0xFFFFFFFFFFFFFFF8) - SMPI_CACHE_LINE_SIZE)
 
-#elif defined(_X86_64_) && defined(_AMD_QUAD_CORE_)
+#elif defined(__x86_64__) && defined(_AMD_QUAD_CORE_)
 
 #define SMPI_CACHE_LINE_SIZE 128
 #define SMPI_ALIGN(a)                                               \
@@ -100,7 +100,7 @@ typedef struct polling_set_element {
 #define SMPI_AVAIL(a)   \
  ((a & 0xFFFFFFFFFFFFFFF8) - SMPI_CACHE_LINE_SIZE)
 
-#elif defined(_X86_64_)
+#elif defined(__x86_64__)
 
 #define SMPI_CACHE_LINE_SIZE 128
 #define SMPI_ALIGN(a)                                               \
diff --git a/src/mpid/ch3/channels/mrail/src/Makefile.mk b/src/mpid/ch3/channels/mrail/src/Makefile.mk
index b8f1038..6ee8899 100644
--- a/src/mpid/ch3/channels/mrail/src/Makefile.mk
+++ b/src/mpid/ch3/channels/mrail/src/Makefile.mk
@@ -47,6 +47,7 @@ if BUILD_MRAIL_GEN2
 
 AM_CPPFLAGS += -I$(top_srcdir)/src/mpid/ch3/channels/mrail/src/gen2 \
 			   -I$(top_srcdir)/src/mpi/coll
+AM_CPPFLAGS += -I$(top_srcdir)/src/mpi/romio/adio/include
 
 mpi_core_sources	+=					\
     src/mpid/ch3/channels/mrail/src/gen2/ibv_send.c			\
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_channel_manager.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_channel_manager.c
index 6afc448..070709d 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_channel_manager.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_channel_manager.c
@@ -42,7 +42,7 @@
 static pthread_spinlock_t g_apm_lock;
 static int num_cqes[MAX_NUM_HCAS] = { 0 };
 static int curr_cqe[MAX_NUM_HCAS] = { 0 };
-static struct ibv_wc wc[MAX_NUM_HCAS][RDMA_MAX_CQE_ENTRIES_PER_POLL];
+static struct ibv_wc wc[MAX_NUM_HCAS][RDMA_MAX_CQE_ENTRIES_PER_POLL] = {0};
 static unsigned long nspin = 0;
 
 MPIR_T_PVAR_ULONG_COUNTER_DECL_EXTERN(MV2, mv2_vbuf_allocated);
@@ -601,10 +601,15 @@ static inline int handle_cqe(vbuf **vbuf_handle, MPIDI_VC_t * vc_req,
             SET_PKT_HEADER_OFFSET(v);
             p = v->pheader;
 #ifdef _ENABLE_UD_
-            MPIDI_PG_Get_vc(MPIDI_Process.my_pg, p->src.rank, &vc);
-#else
-            vc = (MPIDI_VC_t *)p->src.vc_addr;
+	    if(rdma_enable_hybrid)
+	    {
+                MPIDI_PG_Get_vc(MPIDI_Process.my_pg, p->src.rank, &vc);
+	    } else
 #endif
+        {
+                vc = (MPIDI_VC_t *)p->src.vc_addr;
+        }
+
             v->vc = vc;
             v->rail = p->rail;
         }
@@ -936,7 +941,7 @@ int MPIDI_CH3I_MRAILI_Cq_poll_iwarp(vbuf **vbuf_handle,
                     goto fn_exit;
                 }
             } else {
-                memset(wc[i], 0, sizeof(struct ibv_wc)*RDMA_MAX_CQE_ENTRIES_PER_POLL);
+                memset(wc[i], 0, sizeof(struct ibv_wc) * num_cqes[i]);
 	            ne = ibv_poll_cq(chosen_cq, rdma_num_cqes_per_poll, wc[i]);
 
     	        if (unlikely(ne < 0)) {
@@ -1015,7 +1020,7 @@ int MPIDI_CH3I_MRAILI_Cq_poll_ib(vbuf **vbuf_handle,
             }
         } else {
 get_blocking_message:
-            memset(wc[i], 0, sizeof(struct ibv_wc)*RDMA_MAX_CQE_ENTRIES_PER_POLL);
+            memset(wc[i], 0, sizeof(struct ibv_wc) * num_cqes[i]);
 	        ne = ibv_poll_cq(chosen_cq, rdma_num_cqes_per_poll, wc[i]);
 
     	    if (unlikely(ne < 0)) {
@@ -1105,11 +1110,22 @@ void async_thread(void *context)
         switch (event.event_type) {
             /* Fatal */
             case IBV_EVENT_CQ_ERR:
+                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %s on CQ %d\n",
+                                    ibv_event_type_str(event.event_type),
+                                    event.element.cq);
+                break;
+            case IBV_EVENT_COMM_EST:
+            case IBV_EVENT_SQ_DRAINED:
+                PRINT_DEBUG(DEBUG_CHM_verbose, "Async event %s on QP 0x%x\n",
+                            ibv_event_type_str(event.event_type),
+                            event.element.qp->qp_num);
+                break;
             case IBV_EVENT_QP_FATAL:
             case IBV_EVENT_QP_REQ_ERR:
             case IBV_EVENT_QP_ACCESS_ERR:
-                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %d\n",
-                        event.event_type);
+                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %s on QP 0x%x\n",
+                                    ibv_event_type_str(event.event_type),
+                                    event.element.qp->qp_num);
                 break;
             case IBV_EVENT_PATH_MIG_ERR:
 #ifdef DEBUG
@@ -1117,8 +1133,9 @@ void async_thread(void *context)
                     DEBUG_PRINT("Path Migration Failed\n");
                 }
 #endif /* ifdef DEBUG */
-                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %d\n",
-                        event.event_type);
+                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %s on QP 0x%x\n",
+                                    ibv_event_type_str(event.event_type),
+                                    event.element.qp->qp_num);
                 break;
             case IBV_EVENT_PATH_MIG:
                 if(mv2_MPIDI_CH3I_RDMA_Process.has_apm && !apm_tester){
@@ -1127,26 +1144,35 @@ void async_thread(void *context)
                 }
 
                 if(!mv2_MPIDI_CH3I_RDMA_Process.has_apm) {
-                    ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %d\n",
-                            event.event_type);
+                    ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %s on QP 0x%x\n",
+                                        ibv_event_type_str(event.event_type),
+                                        event.element.qp->qp_num);
                 }
                 
                 break;
-
             case IBV_EVENT_DEVICE_FATAL:
+            case IBV_EVENT_PORT_ERR:
+                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %s on port %d\n",
+                                    ibv_event_type_str(event.event_type),
+                                    event.element.port_num);
+                break;
             case IBV_EVENT_SRQ_ERR:
-                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %d\n",
-                        event.event_type);
+                ibv_va_error_abort(GEN_EXIT_ERR, "Got FATAL event %s on SRQ %p\n",
+                                    ibv_event_type_str(event.event_type),
+                                    event.element.srq);
+                break;
+            case IBV_EVENT_QP_LAST_WQE_REACHED:
+                PRINT_DEBUG(DEBUG_CHM_verbose, "Async event %s on SRQ %p\n",
+                            ibv_event_type_str(event.event_type),
+                            event.element.srq);
                 break;
-
-            case IBV_EVENT_COMM_EST:
             case IBV_EVENT_PORT_ACTIVE:
-            case IBV_EVENT_SQ_DRAINED:
-            case IBV_EVENT_PORT_ERR:
             case IBV_EVENT_LID_CHANGE:
             case IBV_EVENT_PKEY_CHANGE:
             case IBV_EVENT_SM_CHANGE:
-            case IBV_EVENT_QP_LAST_WQE_REACHED:
+                PRINT_DEBUG(DEBUG_CHM_verbose, "Async event %s on port %d",
+                            ibv_event_type_str(event.event_type),
+                            event.element.port_num);
                 break;
 
             case IBV_EVENT_SRQ_LIMIT_REACHED:
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_rndv.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_rndv.c
index 16473d7..88019d1 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_rndv.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_rndv.c
@@ -86,7 +86,7 @@ int MPIDI_CH3I_MRAIL_Prepare_rndv_cuda(MPIDI_VC_t * vc,
         MIN(req->mrail.num_cuda_blocks, rdma_num_cuda_rndv_blocks);
     req->mrail.num_remote_cuda_done = 0;
     req->mrail.num_remote_cuda_inflight = 0;
-    req->mrail.completion_counter = 0;
+    req->mrail.local_complete = 0;
 
     return 1;
 }
@@ -835,7 +835,7 @@ int MPIDI_CH3I_MRAILI_Process_cuda_finish(MPIDI_VC_t * vc, MPID_Request * rreq,
             busy_cuda_event_list_head, busy_cuda_event_list_tail);
     }
 
-    rreq->mrail.completion_counter = 0;
+    rreq->mrail.local_complete = 0;
 
     PRINT_DEBUG(DEBUG_CUDA_verbose>1, "RECV cudaMemcpyAsync :%d "
             "req:%p strm:%p\n", rreq->mrail.num_remote_cuda_done,
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_util.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_util.c
index e288cd0..720a30d 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_util.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_cuda_util.c
@@ -381,7 +381,7 @@ int MPIDI_CH3_ReqHandler_pack_cudabuf_stream(
 {
     MPI_Aint last;
     int iov_n;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     cudaStream_t stream_passed = 0;
 
     if (stream != NULL) { 
@@ -502,7 +502,7 @@ int MPIDI_CH3_ReqHandler_unpack_cudabuf_stream(
 {
     MPI_Aint last;
     int iov_n, bytes_copied;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     cudaStream_t stream_passed = 0;
 
     if (stream != NULL) {
@@ -627,7 +627,7 @@ void MPID_Segment_pack_cuda(DLOOP_Segment *segp, DLOOP_Offset first,
     int device_pack_buf = 1;
     int buff_off = 0;
     void *tmpbuf = NULL;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     DLOOP_Offset segment_first, segment_last;
     int segment_size;
     int sbuf_isdev = 0;
@@ -725,7 +725,7 @@ void MPID_Segment_unpack_cuda(DLOOP_Segment *segp, DLOOP_Offset first,
     int device_unpack_buf = 1;
     int buff_off = 0;
     void *tmpbuf;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     DLOOP_Offset segment_first, segment_last;
     int segment_size;
     int rbuf_isdev = 0;
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_env_params.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_env_params.c
index 175fdf4..f499c8f 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_env_params.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_env_params.c
@@ -1301,6 +1301,14 @@ mv2_env_param_list_t  param_list[] = {
     1,
     NULL    },
 {
+    MV2_SMP_RNDV_PROTOCOL,
+    MV2_PARAM_TYPE_INT,
+    MV2_PARAM_GROUP_pt2pt,
+    "MV2_SMP_RNDV_PROTOCOL",
+    &smp_rndv_protocol,
+    1,
+    NULL    },
+{
     MV2_SMALL_MSG_RAIL_SHARING_POLICY,
     MV2_PARAM_TYPE_INT,
     MV2_PARAM_GROUP_pt2pt,
@@ -1562,11 +1570,11 @@ mv2_env_param_list_t  param_list[] = {
     1,
     NULL    },
 {
-    MV2_SMPI_LENGTH_QUEUE,
+    MV2_SMP_QUEUE_LENGTH,
     MV2_PARAM_TYPE_INT,
     MV2_PARAM_GROUP_intranode,
-    "MV2_SMPI_LENGTH_QUEUE",
-    &s_smpi_length_queue,
+    "MV2_SMP_QUEUE_LENGTH",
+    &s_smp_queue_length,
     1,
     NULL    },
 {
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.c
index 0634d4a..b4fb771 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.c
@@ -24,6 +24,9 @@
 #include "mv2_utils.h"
 #include "upmi.h"
 #include <inttypes.h>
+#ifdef HAVE_ROMIO
+#include "romioconf.h"
+#endif
 
 
 /* Extra buffer space for header(s); used to adjust the eager-threshold */
@@ -31,6 +34,9 @@
 #define INLINE_THRESHOLD_ADJUST  (40)
 extern const char MPIR_Version_string[];
 extern unsigned int mv2_enable_affinity;
+extern int g_mv2_num_cpus;
+extern int rdma_skip_network_card(mv2_iba_network_classes network_type,
+                           struct ibv_device *ib_dev);
 static inline void rdma_get_vbuf_user_parameters(int num_proc, int me);
 
 /*
@@ -92,7 +98,10 @@ char rdma_iba_hcas[MAX_NUM_HCAS][32];
 int rdma_max_inline_size;
 unsigned int rdma_ndreg_entries = 0;
 unsigned int rdma_ndreg_entries_max = RDMA_NDREG_ENTRIES_MAX; 
-int rdma_rndv_protocol = MV2_RNDV_PROTOCOL_RPUT;
+int rdma_rndv_protocol = MV2_RNDV_PROTOCOL_RGET;
+int smp_rndv_protocol  = MV2_RNDV_PROTOCOL_RGET;
+int rdma_rndv_immediate = 1;
+int mv2_use_balanced_rndv = 1;
 int rdma_r3_threshold = RDMA_DEFAULT_R3_THRESHOLD;
 int rdma_intra_node_r3_threshold = RDMA_DEFAULT_INTRA_NODE_R3_THRESHOLD;
 int rdma_inter_node_r3_threshold = RDMA_DEFAULT_INTER_NODE_R3_THRESHOLD;
@@ -378,7 +387,11 @@ mv2_arch_hca_type MV2_get_arch_hca_type()
     if (!proc->arch_hca_type) {
         proc->arch_type = mv2_get_arch_type();
         proc->hca_type = MV2_HCA_ANY;
-        proc->arch_hca_type = (uint64_t) proc->arch_type << 32 | proc->hca_type;
+        proc->arch_hca_type = proc->arch_type;
+        proc->arch_hca_type <<= 16;
+        proc->arch_hca_type |= proc->hca_type;
+        proc->arch_hca_type <<= 16;
+        proc->arch_hca_type |= g_mv2_num_cpus;
     }
 
     return proc->arch_hca_type;
@@ -411,6 +424,7 @@ int rdma_cm_get_hca_type(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
     int ret = 0;
     int mpi_errno = MPI_SUCCESS;
     int numdevices = 0;
+    int network_type = MV2_HCA_UNKWN, hca_type = MV2_HCA_UNKWN;
     struct ibv_device_attr dev_attr;
     char *dev_name = NULL, *value;
     struct ibv_context **ctx = rdma_get_devices(&numdevices);
@@ -419,6 +433,15 @@ int rdma_cm_get_hca_type(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
     MPIDI_FUNC_ENTER(MPID_STATE_RDMA_CM_GET_HCA_TYPE);
 
     for (i = 0; i < numdevices; ++i) {
+        hca_type = mv2_get_hca_type(ctx[i]->device);
+        PRINT_DEBUG(DEBUG_INIT_verbose>1, "HCA %s type = %s\n", ctx[i]->device->name,
+                    mv2_get_hca_name(hca_type));
+        if (network_type <= hca_type) {
+            network_type=hca_type;
+        }
+    }
+
+    for (i = 0; i < numdevices; ++i) {
         proc->hca_type = MV2_HCA_UNKWN;
         dev_name = (char *) ibv_get_device_name(ctx[i]->device);
 
@@ -433,6 +456,15 @@ int rdma_cm_get_hca_type(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             }
         }
 
+        if (rdma_skip_network_card(network_type, ctx[i]->device)) {
+            /* Skip HCA's that don't match with network type */
+            PRINT_DEBUG(DEBUG_INIT_verbose, "1. Skipping HCA %s since type does not match."
+                        "Selected: %s; Current: %s\n",
+                        ctx[i]->device->name, mv2_get_hca_name(network_type),
+                        mv2_get_hca_name(mv2_get_hca_type(ctx[i]->device)));
+            continue;
+        }
+
         if ((ret = ibv_query_device(ctx[i], &dev_attr))) {
             MPIR_ERR_SETANDJUMP1(mpi_errno, MPI_ERR_OTHER, "**ibv_query_device",
                                  "**ibv_query_device %s", dev_name);
@@ -442,6 +474,7 @@ int rdma_cm_get_hca_type(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             /* Trac #376 The device has no active ports, continue to next device */
             continue;
         }
+
         proc->hca_type = mv2_get_hca_type(ctx[i]->device);
         proc->arch_hca_type = mv2_get_arch_hca_type(ctx[i]->device);
         if (MV2_IS_CHELSIO_IWARP_CARD(proc->hca_type)) {
@@ -489,11 +522,12 @@ int rdma_get_process_to_rail_mapping(int mrail_user_defined_p2r_type)
     char *cp = NULL;
     char tp_str[mrail_p2r_length + 1];
     struct ibv_device **dev_list = NULL;
+    struct ibv_device **usable_dev_list = MPIU_Malloc(sizeof(struct ibv_device *)*MAX_NUM_HCAS);
     int bunch_hca_count;
 
     dev_list = ibv_get_device_list(&num_total_devices);
 
-    rdma_find_network_type(dev_list, num_total_devices, &num_devices);
+    rdma_find_network_type(dev_list, num_total_devices, usable_dev_list, &num_devices);
 
     if (rdma_num_req_hcas && rdma_num_req_hcas <= num_devices) {
         num_devices = rdma_num_req_hcas;
@@ -572,7 +606,10 @@ int rdma_get_process_to_rail_mapping(int mrail_user_defined_p2r_type)
     }
   fn_exit:
     /* Housekeeping operations */
-    ibv_free_device_list(dev_list);
+    MPIU_Free(usable_dev_list);
+    if (dev_list) {
+        ibv_free_device_list(dev_list);
+    }
     MPIU_Free(p2r_only_numbers);
     MPIU_Free(mrail_p2r_string);
     mrail_p2r_string = NULL;
@@ -688,7 +725,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 256;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -705,7 +742,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 256;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -721,7 +758,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 256;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -738,7 +775,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 256;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -754,7 +791,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -776,16 +813,38 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 16384;
             }
-            s_smpi_length_queue = 65536;
+            s_smp_queue_length = 65536;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
             break;
 
+        case MV2_ARCH_AMD_EPYC_7742_128:
+#if defined(_SMP_CMA_)
+            if (g_smp_use_cma) {
+                g_smp_eagersize = 16384;
+                s_smp_cma_max_size = 4194304;
+            } else
+#endif
+#if defined(_SMP_LIMIC_)
+            if (g_smp_use_limic2) {
+                g_smp_eagersize = 16384;
+                s_smp_limic2_max_size = 4194304;
+            } else
+#endif
+            {
+                g_smp_eagersize = 16384;
+            }
+            s_smp_queue_length = 262144;
+            s_smp_num_send_buffer = 32;
+            s_smp_batch_size = 8;
+            s_smp_block_size = 16384;
+            break;
+
         case MV2_ARCH_AMD_OPTERON_DUAL_4:
         case MV2_ARCH_AMD_GENERIC:
             g_smp_eagersize = 5120;
-            s_smpi_length_queue = 65536;
+            s_smp_queue_length = 65536;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -807,7 +866,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 5120;
             }
-            s_smpi_length_queue = 65536;
+            s_smp_queue_length = 65536;
             s_smp_num_send_buffer = 64;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -823,7 +882,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 16384;
             }
-            s_smpi_length_queue = 65536;
+            s_smp_queue_length = 65536;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -839,7 +898,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 16384;
             }
-            s_smpi_length_queue = 65536;
+            s_smp_queue_length = 65536;
             s_smp_num_send_buffer = 128;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -861,7 +920,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 16384;
@@ -883,7 +942,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 16;
             s_smp_batch_size = 8;
             s_smp_block_size = 16384;
@@ -905,7 +964,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 524288;
+            s_smp_queue_length = 524288;
             s_smp_num_send_buffer = 16;
             s_smp_batch_size = 8;
             s_smp_block_size = 14336;
@@ -927,13 +986,35 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 64;
             s_smp_batch_size = 8;
             s_smp_block_size = 65536;
             break;
 
-        case MV2_ARCH_ARM_CAVIUM_V8:
+        case MV2_ARCH_ARM_CAVIUM_V8_2S_28:
+#if defined(_SMP_CMA_)
+            if (g_smp_use_cma) {
+                g_smp_eagersize = 8192;
+                s_smp_cma_max_size = 4194304;
+            } else
+#endif
+#if defined(_SMP_LIMIC_)
+            if (g_smp_use_limic2) {
+                g_smp_eagersize = 8192;
+                s_smp_limic2_max_size = 4194304;
+            } else
+#endif
+            {
+                g_smp_eagersize = 32768;
+            }
+            s_smp_queue_length = 262144;
+            s_smp_num_send_buffer = 16;
+            s_smp_batch_size = 8;
+            s_smp_block_size = 32768;
+            break;
+        
+	case MV2_ARCH_ARM_CAVIUM_V8_2S_32:
 #if defined(_SMP_CMA_)
             if (g_smp_use_cma) {
                 g_smp_eagersize = 8192;
@@ -949,7 +1030,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 16;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -971,7 +1052,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -993,7 +1074,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1009,7 +1090,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1032,7 +1113,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 16;
             s_smp_batch_size = 8;
             s_smp_block_size = 131072;
@@ -1048,7 +1129,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 64;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1064,7 +1145,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 524288;
+            s_smp_queue_length = 524288;
             s_smp_num_send_buffer = 48;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -1086,7 +1167,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 131072;
+            s_smp_queue_length = 131072;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1096,7 +1177,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
                 /* if there are large number of processes per node, then
                  * reduce the eager threshold and queue length */
                 g_smp_eagersize     = 5120;   
-                s_smpi_length_queue = 32768;
+                s_smp_queue_length = 32768;
             }
 #endif
             break;
@@ -1117,7 +1198,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 524288;
+            s_smp_queue_length = 524288;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -1139,7 +1220,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -1161,7 +1242,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 524288;
+            s_smp_queue_length = 524288;
             s_smp_num_send_buffer = 48;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -1183,7 +1264,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 32768;
@@ -1193,7 +1274,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
                 /* if there are large number of processes per node, then
                  * reduce the eager threshold and queue length */
                 g_smp_eagersize     = 5120;   
-                s_smpi_length_queue = 32768;
+                s_smp_queue_length = 32768;
             }
 #endif
             break;
@@ -1208,7 +1289,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 32768;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1224,7 +1305,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 1048576;
+            s_smp_queue_length = 1048576;
             s_smp_num_send_buffer = 8;
             s_smp_batch_size = 8;
             s_smp_block_size = 65536;
@@ -1240,7 +1321,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 16;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1256,7 +1337,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1272,7 +1353,23 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             {
                 g_smp_eagersize = 65536;
             }
-            s_smpi_length_queue = 262144;
+            s_smp_queue_length = 262144;
+            s_smp_num_send_buffer = 32;
+            s_smp_batch_size = 8;
+            s_smp_block_size = 8192;
+            break;
+
+        case MV2_ARCH_INTEL_PLATINUM_8280_2S_56:
+#if defined(_SMP_CMA_)
+            if (g_smp_use_cma) {
+                g_smp_eagersize = 8192;
+                s_smp_cma_max_size = 4194304;
+            } else
+#endif
+            {
+                g_smp_eagersize = 8192;
+            }
+            s_smp_queue_length = 524288;
             s_smp_num_send_buffer = 32;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1283,19 +1380,19 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             if (g_smp_use_cma) {
                 s_smp_cma_max_size = 4194304;
                 g_smp_eagersize = 32768;
-                s_smpi_length_queue = 131072;
+                s_smp_queue_length = 131072;
             } else
 #endif
 #if defined(_SMP_LIMIC_)
             if (g_smp_use_limic2) {
                 s_smp_limic2_max_size = 4194304;
                 g_smp_eagersize = 8192;
-                s_smpi_length_queue = 65536;
+                s_smp_queue_length = 65536;
             } else
 #endif
             {
                 g_smp_eagersize = 16384;
-                s_smpi_length_queue = 65536;
+                s_smp_queue_length = 65536;
             }
             s_smp_num_send_buffer = 16;
             s_smp_batch_size = 8;
@@ -1304,7 +1401,7 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
 
         default:
             g_smp_eagersize = 16384;
-            s_smpi_length_queue = 65536;
+            s_smp_queue_length = 65536;
             s_smp_num_send_buffer = 128;
             s_smp_batch_size = 8;
             s_smp_block_size = 8192;
@@ -1364,8 +1461,8 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
         g_smp_eagersize = user_val_to_bytes(value, "MV2_SMP_EAGERSIZE");
     }
 
-    if ((value = getenv("MV2_SMPI_LENGTH_QUEUE")) != NULL) {
-        s_smpi_length_queue = user_val_to_bytes(value, "MV2_SMPI_LENGTH_QUEUE");
+    if ((value = getenv("MV2_SMP_QUEUE_LENGTH")) != NULL) {
+        s_smp_queue_length = user_val_to_bytes(value, "MV2_SMP_QUEUE_LENGTH");
     }
 
     if ((value = getenv("MV2_SMP_NUM_SEND_BUFFER")) != NULL) {
@@ -1389,7 +1486,20 @@ int rdma_set_smp_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             user_val_to_bytes(value, "MV2_LIMIC_GET_THRESHOLD");
     }
 
-
+    int use_cma, use_xpmem, use_limic;
+    use_cma = use_xpmem = use_limic = 0;
+#if defined(_SMP_CMA_)
+    use_cma = g_smp_use_cma;
+#endif
+#if defined(_SMP_XPMEM_)
+    use_xpmem = g_smp_use_xpmem;
+#endif
+#if defined(_SMP_LIMIC_)
+    use_limic = g_smp_use_limic2;
+#endif
+    if (use_limic || (!use_cma && !use_xpmem)) {
+        smp_rndv_protocol = MV2_RNDV_PROTOCOL_R3;
+    }
 
     return 0;
 }
@@ -1537,8 +1647,8 @@ int rdma_get_control_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
             rdma_small_msg_rail_sharing_policy =
             rdma_get_rail_sharing_policy(value);
     }
-    /* If there is only one process per node, allow it use all HCAs */
-    if (rdma_num_nodes_in_job == pg_size) {
+    /* If there is only one process per node, or just one node allow it use all HCAs */
+    if ((rdma_num_nodes_in_job == pg_size) || (rdma_num_nodes_in_job == 1)) {
         rdma_multirail_usage_policy = MV2_MRAIL_SHARING;
     }
 
@@ -1550,7 +1660,14 @@ int rdma_get_control_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
 
     if (!proc->use_rdma_cm) {
         if ((value = getenv("MV2_USE_RDMA_CM")) != NULL) {
+#if !defined (ROMIO_IME)
             proc->use_rdma_cm = !!atoi(value);
+#else
+            if (value && atoi(value) && (my_rank == 0)) {
+                MPL_error_printf("Error: IME FS does not work with RDMA CM. "
+                                 "Proceeding without RDMA support.\n");
+            }
+#endif
         } else {
             proc->use_rdma_cm = 0;
             proc->use_iwarp_mode = 0;
@@ -1623,12 +1740,10 @@ int rdma_get_control_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
     }
     proc->node_guid = node_guid[0];
 
-    if (proc->hca_type == MV2_HCA_UNKWN) {
-        if (heterogeneous) {
-            proc->hca_type = MV2_HCA_UNKWN;
-        } else {
-            proc->hca_type = hca_type[0];
-        }
+    if (heterogeneous) {
+        proc->hca_type = MV2_HCA_UNKWN;
+    } else {
+        proc->hca_type = hca_type[0];
     }
 
     proc->arch_hca_type = mv2_new_get_arch_hca_type(proc->hca_type);
@@ -1823,6 +1938,22 @@ int rdma_get_control_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
         }
     }
 
+    if ((value = getenv("MV2_SMP_RNDV_PROTOCOL")) != NULL) {
+        if (strncmp(value, "RPUT", 4) == 0) {
+            smp_rndv_protocol = MV2_RNDV_PROTOCOL_RPUT;
+        } else if (strncmp(value, "RGET", 4) == 0) {
+            smp_rndv_protocol = MV2_RNDV_PROTOCOL_RGET;
+        } else if (strncmp(value, "R3", 2) == 0) {
+            smp_rndv_protocol = MV2_RNDV_PROTOCOL_R3;
+        } else {
+            MPL_usage_printf("MV2_SMP_RNDV_PROTOCOL "
+                    "must be one of: RPUT, RGET, R3\n");
+            smp_rndv_protocol = rdma_rndv_protocol;
+        }
+    } else {
+        smp_rndv_protocol = rdma_rndv_protocol;
+    }
+
     if ((value = getenv("MV2_R3_THRESHOLD")) != NULL) {
         rdma_r3_threshold = user_val_to_bytes(value, "MV2_R3_THRESHOLD");
         if (rdma_r3_threshold < 0) {
@@ -1980,6 +2111,17 @@ static void rdma_set_default_parameters_numrail_4(struct
         rdma_put_fallback_threshold = 8 * 1024;
         rdma_get_fallback_threshold = 0;
     }
+    
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_PLATINUM_8280_2S_56,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
@@ -2060,6 +2202,94 @@ static void rdma_set_default_parameters_numrail_4(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER9,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V2_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2690_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2660_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
               MV2_HCA_MLX_CX_EDR)) {
         rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -2158,7 +2388,18 @@ static void rdma_set_default_parameters_numrail_4(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8,
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_28,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+    
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_32,
               MV2_HCA_MLX_CX_FDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -2312,6 +2553,29 @@ static void rdma_set_default_parameters_numrail_4(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    /* same tuning value for rome with EDR HCA */
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_X5650_12,
               MV2_HCA_MLX_CX_QDR)) {
         rdma_vbuf_total_size = 19 * 1024 + EAGER_THRESHOLD_ADJUST;
@@ -2529,6 +2793,17 @@ static void rdma_set_default_parameters_numrail_3(struct
         rdma_put_fallback_threshold = 8 * 1024;
         rdma_get_fallback_threshold = 0;
     }
+    
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_PLATINUM_8280_2S_56,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
@@ -2609,7 +2884,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2620,7 +2895,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_IBM_POWER9,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2631,7 +2906,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V2_2S_20,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2642,7 +2917,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2653,7 +2928,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2664,7 +2939,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2675,7 +2950,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2690_V3_2S_24,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2686,7 +2961,7 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2660_V3_2S_20,
-              MV2_HCA_MLX_CX_EDR)) {
+              MV2_HCA_MLX_CX_HDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2696,9 +2971,9 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2670_V2_2S_20,
-              MV2_HCA_MLX_CX_FDR)) {
-        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
         rdma_eagersize_1sc = 8 * 1024;
@@ -2707,9 +2982,9 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8,
-              MV2_HCA_MLX_CX_FDR)) {
-        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER9,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
         rdma_eagersize_1sc = 8 * 1024;
@@ -2718,9 +2993,9 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2670_V3_2S_24,
-              MV2_HCA_MLX_CX_FDR)) {
-        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V2_2S_20,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
         rdma_eagersize_1sc = 8 * 1024;
@@ -2729,9 +3004,9 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2698_V3_2S_32,
-              MV2_HCA_MLX_CX_FDR)) {
-        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
         rdma_eagersize_1sc = 8 * 1024;
@@ -2740,9 +3015,9 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_PHI_7250,
-              MV2_HCA_MLX_CX_FDR)) {
-        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
         rdma_eagersize_1sc = 8 * 1024;
@@ -2752,8 +3027,8 @@ static void rdma_set_default_parameters_numrail_3(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
-              MV2_HCA_MLX_CX_FDR)) {
-        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
         rdma_eagersize_1sc = 8 * 1024;
@@ -2762,8 +3037,107 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
-              MV2_HCA_MLX_CX_FDR)) {
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2690_V3_2S_24,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2660_V3_2S_20,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2670_V2_2S_20,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_28,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+    
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_32,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2670_V3_2S_24,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2698_V3_2S_32,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_PHI_7250,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
+              MV2_HCA_MLX_CX_FDR)) {
         rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
         rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
@@ -2861,6 +3235,29 @@ static void rdma_set_default_parameters_numrail_3(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    /* same tuning value for rome with EDR HCA */
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_X5650_12,
               MV2_HCA_MLX_CX_QDR)) {
         rdma_vbuf_total_size = 19 * 1024 + EAGER_THRESHOLD_ADJUST;
@@ -3078,6 +3475,17 @@ static void rdma_set_default_parameters_numrail_2(struct
         rdma_put_fallback_threshold = 8 * 1024;
         rdma_get_fallback_threshold = 0;
     }
+    
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_PLATINUM_8280_2S_56,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
@@ -3157,6 +3565,94 @@ static void rdma_set_default_parameters_numrail_2(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER9,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V2_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2690_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2660_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
               MV2_HCA_MLX_CX_EDR)) {
         rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -3255,7 +3751,18 @@ static void rdma_set_default_parameters_numrail_2(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8,
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_28,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_32,
               MV2_HCA_MLX_CX_FDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -3409,6 +3916,29 @@ static void rdma_set_default_parameters_numrail_2(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    /* same tuning value for rome with EDR HCA */
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_X5650_12,
               MV2_HCA_MLX_CX_QDR)) {
         rdma_vbuf_total_size = 19 * 1024 + EAGER_THRESHOLD_ADJUST;
@@ -3626,6 +4156,17 @@ static void rdma_set_default_parameters_numrail_1(struct
         rdma_put_fallback_threshold = 8 * 1024;
         rdma_get_fallback_threshold = 0;
     }
+    
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_PLATINUM_8280_2S_56,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 17 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
@@ -3705,6 +4246,94 @@ static void rdma_set_default_parameters_numrail_1(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER9,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V2_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2690_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2660_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
               MV2_HCA_MLX_CX_EDR)) {
         rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -3803,7 +4432,18 @@ static void rdma_set_default_parameters_numrail_1(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8,
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_28,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_32,
               MV2_HCA_MLX_CX_FDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -3845,7 +4485,7 @@ static void rdma_set_default_parameters_numrail_1(struct
         rdma_put_fallback_threshold = 8 * 1024;
         rdma_get_fallback_threshold = 0;
     }
-
+    
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
               MV2_HCA_MLX_CX_FDR)) {
@@ -3957,6 +4597,29 @@ static void rdma_set_default_parameters_numrail_1(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    /* same tuning value for rome with EDR HCA */
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_X5650_12,
               MV2_HCA_MLX_CX_QDR)) {
         rdma_vbuf_total_size = 19 * 1024 + EAGER_THRESHOLD_ADJUST;
@@ -4252,6 +4915,94 @@ static void rdma_set_default_parameters_numrail_unknwn(struct
 
     else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER9,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V2_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V4_2S_28,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2687W_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2680_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2690_V3_2S_24,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_INTEL_XEON_E5_2660_V3_2S_20,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_IBM_POWER8,
               MV2_HCA_MLX_CX_EDR)) {
         rdma_vbuf_total_size = 32 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -4350,7 +5101,18 @@ static void rdma_set_default_parameters_numrail_unknwn(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
-             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8,
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_28,
+              MV2_HCA_MLX_CX_FDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_ARM_CAVIUM_V8_2S_32,
               MV2_HCA_MLX_CX_FDR)) {
         rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
         rdma_fp_buffer_size = 5 * 1024;
@@ -4493,6 +5255,29 @@ static void rdma_set_default_parameters_numrail_unknwn(struct
     }
 
     else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_HDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    /* same tuning value for rome with EDR HCA */
+    else if (MV2_IS_ARCH_HCA_TYPE
+             (proc->arch_hca_type, MV2_ARCH_AMD_EPYC_7742_128,
+              MV2_HCA_MLX_CX_EDR)) {
+        rdma_vbuf_total_size = 16 * 1024 + EAGER_THRESHOLD_ADJUST;
+        rdma_fp_buffer_size = 5 * 1024;
+        rdma_iba_eager_threshold = VBUF_BUFFER_SIZE;
+        rdma_eagersize_1sc = 8 * 1024;
+        rdma_put_fallback_threshold = 8 * 1024;
+        rdma_get_fallback_threshold = 0;
+    }
+
+    else if (MV2_IS_ARCH_HCA_TYPE
              (proc->arch_hca_type, MV2_ARCH_AMD_BARCELONA_16,
               MV2_HCA_MLX_CX_SDR)) {
         rdma_vbuf_total_size = 12 * 1024 + EAGER_THRESHOLD_ADJUST;
@@ -4895,6 +5680,18 @@ void rdma_get_user_parameters(int num_proc, int me)
 {
     char *value;
 
+    int dpm_support=0;
+    if((value=getenv("MV2_SUPPORT_DPM"))!=NULL) {
+	    dpm_support=atoi(value);
+    }
+
+    if(!dpm_support) {
+	    /* Ensure BW tests have enough RFP buffers*/
+	    if (2 == num_proc) {
+		    num_rdma_buffer = 64;
+	    }
+    }
+
     /* Check for a system report. See sysreport.h and sysreport.c */
     value = getenv("MV2_SYSREPORT");
     if (value != NULL) {
@@ -5524,7 +6321,14 @@ void rdma_get_pm_parameters(mv2_MPIDI_CH3I_RDMA_Process_t * proc)
     }
 #if defined(RDMA_CM)
     if ((value = getenv("MV2_USE_RDMA_CM")) != NULL) {
+#if !defined(ROMIO_IME)
         proc->use_rdma_cm = !!atoi(value);
+#else
+        if (value && atoi(value) && (my_rank == 0)) {
+            MPL_error_printf("Error: IME FS does not work with RDMA CM. "
+                             "Proceeding without RDMA support.\n");
+        }
+#endif
 #ifdef _ENABLE_XRC_
         /* XRC will not work with RDMA_CM */
         if (proc->use_rdma_cm) {
@@ -5668,8 +6472,9 @@ void rdma_get_pm_parameters(mv2_MPIDI_CH3I_RDMA_Process_t * proc)
     }
 }
 
-void mv2_print_env_info(mv2_MPIDI_CH3I_RDMA_Process_t * proc)
+void mv2_print_env_info(mv2_MPIDI_CH3I_RDMA_Process_t * proc, struct coll_info *colls_arch_hca)
 {
+    int i = 0;
     mv2_arch_type arch_type = MV2_GET_ARCH(proc->arch_hca_type);
     mv2_hca_type hca_type = MV2_GET_HCA(proc->arch_hca_type);
     mv2_cpu_family_type family_type = mv2_get_cpu_family();
@@ -5701,19 +6506,26 @@ void mv2_print_env_info(mv2_MPIDI_CH3I_RDMA_Process_t * proc)
     fprintf(stderr, "\tMV2_EAGERSIZE_1SC              : %lu\n",
             rdma_eagersize_1sc);
     fprintf(stderr, "\tMV2_SMP_EAGERSIZE              : %d\n", g_smp_eagersize);
-    fprintf(stderr, "\tMV2_SMPI_LENGTH_QUEUE          : %zu\n",
-            s_smpi_length_queue);
+    fprintf(stderr, "\tMV2_SMP_QUEUE_LENGTH           : %zu\n",
+            s_smp_queue_length);
     fprintf(stderr, "\tMV2_SMP_NUM_SEND_BUFFER        : %d\n",
             s_smp_num_send_buffer);
     fprintf(stderr, "\tMV2_SMP_BATCH_SIZE             : %d\n",
             s_smp_batch_size);
-    fprintf(stderr,
-            "---------------------------------------------------------------------\n");
-    if (mv2_show_env_info == 2) {
+    fprintf(stderr, "\t%s                  : %s %s\n", "Tuning Table:", mv2_get_arch_name(colls_arch_hca[0].arch_type), mv2_get_hca_name(colls_arch_hca[0].hca_type));
+    fprintf(stderr, "---------------------------------------------------------------------\n");
+    if (mv2_show_env_info >= 2) {
         mv2_show_all_params();
+        fprintf(stderr, "---------------------------------------------------------------------\n");
     }
-    fprintf(stderr,
-            "---------------------------------------------------------------------\n");
 
+    if (mv2_show_env_info >= 3) {
+        fprintf(stderr, "\nCollective Tuning Tables\n");
+        fprintf(stderr, "\t%-20s %-40s %-40s\n", "Collective", "Architecture", "Interconnect");
+        for(i = 0; i < colls_max; i++) {
+            fprintf(stderr, "\t%-20s %-40s %-40s\n", collective_names[i], mv2_get_arch_name(colls_arch_hca[i].arch_type), mv2_get_hca_name(colls_arch_hca[i].hca_type));
+        }
+        fprintf(stderr, "\n---------------------------------------------------------------------\n");
+    }
 }
 /* vi:set sw=4 */
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.h b/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.h
index 344dfb8..3a7cc4d 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.h
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_param.h
@@ -74,6 +74,8 @@ extern int rdma_credit_preserve;
 extern int rdma_rq_size;
 extern unsigned long rdma_dreg_cache_limit;
 extern int rdma_rndv_protocol;
+extern int smp_rndv_protocol;
+extern int rdma_rndv_immediate;
 extern int rdma_r3_threshold;
 extern int rdma_intra_node_r3_threshold;
 extern int rdma_inter_node_r3_threshold;
@@ -594,6 +596,7 @@ typedef enum mv2_env_param_id {
     MV2_RDMA_NUM_EXTRA_POLLS,
     MV2_RNDV_EXT_SENDQ_SIZE,
     MV2_RNDV_PROTOCOL,
+    MV2_SMP_RNDV_PROTOCOL,
     MV2_SMALL_MSG_RAIL_SHARING_POLICY,
     MV2_SM_SCHEDULING,
     MV2_SPIN_COUNT,
@@ -628,7 +631,7 @@ typedef enum mv2_env_param_id {
     MV2_SMP_USE_CMA,
     MV2_SMP_BATCH_SIZE,
     MV2_SMP_EAGERSIZE,
-    MV2_SMPI_LENGTH_QUEUE,
+    MV2_SMP_QUEUE_LENGTH,
     MV2_SMP_NUM_SEND_BUFFER,
     MV2_SMP_SEND_BUF_SIZE,
     MV2_USE_SHARED_MEM,
@@ -798,7 +801,7 @@ extern int dreg_max_use_count;
 #define DEFAULT_NUM_PORTS                1
 #define DEFAULT_NUM_QP_PER_PORT          1
 #define DEFAULT_COALESCE_THRESHOLD       6
-#define DEFAULT_USE_COALESCE             0
+#define DEFAULT_USE_COALESCE             1
 #define DEFAULT_SPIN_COUNT               5000
 #define MAX_NUM_CQES_PER_POLL            96
 #define MIN_NUM_CQES_PER_POLL            1
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_rndv.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_rndv.c
index 206593d..2ffb001 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_rndv.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_rndv.c
@@ -44,14 +44,28 @@ void get_sorted_index(MPIDI_VC_t *vc, int *b);
 int MPIDI_CH3I_MRAIL_Prepare_rndv(MPIDI_VC_t * vc, MPID_Request * req)
 {
     dreg_entry *reg_entry = NULL;
-    DEBUG_PRINT ("[prepare cts] rput protocol, recv size %d, segsize %d, io count %d\n",
-        req->dev.recv_data_sz, req->dev.segment_size, req->dev.iov_count);
+    PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+            "vc->rank: %d, req: %p, protocol: %d, recv size %ld, segsize %ld, iov count %d\n",
+            vc->pg_rank, req, req->mrail.protocol, req->dev.recv_data_sz, req->dev.segment_size, req->dev.iov_count);
+
+    if (IS_VC_SMP(vc)) {
+        if (req->dev.iov_count > 1) {
+            req->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
+            MPIDI_CH3I_MRAIL_FREE_RNDV_BUFFER(req);
+        } else if (req->mrail.protocol == MV2_RNDV_PROTOCOL_RENDEZVOUS_UNSPECIFIED) {
+            req->mrail.protocol = smp_rndv_protocol;
+        }
+        if (req->mrail.protocol == MV2_RNDV_PROTOCOL_R3) {
+            return 0;
+        }
+    }
 #ifdef _ENABLE_UD_
-    if (rdma_enable_hybrid && (!(vc->mrail.state & MRAILI_RC_CONNECTED) || 
+    else if (rdma_enable_hybrid && (!(vc->mrail.state & MRAILI_RC_CONNECTED) || 
                     req->mrail.protocol == MV2_RNDV_PROTOCOL_UD_ZCOPY)) {
 #ifdef _ENABLE_XRC_
         if (USE_XRC && !(vc->mrail.state & MRAILI_RC_CONNECTED) &&
-                req->mrail.protocol == MV2_RNDV_PROTOCOL_RPUT) {
+                req->mrail.protocol == MV2_RNDV_PROTOCOL_RPUT ||
+                req->mrail.protocol == MV2_RNDV_PROTOCOL_RGET) {
             req->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
             return 0;
         }
@@ -60,18 +74,10 @@ int MPIDI_CH3I_MRAIL_Prepare_rndv(MPIDI_VC_t * vc, MPID_Request * req)
         if (rdma_use_ud_zcopy) {
             req->mrail.protocol = MV2_RNDV_PROTOCOL_UD_ZCOPY;
         }
-    } else
-#endif
-    if (MV2_RNDV_PROTOCOL_RPUT == rdma_rndv_protocol) {
-        req->mrail.protocol = MV2_RNDV_PROTOCOL_RPUT;
-    } else if (MV2_RNDV_PROTOCOL_RGET == rdma_rndv_protocol) {
-        req->mrail.protocol = MV2_RNDV_PROTOCOL_RGET;
-    } else {
-        req->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
     }
-
-    if (req->mrail.protocol == MV2_RNDV_PROTOCOL_R3) {
-        return 0;
+#endif
+    else {
+        req->mrail.protocol = rdma_rndv_protocol;
     }
 
     /* Step 1: ready for user space (user buffer or pack) */
@@ -109,6 +115,9 @@ int MPIDI_CH3I_MRAIL_Prepare_rndv(MPIDI_VC_t * vc, MPID_Request * req)
         && !rdma_enable_cuda
 #endif
         ) {
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                "Using R3, rndv_buf_sz: %llu, rdma_r3_threshold: %llu\n",
+                req->mrail.rndv_buf_sz, rdma_r3_threshold);
         req->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
         MPIDI_CH3I_MRAIL_FREE_RNDV_BUFFER(req);
     }
@@ -144,27 +153,41 @@ int MPIDI_CH3I_MRAIL_Prepare_rndv(MPIDI_VC_t * vc, MPID_Request * req)
         (MV2_RNDV_PROTOCOL_RPUT == req->mrail.protocol ||
             MV2_RNDV_PROTOCOL_RGET == req->mrail.protocol ||
                 MV2_RNDV_PROTOCOL_UD_ZCOPY == req->mrail.protocol)) {
-        DEBUG_PRINT("[cts] size registered %d, addr %p\n",
-                req->mrail.rndv_buf_sz, req->mrail.rndv_buf);
-        reg_entry =
-            dreg_register(req->mrail.rndv_buf, req->mrail.rndv_buf_sz);
-        if (NULL == reg_entry) {
-            req->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
-            MPIDI_CH3I_MRAIL_FREE_RNDV_BUFFER(req);
-            /*MRAILI_Prepost_R3(); */
+        if (IS_VC_SMP(vc)) {
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                    "SMP vc, not registering. rank: %d, buf size: %llu, addr: %p, protocol: %d\n",
+                    vc->pg_rank, req->mrail.rndv_buf_sz, req->mrail.rndv_buf, req->mrail.protocol);
+            req->mrail.d_entry = NULL;
+        } else {
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                    "Remote vc, registering. rank: %d, buf size: %llu, addr: %p\n",
+                    vc->pg_rank, req->mrail.rndv_buf_sz, req->mrail.rndv_buf);
+            reg_entry =
+                dreg_register(req->mrail.rndv_buf, req->mrail.rndv_buf_sz);
+            if (NULL == reg_entry) {
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                        "registration failed for buf: %p, using R3\n", req->mrail.rndv_buf);
+                req->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
+                MPIDI_CH3I_MRAIL_FREE_RNDV_BUFFER(req);
+                /*MRAILI_Prepost_R3(); */
+            } else {
+                req->mrail.d_entry = reg_entry;
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                        "registration success for buf: %p, d_entry: %p\n",
+                        req->mrail.rndv_buf, req->mrail.d_entry);
+            }
         }
-        DEBUG_PRINT("[prepare cts] register success\n");
-    }
 
-    if (MV2_RNDV_PROTOCOL_RPUT == req->mrail.protocol ||
-            MV2_RNDV_PROTOCOL_RGET == req->mrail.protocol ||
-                MV2_RNDV_PROTOCOL_UD_ZCOPY == req->mrail.protocol) {
-        req->mrail.completion_counter = 0;
+        req->mrail.local_complete  = 0;
+        req->mrail.remote_complete = 0;
         req->mrail.d_entry = reg_entry;
         return 1;
     } else {
-        return 0;
+        req->mrail.local_complete  = 0;
+        req->mrail.remote_complete = 0;
     }
+
+    return 0;
 }
 
 int MPIDI_CH3I_MRAIL_Prepare_rndv_transfer(MPID_Request * sreq, 
@@ -187,7 +210,7 @@ int MPIDI_CH3I_MRAIL_Prepare_rndv_transfer(MPID_Request * sreq,
         sreq->mrail.remote_addr = NULL;
         /* Initialize this completion counter to 0
          * required for even striping */
-        sreq->mrail.completion_counter = 0;
+        sreq->mrail.local_complete = 0;
 
         for (hca_index = 0; hca_index < rdma_num_hcas; hca_index ++)
             sreq->mrail.rkey[hca_index] = 0;
@@ -294,6 +317,7 @@ void MRAILI_RDMA_Put_finish(MPIDI_VC_t * vc,
     int nb;
     vbuf *buf;
     MPID_Seqnum_t seqnum;
+    int mpi_errno = MPI_SUCCESS;
 
     MPIDI_Pkt_init(&rput_pkt, MPIDI_CH3_PKT_RPUT_FINISH);
 #ifdef _ENABLE_CUDA_
@@ -305,24 +329,43 @@ void MRAILI_RDMA_Put_finish(MPIDI_VC_t * vc,
     MPIDI_VC_FAI_send_seqnum(vc, seqnum);
     MPIDI_Pkt_set_seqnum(&rput_pkt, seqnum); 
 
-    iov.MPL_IOV_BUF = &rput_pkt;
-    iov.MPL_IOV_LEN = sizeof(MPIDI_CH3_Pkt_rput_finish_t);
+    PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+            "Sending RPUT FINISH to %d, sreq: %08x, rreq: %08x, rail: %d\n",
+            vc->pg_rank, sreq, sreq->mrail.partner_id, rail);
 
-    DEBUG_PRINT("Sending RPUT FINISH\n");
+    if (IS_VC_SMP(vc)) {
+        MPID_Request *new_req = NULL; 
+        sreq->mrail.local_complete = UINT32_MAX;
 
-    int rc = MPIDI_CH3I_MRAILI_rput_complete(vc, &iov, n_iov, &nb, &buf, rail);
+        mpi_errno = 
+            MPIDI_CH3_SMP_iStartMsg(vc, &rput_pkt, 
+                    sizeof(MPIDI_CH3_Pkt_rput_finish_t), &new_req);
+        if (mpi_errno != MPI_SUCCESS) { 
+            ibv_error_abort(IBV_STATUS_ERR,
+                    "Failed sending rput finish through SMP channel \n");
+        }
 
-    if (rc != 0 && rc != MPI_MRAIL_MSG_QUEUED)
-    { 
-        ibv_error_abort(IBV_STATUS_ERR,
-                "Cannot send rput through send/recv path");
-    }
+        if (new_req != NULL) {
+            MPID_Request_release(new_req);
+        }
+    } else { 
+        iov.MPL_IOV_BUF = &rput_pkt;
+        iov.MPL_IOV_LEN = sizeof(MPIDI_CH3_Pkt_rput_finish_t);
+
+        int rc = MPIDI_CH3I_MRAILI_rput_complete(vc, &iov, n_iov, &nb, &buf, rail);
+
+        if (rc != 0 && rc != MPI_MRAIL_MSG_QUEUED)
+        { 
+            ibv_error_abort(IBV_STATUS_ERR,
+                    "Cannot send rput through send/recv path");
+        }
 
-    buf->sreq = (void *) sreq;
+        buf->sreq = (void *) sreq;
 
-    /* mark MPI send complete when VIA send completes */
+        /* mark MPI send complete when VIA send completes */
 
-    DEBUG_PRINT("VBUF ASSOCIATED: %p, %08x\n", buf, buf->desc.u.sr.wr_id);
+        DEBUG_PRINT("VBUF ASSOCIATED: %p, %08x\n", buf, buf->desc.u.sr.wr_id);
+    }
 }
 
 void MRAILI_RDMA_Get_finish(MPIDI_VC_t * vc, 
@@ -340,13 +383,14 @@ void MRAILI_RDMA_Get_finish(MPIDI_VC_t * vc,
     MPIDI_VC_FAI_send_seqnum(vc, seqnum);
     MPIDI_Pkt_set_seqnum(&rget_pkt, seqnum); 
 
-    DEBUG_PRINT("Sending RGET FINISH\n");
+    rreq->mrail.local_complete = UINT32_MAX;
+    PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+            "Sending RGET FINISH to %d, rreq: %08x, sreq: %08x, rail: %d\n",
+            vc->pg_rank, rreq, rreq->dev.sender_req_id, rail);
 
-    if (SMP_INIT && vc->smp.local_nodes >= 0) {
+    if (IS_VC_SMP(vc)) {
         MPID_Request *new_req = NULL; 
 
-        MPIDI_CH3_Rendezvous_rget_recv_finish(vc, rreq); 
-
         mpi_errno = 
             MPIDI_CH3_SMP_iStartMsg(vc, &rget_pkt, 
                     sizeof(MPIDI_CH3_Pkt_rget_finish_t), &new_req);
@@ -358,6 +402,8 @@ void MRAILI_RDMA_Get_finish(MPIDI_VC_t * vc,
         if (new_req != NULL) {
             MPID_Request_release(new_req);
         }
+
+        MPIDI_CH3_Rendezvous_rget_recv_finish(vc, rreq); 
     } else { 
         vbuf *buf;
 
@@ -369,7 +415,7 @@ void MRAILI_RDMA_Get_finish(MPIDI_VC_t * vc,
         if (mpi_errno != MPI_SUCCESS && 
                 mpi_errno != MPI_MRAIL_MSG_QUEUED) {
             ibv_error_abort(IBV_STATUS_ERR,
-                    "Cannot send rput through send/recv path");
+                    "Cannot send rget finish through send/recv path");
         }
 
         MPIDI_CH3_Rendezvous_rget_recv_finish(vc, rreq);
@@ -397,7 +443,7 @@ void MPIDI_CH3I_MRAILI_Rendezvous_rget_push(MPIDI_VC_t * vc,
 
     if (rreq->mrail.rndv_buf_off == 0) {
         rreq->mrail.num_rdma_read_completions = 0;
-        rreq->mrail.completion_counter = 0;
+        rreq->mrail.local_complete = 0;
     }
 
     for(rail_index = 0; rail_index < rdma_num_rails; rail_index++) {
@@ -630,7 +676,7 @@ void MPIDI_CH3I_MRAILI_Rendezvous_rput_push(MPIDI_VC_t * vc,
         }
     }
     
-    sreq->mrail.completion_counter = 0;
+    sreq->mrail.local_complete = 0;
 
 #if defined(DEBUG)
     if (sreq->mrail.rndv_buf_sz > 0) {
@@ -876,16 +922,21 @@ int MPIDI_CH3I_MRAILI_Rendezvous_r3_ack_send(MPIDI_VC_t *vc)
 
 int MPIDI_CH3I_MRAIL_Finish_request(MPID_Request *rreq)
 {
-    rreq->mrail.completion_counter++;
-
-    if(rreq->mrail.protocol == MV2_RNDV_PROTOCOL_RGET) {
-        return 1;
+    PRINT_DEBUG(DEBUG_RNDV_verbose > 1,
+            "rreq: %08x, protocol: %d, local_complete: %d, remote_complete: %d\n",
+            rreq, rreq->mrail.protocol, rreq->mrail.local_complete, rreq->mrail.remote_complete);
+
+    MPIU_Assert(rreq->mrail.local_complete  == UINT32_MAX || rreq->mrail.local_complete  <= rdma_num_rails);
+    MPIU_Assert(rreq->mrail.remote_complete == UINT32_MAX || rreq->mrail.remote_complete <= rdma_num_rails);
+
+    switch(rreq->mrail.protocol) {
+        case MV2_RNDV_PROTOCOL_RGET:
+        case MV2_RNDV_PROTOCOL_RPUT:
+            return (rreq->mrail.local_complete == UINT32_MAX || rreq->mrail.remote_complete == UINT32_MAX);
+        default:
+            break;
     }
 
-    if(rreq->mrail.completion_counter < rdma_num_rails) {
-        return 0;
-    }
-    
     return 1;
 }
 
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/ibv_send.c b/src/mpid/ch3/channels/mrail/src/gen2/ibv_send.c
index e553d01..7f9af28 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/ibv_send.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/ibv_send.c
@@ -58,6 +58,9 @@ MPIR_T_PVAR_ULONG_LEVEL_DECL_EXTERN(MV2, mv2_ud_vbuf_available);
         -- rdma_global_ext_sendq_size;      \
         -- (_c)->mrail.rails[(_rail)].ext_sendq_size; 
 
+static inline vbuf * MRAILI_Get_Vbuf(MPIDI_VC_t * vc, size_t pkt_len);
+static inline int MPIDI_CH3I_MRAILI_Fast_rdma_ok(MPIDI_VC_t * vc, MPIDI_msg_sz_t len);
+
 static inline int MRAILI_Coalesce_ok(MPIDI_VC_t * vc, int rail)
 {
     if(unlikely(rdma_use_coalesce && 
@@ -540,8 +543,11 @@ static inline int MPIDI_CH3I_MRAILI_Fast_rdma_ok(MPIDI_VC_t * vc, MPIDI_msg_sz_t
     }
     
 #ifdef _ENABLE_UD_
-    if(unlikely(!(vc->mrail.state & MRAILI_RC_CONNECTED))) {
-        return 0;
+    if(rdma_enable_hybrid)
+    {
+            if(unlikely(!(vc->mrail.state & MRAILI_RC_CONNECTED))) {
+                    return 0;
+            }
     }
 #endif /* _ENABLE_UD_ */
 
@@ -781,22 +787,101 @@ int mv2_eager_fast_send(MPIDI_VC_t* vc, const void *buf,
 }
 
 #undef FUNCNAME
+#define FUNCNAME mv2_eager_fast_coalesce_send
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+int mv2_eager_fast_coalesce_send(MPIDI_VC_t* vc, const void *buf,
+                        MPIDI_msg_sz_t data_sz, int rank, int tag,
+                        MPID_Comm *comm, int context_offset, MPID_Request **sreq_p)
+{
+    int retval = 0;
+    vbuf* v = NULL;
+    int len = 0;
+    void *ptr = NULL;
+    MPID_Seqnum_t seqnum;
+    MPIDI_CH3_Pkt_t *upkt = NULL;
+    MPIDI_CH3_Pkt_eager_send_t *eager_pkt = NULL;
+
+    /* Get VBUF */
+    v = MRAILI_Get_Vbuf(vc, data_sz+sizeof(MPIDI_CH3_Pkt_eager_send_t));
+
+    /* Point header to start of buffer */
+    upkt = (MPIDI_CH3_Pkt_t *) (v->buffer + v->content_size);
+    eager_pkt = &((*upkt).eager_send);
+
+    /* Create packet header */
+    MPIDI_Pkt_init(eager_pkt, MPIDI_CH3_PKT_EAGER_SEND);
+    eager_pkt->data_sz                 = data_sz;
+    eager_pkt->match.parts.tag         = tag;
+    eager_pkt->match.parts.rank        = comm->rank;
+    eager_pkt->match.parts.context_id  = comm->context_id + context_offset;
+
+    /* Set sequence number */
+    MPIDI_VC_FAI_send_seqnum(vc, seqnum);
+    MPIDI_Pkt_set_seqnum(eager_pkt, seqnum);
+
+    /* Copy data */
+    ptr = (void*) v->buffer + v->content_size + sizeof(MPIDI_CH3_Pkt_eager_send_t);
+
+    memcpy(ptr, buf, data_sz);
+    /* Compute size of pkt */
+    len = sizeof(MPIDI_CH3_Pkt_eager_send_t) + data_sz;
+
+    /* Update length */
+    v->content_size += len;
+
+    /* send the buffer if we aren't trying to coalesce it */
+    if(likely(vc->mrail.coalesce_vbuf != v))  {
+        /* Initialize other vbuf parameters */
+        vbuf_init_send(v, len, v->rail);
+        /* Send the packet */
+        retval = mv2_MPIDI_CH3I_RDMA_Process.post_send(vc, v, v->rail);
+    } else {
+        MPIDI_CH3I_MRAILI_Pkt_comm_header *p = (MPIDI_CH3I_MRAILI_Pkt_comm_header *)
+            (v->buffer + v->content_size - len);
+
+        PACKET_SET_CREDIT(p, vc, v->rail);
+#ifdef CRC_CHECK
+        p->crc = update_crc(1, (void *)((uintptr_t)p+sizeof *p),
+                                  v->desc.sg_entry.length - sizeof *p);
+#endif
+        v->vc                = (void *) vc;
+        p->rail        = v->rail;
+#ifdef _ENABLE_UD_
+        if(rdma_enable_hybrid) {
+                p->src.rank    = MPIDI_Process.my_pg_rank;
+        } else
+#endif
+        {
+                p->src.vc_addr = vc->mrail.remote_vc_addr;
+        }
+    }
+
+    return retval;
+}
+
+#undef FUNCNAME
 #define FUNCNAME mv2_eager_fast_rfp_send
 #undef FCNAME
 #define FCNAME MPL_QUOTE(FUNCNAME)
 int mv2_eager_fast_rfp_send(MPIDI_VC_t* vc, const void *buf,
                         MPIDI_msg_sz_t data_sz, int rank, int tag,
-                        MPID_Comm *comm, int context_offset)
+                        MPID_Comm *comm, int context_offset, MPID_Request **sreq_p)
 {
     /* For short send n_iov is always 2 */
     int n_iov = 2;
     MPID_Seqnum_t seqnum;
     vbuf *buf_handle = NULL;
     int num_bytes_ptr = 0;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[2];
     MPIDI_CH3_Pkt_t upkt;
     MPIDI_CH3_Pkt_eager_send_t * const eager_pkt = &upkt.eager_send;
 
+    if (unlikely(!MPIDI_CH3I_MRAILI_Fast_rdma_ok(vc, data_sz+sizeof(*eager_pkt)))) {
+        return vc->eager_fast_fn(vc, buf, data_sz, rank,
+                                tag, comm, context_offset, sreq_p);
+    }
+
     /* Create packet header */
     MPIDI_Pkt_init(eager_pkt, MPIDI_CH3_PKT_EAGER_SEND);
     eager_pkt->data_sz                 = data_sz;
@@ -838,13 +923,16 @@ int post_srq_send(MPIDI_VC_t* vc, vbuf* v, int rail)
     v->vc = (void *) vc;
     p->rail        = rail;
 #ifdef _ENABLE_UD_
-    p->src.rank    = MPIDI_Process.my_pg_rank;
-    while (vc->mrail.rails[rail].qp_hndl->state != IBV_QPS_RTS) {
-        MPID_Progress_test();
-    }
-#else
-    p->src.vc_addr = vc->mrail.remote_vc_addr;
+    if(rdma_enable_hybrid) {
+            p->src.rank    = MPIDI_Process.my_pg_rank;
+            while (vc->mrail.rails[rail].qp_hndl->state != IBV_QPS_RTS) {
+                    MPID_Progress_test();
+            }
+    } else
 #endif
+    {
+            p->src.vc_addr = vc->mrail.remote_vc_addr;
+    }
     MPIU_Assert(v->transport == IB_TRANSPORT_RC);
     
     if (p->type == MPIDI_CH3_PKT_NOOP) {
@@ -900,10 +988,14 @@ int post_send(MPIDI_VC_t * vc, vbuf * v, int rail)
     v->vc = (void *) vc;
     p->rail        = rail;
 #ifdef _ENABLE_UD_
-    p->src.rank = MPIDI_Process.my_pg_rank;
-#else
-    p->src.vc_addr = vc->mrail.remote_vc_addr;
+    if(rdma_enable_hybrid) {
+            p->src.rank = MPIDI_Process.my_pg_rank;
+    } else
 #endif
+    {
+            p->src.vc_addr = vc->mrail.remote_vc_addr;
+    }
+
     MPIU_Assert(v->transport == IB_TRANSPORT_RC);
    
     if (p->type == MPIDI_CH3_PKT_NOOP) {
@@ -1042,14 +1134,13 @@ int MRAILI_Fill_start_buffer(vbuf * v,
     return len;
 }
 
-
-
 #undef FUNCNAME
 #define FUNCNAME MRAILI_Get_Vbuf
 #undef FCNAME
 #define FCNAME MPL_QUOTE(FUNCNAME)
 static inline vbuf * MRAILI_Get_Vbuf(MPIDI_VC_t * vc, size_t pkt_len)
 {
+    int rail = 0;
     vbuf* temp_v = NULL;
 
     MPIDI_STATE_DECL(MPID_STATE_MRAILI_GET_VBUF);
@@ -1078,35 +1169,27 @@ static inline vbuf * MRAILI_Get_Vbuf(MPIDI_VC_t * vc, size_t pkt_len)
         }
     }
 
+    rail = MRAILI_Send_select_rail(vc);
     /* if there already wasn't a vbuf that could
      * hold our packet we need to allocate a 
      * new one
      */
     if (likely(NULL == temp_v)) {
-        MRAILI_Get_buffer(vc, temp_v, pkt_len);
-
-        DEBUG_PRINT("buffer is %p\n", temp_v->buffer);
-        DEBUG_PRINT("pheader buffer is %p\n", temp_v->pheader);
-
-        temp_v->rail = MRAILI_Send_select_rail(vc);
-        temp_v->eager = 1;
-        temp_v->content_size = 0;
-
-        DEBUG_PRINT("incrementing the outstanding eager vbufs: eager %d\n",
-                vc->mrail.outstanding_eager_vbufs);
-
         /* are we trying to coalesce? If so, place
          * it as the new coalesce vbuf and add it
          * to the extended sendq
          */
 
-        if(unlikely(MRAILI_Coalesce_ok(vc, temp_v->rail))) {
+        if(unlikely(MRAILI_Coalesce_ok(vc, rail)) &&
+            (pkt_len*2 <= DEFAULT_MEDIUM_VBUF_SIZE)) {
+            MRAILI_Get_buffer(vc, temp_v, DEFAULT_MEDIUM_VBUF_SIZE);
             vc->mrail.coalesce_vbuf = temp_v;
 
             temp_v->seqnum = vc->mrail.seqnum_next_tosend;
             vc->mrail.seqnum_next_tosend++;
 
             temp_v->coalesce = 1;
+            temp_v->rail = rail;
             MRAILI_Ext_sendq_enqueue(vc, temp_v->rail, temp_v); 
             DEBUG_PRINT("coalesce is ok\n");
 
@@ -1115,8 +1198,20 @@ static inline vbuf * MRAILI_Get_Vbuf(MPIDI_VC_t * vc, size_t pkt_len)
             }
 
         } else {
+            MRAILI_Get_buffer(vc, temp_v, pkt_len);
             DEBUG_PRINT("coalesce not ok\n");
         }
+
+        DEBUG_PRINT("buffer is %p\n", temp_v->buffer);
+        DEBUG_PRINT("pheader buffer is %p\n", temp_v->pheader);
+
+        temp_v->rail = rail;
+        temp_v->eager = 1;
+        temp_v->content_size = 0;
+
+        DEBUG_PRINT("incrementing the outstanding eager vbufs: eager %d\n",
+                vc->mrail.outstanding_eager_vbufs);
+
         if (temp_v->transport == IB_TRANSPORT_RC)
             ++vc->mrail.outstanding_eager_vbufs;
     }
@@ -1127,8 +1222,6 @@ static inline vbuf * MRAILI_Get_Vbuf(MPIDI_VC_t * vc, size_t pkt_len)
     return temp_v;
 }
 
-
-
 #undef FUNCNAME
 #define FUNCNAME MPIDI_CH3I_MRAILI_Eager_send
 #undef FCNAME
@@ -1206,10 +1299,13 @@ int MPIDI_CH3I_MRAILI_Eager_send(MPIDI_VC_t * vc,
         v->vc                = (void *) vc;
         p->rail        = v->rail;
 #ifdef _ENABLE_UD_
-        p->src.rank    = MPIDI_Process.my_pg_rank;
-#else
-        p->src.vc_addr = vc->mrail.remote_vc_addr;
+	if(rdma_enable_hybrid) {
+            p->src.rank    = MPIDI_Process.my_pg_rank;
+	} else
 #endif
+    {
+            p->src.vc_addr = vc->mrail.remote_vc_addr;
+	}
     }
 
     *buf_handle = v;
@@ -1321,10 +1417,13 @@ int MRAILI_Backlog_send(MPIDI_VC_t * vc, int rail)
 
         if (mv2_MPIDI_CH3I_RDMA_Process.has_srq) {
 #ifdef _ENABLE_UD_
-            p->src.rank    = MPIDI_Process.my_pg_rank;
-#else
-            p->src.vc_addr = vc->mrail.remote_vc_addr;
+		if(rdma_enable_hybrid) {
+                p->src.rank    = MPIDI_Process.my_pg_rank;
+		} else
 #endif
+        {
+                p->src.vc_addr = vc->mrail.remote_vc_addr;
+		}
             p->rail        = rail;
         }
 
@@ -1459,6 +1558,13 @@ int MRAILI_Process_send(void *vbuf_addr)
         } 
 
         if (v->padding == RPUT_VBUF_FLAG) {
+
+            req = (MPID_Request *)v->sreq;
+
+            PRINT_DEBUG(DEBUG_RNDV_verbose, "Processing RPUT completion "
+                    "req: %p, protocol: %d, local: %d, remote: %d\n",
+                    req, req->mrail.protocol, req->mrail.local_complete, req->mrail.remote_complete);
+
             /* HSAM is Activated */
             if (mv2_MPIDI_CH3I_RDMA_Process.has_hsam) {
                 req = (MPID_Request *)v->sreq;
@@ -1502,7 +1608,10 @@ int MRAILI_Process_send(void *vbuf_addr)
                 }
             }
 
-            ++req->mrail.completion_counter;
+            ++req->mrail.local_complete;
+            PRINT_DEBUG(DEBUG_RNDV_verbose, "Processing RGET completion "
+                    "req: %p, protocol: %d, local: %d, remote: %d\n",
+                    req, req->mrail.protocol, req->mrail.local_complete, req->mrail.remote_complete);
 
             /* If the message size if less than the striping threshold, send a
              * finish message immediately
@@ -1518,7 +1627,7 @@ int MRAILI_Process_send(void *vbuf_addr)
 
             if(req->mrail.rndv_buf_sz > rdma_large_msg_rail_sharing_threshold) {
                 if(mv2_MPIDI_CH3I_RDMA_Process.has_hsam && 
-                        (req->mrail.completion_counter == 
+                        (req->mrail.local_complete == 
                          req->mrail.num_rdma_read_completions )) { 
 
                     MRAILI_RDMA_Get_finish(vc, 
@@ -1529,7 +1638,7 @@ int MRAILI_Process_send(void *vbuf_addr)
                             req->mrail.initial_weight);                       
 
                 } else if (!mv2_MPIDI_CH3I_RDMA_Process.has_hsam && 
-                        (req->mrail.completion_counter == 
+                        (req->mrail.local_complete == 
                          req->mrail.num_rdma_read_completions)) {
 
                     MRAILI_RDMA_Get_finish(vc,
@@ -1622,11 +1731,16 @@ int MRAILI_Process_send(void *vbuf_addr)
         if (!rdma_enable_cuda || process_rput_finish)
 #endif
         {
-        ++req->mrail.completion_counter;
 
-        DEBUG_PRINT("req pointer %p, entry %p\n", req, req->mrail.d_entry);
+        ++req->mrail.local_complete;
+        if (req->mrail.local_complete == rdma_num_rails) {
+            req->mrail.local_complete = UINT32_MAX;
+        }
+        PRINT_DEBUG(DEBUG_RNDV_verbose, "Processing RPUT FIN completion "
+                "req: %p, protocol: %d, local: %d, remote: %d\n",
+                req, req->mrail.protocol, req->mrail.local_complete, req->mrail.remote_complete);
 
-        if((req->mrail.completion_counter == rdma_num_rails)) {
+        if(MPIDI_CH3I_MRAIL_Finish_request(req)) {
 
             if (req->mrail.d_entry != NULL) {
                 dreg_unregister(req->mrail.d_entry);
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_post.h b/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_post.h
index f4febc5..9226bf4 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_post.h
+++ b/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_post.h
@@ -215,7 +215,7 @@ struct MPIDI_CH3I_RDMA_put_get_list_t{
     (_pkt)->rndv.protocol = (_req)->mrail.protocol;             \
     if ( (MV2_RNDV_PROTOCOL_RPUT == (_pkt)->rndv.protocol) ||       \
             (MV2_RNDV_PROTOCOL_RGET == (_pkt)->rndv.protocol) ) {   \
-        if (!IS_CUDA_RNDV_REQ(_req)) {                          \
+        if (!IS_CUDA_RNDV_REQ(_req) && ((_req)->mrail.d_entry)) {   \
             for (_i = 0; _i < rdma_num_hcas; _i ++) {           \
                 (_pkt)->rndv.rkey[_i] =                         \
                 ((_req)->mrail.d_entry)->memhandle[_i]->rkey;   \
@@ -223,6 +223,7 @@ struct MPIDI_CH3I_RDMA_put_get_list_t{
         }                                                       \
         (_pkt)->rndv.buf_addr = (_req)->mrail.rndv_buf;         \
     }                                                           \
+    (_pkt)->rndv.reqtype = MPIDI_Request_get_type(_req);       \
     MPIDI_CH3I_MRAIL_SET_PKT_RNDV_CUDA_IPC(_pkt, _req);         \
 }
 
@@ -254,8 +255,8 @@ do {                                                            \
 {                                                               \
     int _i;                                                     \
     (_req)->mrail.protocol = (_pkt)->rndv.protocol;             \
-    if ( (MV2_RNDV_PROTOCOL_RPUT == (_pkt)->rndv.protocol) ||       \
-            (MV2_RNDV_PROTOCOL_RGET == (_pkt)->rndv.protocol) ) {   \
+    if (  (MV2_RNDV_PROTOCOL_RPUT == (_pkt)->rndv.protocol) ||  \
+          (MV2_RNDV_PROTOCOL_RGET == (_pkt)->rndv.protocol) ) {     \
         (_req)->mrail.remote_addr = (_pkt)->rndv.buf_addr;          \
         for (_i = 0; _i < rdma_num_hcas; _i ++)                     \
         (_req)->mrail.rkey[_i] = (_pkt)->rndv.rkey[_i];             \
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_pre.h b/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_pre.h
index 9a6ac54..1a516c2 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_pre.h
+++ b/src/mpid/ch3/channels/mrail/src/gen2/mpidi_ch3_rdma_pre.h
@@ -38,6 +38,7 @@
     union {                     \
         uint32_t smp_index;     \
         uint32_t rank;          \
+        uint64_t vc_addr;       \
     } src;                      
 #else
 #define VC_SRC_INFO \
@@ -83,7 +84,8 @@ typedef struct MPIDI_CH3I_MRAILI_Rndv_info {
     MRAILI_Protocol_t   protocol;
     /* This is required for telling the receiver
      * when to mark the recv as complete */
-    uint8_t            weight_rail[MAX_NUM_HCAS];
+    uint8_t             weight_rail[MAX_NUM_HCAS];
+    uint8_t             reqtype;
 #ifdef _ENABLE_UD_
     uint8_t             hca_index;
     uint32_t            rndv_qpn;
@@ -166,8 +168,9 @@ struct dreg_entry;
         void     *remote_addr;          \
         uint32_t rkey[MAX_NUM_HCAS];    \
         uint8_t  nearly_complete;       \
-        uint8_t  num_rdma_read_completions;       \
-        uint32_t completion_counter;   \
+        uint32_t  local_complete;        \
+        uint32_t  remote_complete;       \
+        uint32_t  num_rdma_read_completions;       \
         double  initial_weight[MAX_NUM_SUBRAILS];   \
         double  stripe_start_time;   \
         double  stripe_finish_time[MAX_NUM_SUBRAILS];   \
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_init.c b/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_init.c
index f173725..6343fd0 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_init.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_init.c
@@ -637,7 +637,11 @@ int MPIDI_CH3I_RDMA_init(MPIDI_PG_t * pg, int pg_rank)
         MRAILI_Init_vc(vc);
         if (mv2_use_eager_fast_send &&
             !(SMP_INIT && (vc->smp.local_nodes >= 0))) {
-            vc->eager_fast_fn = mv2_eager_fast_send;
+            if (likely(rdma_use_coalesce)) {
+                vc->eager_fast_fn = mv2_eager_fast_coalesce_send;
+            } else {
+                vc->eager_fast_fn = mv2_eager_fast_send;
+            }
         }
     }
 
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_priv.c b/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_priv.c
index 89bf75e..bfd59cc 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_priv.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/rdma_iba_priv.c
@@ -348,19 +348,33 @@ int rdma_find_active_port(struct ibv_context *context,
 #undef FCNAME
 #define FCNAME MPL_QUOTE(FUNCNAME)
 int rdma_find_network_type(struct ibv_device **dev_list, int num_devices,
-                           int *num_usable_hcas)
+                           struct ibv_device **usable_dev_list, int *num_usable_hcas)
 {
     int i = 0;
+    int j = 0;
     int hca_type = 0;
-    int network_type = MV2_NETWORK_CLASS_UNKNOWN;
+    int network_type = MV2_HCA_UNKWN;
     int num_ib_cards = 0;
     int num_iwarp_cards = 0;
     int num_unknwn_cards = 0;
 
-    dev_list = ibv_get_device_list(&num_devices);
-
     for (i = 0; i < num_devices; ++i) {
         hca_type = mv2_get_hca_type(dev_list[i]);
+	    PRINT_DEBUG(DEBUG_INIT_verbose>1, "HCA %s type = %s\n", dev_list[i]->name,
+                    mv2_get_hca_name(hca_type));
+        if (network_type <= hca_type) {
+            network_type=hca_type;
+        }
+    }
+    for (i = 0; i < num_devices; ++i) {
+        hca_type = mv2_get_hca_type(dev_list[i]);
+        if (network_type != hca_type) {
+            continue;
+        }
+        usable_dev_list[j] = dev_list[i];
+	    PRINT_DEBUG(DEBUG_INIT_verbose>1, "Usable HCA %d = %s. Type = %s\n",
+                    j, dev_list[i]->name, mv2_get_hca_name(hca_type));
+        j++;
         if (MV2_IS_IB_CARD(hca_type)) {
             num_ib_cards++;
         } else if (MV2_IS_IWARP_CARD(hca_type)) {
@@ -368,27 +382,22 @@ int rdma_find_network_type(struct ibv_device **dev_list, int num_devices,
         } else {
             num_unknwn_cards++;
         }
-        if (MV2_IS_QLE_CARD(hca_type)) {
-            PRINT_ERROR("QLogic IB card detected in system\n");
+        if (MV2_IS_QLE_CARD(hca_type) || MV2_IS_INTEL_CARD(hca_type)) {
+            PRINT_ERROR("QLogic IB cards or Intel Omni-Path detected in system.\n");
             PRINT_ERROR("Please re-configure the library with the"
                         " '--with-device=ch3:psm' configure option"
-                        " for best performance\n");
+                        " for best performance and functionality.\n");
         }
     }
 
     if (num_ib_cards && (num_ib_cards >= num_iwarp_cards)) {
-        network_type = MV2_NETWORK_CLASS_IB;
         *num_usable_hcas = num_ib_cards;
     } else if (num_iwarp_cards && (num_ib_cards < num_iwarp_cards)) {
-        network_type = MV2_NETWORK_CLASS_IWARP;
         *num_usable_hcas = num_iwarp_cards;
     } else {
-        network_type = MV2_NETWORK_CLASS_UNKNOWN;
         *num_usable_hcas = num_unknwn_cards;
     }
 
-    ibv_free_device_list(dev_list);
-
     return network_type;
 }
 
@@ -415,17 +424,9 @@ int rdma_skip_network_card(mv2_iba_network_classes network_type,
                            struct ibv_device *ib_dev)
 {
     int skip = 0;
-    int hca_type = 0;
 
-    hca_type = mv2_get_hca_type(ib_dev);
-
-    if ((network_type == MV2_NETWORK_CLASS_IB) && (MV2_IS_IWARP_CARD(hca_type))) {
-        skip = 1;
-    } else if ((network_type == MV2_NETWORK_CLASS_IWARP) &&
-               (MV2_IS_IB_CARD(hca_type))) {
+    if (network_type != mv2_get_hca_type(ib_dev)) {
         skip = 1;
-    } else {
-        skip = 0;
     }
 
     return skip;
@@ -514,7 +515,9 @@ int ring_rdma_open_hca(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
 
   fn_exit:
     /* Clean up before exit */
-    ibv_free_device_list(dev_list);
+    if (dev_list) {
+        ibv_free_device_list(dev_list);
+    }
     return is_device_opened;
 }
 
@@ -544,9 +547,8 @@ int rdma_open_hca(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
     int mpi_errno = MPI_SUCCESS;
     struct ibv_device *ib_dev = NULL;
     struct ibv_device **dev_list = NULL;
-#ifdef RDMA_CM
+    struct ibv_device **usable_dev_list = MPIU_Malloc(sizeof(struct ibv_device *)*MAX_NUM_HCAS);
     int network_type = MV2_NETWORK_CLASS_UNKNOWN;
-#endif /*RDMA_CM*/
 
 #ifdef CRC_CHECK
     gen_crc_table();
@@ -556,11 +558,10 @@ int rdma_open_hca(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
 
     dev_list = ibv_get_device_list(&num_devices);
 
-#ifdef RDMA_CM
     network_type = rdma_find_network_type(dev_list, num_devices,
-                                          &num_usable_hcas);
+                                          usable_dev_list, &num_usable_hcas);
 
-    if (network_type == MV2_NETWORK_CLASS_UNKNOWN) {
+    if (network_type == MV2_HCA_UNKWN) {
         if (num_usable_hcas) {
             PRINT_ERROR("Unknown HCA type: this build of MVAPICH2 does not"
                         "fully support the HCA found on the system (try with"
@@ -574,38 +575,37 @@ int rdma_open_hca(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc)
                                       "**fail %s", "No IB device found");
         }
     }
-#else
-    num_usable_hcas = num_devices;
-#endif /*RDMA_CM*/
 
-retry_hca_open:
-    for (i = 0; i < num_devices; i++) {
-#ifdef RDMA_CM
-        if (rdma_skip_network_card(network_type, dev_list[i])) {
+    PRINT_DEBUG(DEBUG_INIT_verbose, "Selected HCA type = %s, Usable HCAs = %d\n",
+                mv2_get_hca_name(network_type), num_usable_hcas);
+    for (i = 0; i < num_usable_hcas; i++) {
+        if (rdma_skip_network_card(network_type, usable_dev_list[i])) {
             /* Skip HCA's that don't match with network type */
+            PRINT_DEBUG(DEBUG_INIT_verbose, "1. Skipping HCA %s since type does not match."
+                        "Selected: %s; Current: %s\n",
+                        usable_dev_list[i]->name, mv2_get_hca_name(network_type),
+                        mv2_get_hca_name(mv2_get_hca_type(usable_dev_list[i])));
             continue;
         }
-#endif /*RDMA_CM*/
 
-        if ((rdma_multirail_usage_policy == MV2_MRAIL_BINDING) &&
-            (!first_attempt_to_bind_failed)) {
+        if (rdma_multirail_usage_policy == MV2_MRAIL_BINDING) {
             /* Bind a process to a HCA */
             if (mrail_use_default_mapping) {
                 mrail_user_defined_p2r_mapping =
                     rdma_local_id % num_usable_hcas;
             }
-            ib_dev = dev_list[mrail_user_defined_p2r_mapping];
+            ib_dev = usable_dev_list[mrail_user_defined_p2r_mapping];
         } else if (!strncmp(rdma_iba_hcas[i], RDMA_IBA_NULL_HCA, 32)) {
             /* User hasn't specified any HCA name
              * We will use the first available HCA(s) */
-            ib_dev = dev_list[i];
+            ib_dev = usable_dev_list[i];
         } else {
             /* User specified HCA(s), try to look for it */
             j = 0;
-            while (dev_list[j]) {
-                if (!strncmp(ibv_get_device_name(dev_list[j]),
+            while (usable_dev_list[j]) {
+                if (!strncmp(ibv_get_device_name(usable_dev_list[j]),
                              rdma_iba_hcas[rdma_num_hcas], 32)) {
-                    ib_dev = dev_list[j];
+                    ib_dev = usable_dev_list[j];
                     break;
                 }
                 j++;
@@ -614,7 +614,9 @@ retry_hca_open:
 
         if (!ib_dev) {
             /* Clean up before exit */
-            ibv_free_device_list(dev_list);
+            if (dev_list) {
+                ibv_free_device_list(dev_list);
+            }
             MPIR_ERR_SETFATALANDJUMP1(mpi_errno, MPI_ERR_OTHER, "**fail",
                                       "**fail %s", "No IB device found");
         }
@@ -624,7 +626,9 @@ retry_hca_open:
         proc->nic_context[rdma_num_hcas] = ibv_open_device(ib_dev);
         if (!proc->nic_context[rdma_num_hcas]) {
             /* Clean up before exit */
-            ibv_free_device_list(dev_list);
+            if (dev_list) {
+                ibv_free_device_list(dev_list);
+            }
             MPIR_ERR_SETFATALANDJUMP2(mpi_errno, MPI_ERR_OTHER, "**fail",
                                       "%s %d", "Failed to open HCA number",
                                       rdma_num_hcas);
@@ -634,6 +638,8 @@ retry_hca_open:
                                             proc->ib_dev[rdma_num_hcas])) {
             /* No active port, skip HCA */
             ibv_close_device(proc->nic_context[rdma_num_hcas]);
+            PRINT_DEBUG(DEBUG_INIT_verbose,"Skipping HCA %s since it does not have an active port\n",
+                        usable_dev_list[i]->name);
             continue;
         }
 
@@ -641,14 +647,16 @@ retry_hca_open:
             ibv_alloc_pd(proc->nic_context[rdma_num_hcas]);
         if (!proc->ptag[rdma_num_hcas]) {
             /* Clean up before exit */
-            ibv_free_device_list(dev_list);
+            if (dev_list) {
+                ibv_free_device_list(dev_list);
+            }
             MPIR_ERR_SETFATALANDJUMP2(mpi_errno, MPI_ERR_OTHER,
                                       "**fail", "%s%d",
                                       "Failed to alloc pd number ",
                                       rdma_num_hcas);
         }
 
-        PRINT_DEBUG(DEBUG_INIT_verbose, "HCA %d/%d = %s\n", rdma_num_hcas+1,
+        PRINT_DEBUG(DEBUG_INIT_verbose,"HCA %d/%d = %s\n", rdma_num_hcas+1,
                     rdma_num_req_hcas, proc->ib_dev[rdma_num_hcas]->name);
         rdma_num_hcas++;
         if ((rdma_multirail_usage_policy == MV2_MRAIL_BINDING) ||
@@ -660,10 +668,6 @@ retry_hca_open:
     }
 
     if (unlikely(rdma_num_hcas == 0)) {
-        if (!first_attempt_to_bind_failed) {
-            first_attempt_to_bind_failed = 1;
-            goto retry_hca_open;
-        }
         MPIR_ERR_SETFATALANDJUMP2(mpi_errno, MPI_ERR_OTHER,
                                   "**fail", "%s %d",
                                   "No active HCAs found on the system!!!",
@@ -672,7 +676,10 @@ retry_hca_open:
 
   fn_exit:
     /* Clean up before exit */
-    ibv_free_device_list(dev_list);
+    MPIU_Free(usable_dev_list);
+    if (dev_list) {
+        ibv_free_device_list(dev_list);
+    }
     return mpi_errno;
 
   fn_fail:
@@ -1568,9 +1575,12 @@ void MRAILI_Init_vc(MPIDI_VC_t * vc)
     PRINT_DEBUG(DEBUG_XRC_verbose > 0, "MRAILI_Init_vc %d\n", vc->pg_rank);
 #endif
 #ifdef _ENABLE_UD_
-    if (vc->mrail.state & MRAILI_UD_CONNECTED) {
-        MRAILI_RC_Enable(vc);
-        return;
+    if(rdma_enable_hybrid)
+    {
+            if (vc->mrail.state & MRAILI_UD_CONNECTED) {
+                    MRAILI_RC_Enable(vc);
+                    return;
+            }
     }
 #endif
 
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/rdma_impl.h b/src/mpid/ch3/channels/mrail/src/gen2/rdma_impl.h
index 7f977be..2f2ff8b 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/rdma_impl.h
+++ b/src/mpid/ch3/channels/mrail/src/gen2/rdma_impl.h
@@ -480,13 +480,13 @@ int MRAILI_Backlog_send(MPIDI_VC_t * vc, int subrail);
 int rdma_open_hca(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc);
 int rdma_find_active_port(struct ibv_context *context, struct ibv_device *ib_dev);
 int rdma_find_network_type(struct ibv_device **dev_list, int num_devices,
-                           int *num_usable_hcas);
+                           struct ibv_device **usable_dev_list, int *num_usable_hcas);
 int rdma_get_process_to_rail_mapping(int mrail_user_defined_p2r_type);
 int  rdma_get_control_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc);
 void  rdma_set_default_parameters(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc);
 void rdma_get_user_parameters(int num_proc, int me);
 void rdma_get_pm_parameters(mv2_MPIDI_CH3I_RDMA_Process_t *proc);
-void mv2_print_env_info(mv2_MPIDI_CH3I_RDMA_Process_t *proc);
+void mv2_print_env_info(mv2_MPIDI_CH3I_RDMA_Process_t *proc, struct coll_info *colls_arch_hca);
 int rdma_iba_hca_init_noqp(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc,
               int pg_rank, int pg_size);
 int rdma_iba_hca_init(struct mv2_MPIDI_CH3I_RDMA_Process_t *proc,
@@ -568,6 +568,8 @@ void set_pkey_index(uint16_t * pkey_index, int hca_num, int port_num);
 
 void init_apm_lock(void);
 
+void MRAILI_RDMA_Put_finish(MPIDI_VC_t * vc, 
+        MPID_Request * sreq, int rail);
 void MRAILI_RDMA_Get_finish(MPIDI_VC_t * vc, 
         MPID_Request * rreq, int rail);
         
diff --git a/src/mpid/ch3/channels/mrail/src/gen2/sysreport.c b/src/mpid/ch3/channels/mrail/src/gen2/sysreport.c
index c4754ad..4686083 100644
--- a/src/mpid/ch3/channels/mrail/src/gen2/sysreport.c
+++ b/src/mpid/ch3/channels/mrail/src/gen2/sysreport.c
@@ -111,7 +111,9 @@ static int hca_check(int rank) {
        */
     }
 
-    ibv_free_device_list(dev_list);
+    if (dev_list) {
+        ibv_free_device_list(dev_list);
+    }
     return mpi_errno;
 }
 
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_contigsend.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_contigsend.c
index 1227c92..9542c8a 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_contigsend.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_contigsend.c
@@ -117,7 +117,9 @@ static int MPIDI_CH3_SMP_ContigSend(MPIDI_VC_t * vc,
            write */
         MPIDI_CH3I_SMP_write_contig(vc, reqtype, buf, data_sz, rank, 
                 tag, comm, context_offset, &nb);
-        DEBUG_PRINT("ch3_smp_contigsend: writev returned %d bytes\n", nb);
+        PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                "dst: %d, reqtype: %d, data_sz: %d, writev returned %d bytes\n",
+                vc->pg_rank, reqtype, data_sz, nb);
 
         /* send all or NULL */
         if( !nb ) {
@@ -131,6 +133,7 @@ static int MPIDI_CH3_SMP_ContigSend(MPIDI_VC_t * vc,
             }
             MPIDI_CH3I_SMP_SendQ_enqueue_head(vc, sreq);
             vc->smp.send_active = sreq;
+            PRINT_DEBUG(DEBUG_SHM_verbose>1, "Enqueueing sreq: %p to vc: %d\n", sreq, vc->pg_rank);
         }
     } else {
         /* sendQ not empty, enqueue request, fallback MPIDI_CH3_PKT_EAGER_SEND */
@@ -140,6 +143,7 @@ static int MPIDI_CH3_SMP_ContigSend(MPIDI_VC_t * vc,
             MPIR_ERR_SETANDJUMP(mpi_errno, MPI_ERR_OTHER, "**ch3|contigsend");
         }
         MPIDI_CH3I_SMP_SendQ_enqueue(vc, sreq);
+        PRINT_DEBUG(DEBUG_SHM_verbose>1, "Enqueueing sreq: %p to vc: %d\n", sreq, vc->pg_rank);
     }
 
     *sreq_p = sreq;
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_init.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_init.c
index 3780da5..ceee83e 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_init.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_init.c
@@ -23,6 +23,9 @@
 #if defined (_SHARP_SUPPORT_)
 #include "ibv_sharp.h"
 #endif
+#ifdef HAVE_ROMIO
+#include "romioconf.h"
+#endif
 
 #define MPIDI_CH3I_HOST_DESCRIPTION_KEY "description"
 
@@ -102,7 +105,7 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
     if (mpi_errno) MPIR_ERR_POP(mpi_errno);
     
     /* Choose default startup method and set default on-demand threshold */
-#if defined(RDMA_CM) && !defined(CKPT)
+#if defined(RDMA_CM) && !defined(CKPT) && !(ROMIO_IME)
     /* If user has not forcefully disabled RDMA_CM, and if user has not
      * specified the use of MCAST use it by default */
     if (
@@ -132,13 +135,6 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
         dpm = !!atoi(value);
         MPIDI_CH3I_Process.has_dpm = dpm;
     }
-#ifdef _ENABLE_UD_
-    if (MPIDI_CH3I_Process.has_dpm) {
-        MPL_error_printf("Error: DPM is not supported with Hybrid builds.\n"
-                          "Please reconfigure MVAPICH2 library without --enable-hybrid option.\n");
-        MPIR_ERR_SETFATALANDJUMP(mpi_errno, MPI_ERR_OTHER, "**fail");
-    }
-#endif /* _ENABLE_UD_ */
     if (MPIDI_CH3I_Process.has_dpm) {
         setenv("MV2_ENABLE_AFFINITY", "0", 1);
 #if defined(RDMA_CM) && !defined(CKPT)
@@ -149,6 +145,10 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
             threshold = MPIDI_CH3I_CM_DEFAULT_ON_DEMAND_THRESHOLD;
         }
 #endif /*defined(RDMA_CM) && !defined(CKPT)*/
+#ifdef _ENABLE_UD_
+        /* DPM and Hybrid cannot be enabled at the same time */
+        rdma_enable_hybrid = 0;
+#endif /*_ENABLE_UD_*/
     }
 
 #ifdef _ENABLE_CUDA_
@@ -203,9 +203,19 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
         }
         rdma_hybrid_enable_threshold = 0;
     }
+
+    if(((value = getenv("MV2_SUPPORT_DPM")) != NULL) && !!atoi(value)) {
+            rdma_enable_hybrid = 0;
+    }
+
     if (pg_size < rdma_hybrid_enable_threshold) {
         rdma_enable_hybrid = 0;
     }
+    if (rdma_enable_hybrid && MPIDI_CH3I_Process.has_dpm) {
+        PRINT_INFO((pg_rank==0), "DPM is not supported with Hybrid builds. Disabling Hybrid\n");
+        rdma_enable_only_ud = 0;
+        rdma_enable_hybrid = 0;
+    }
     if(rdma_enable_hybrid == 1) { 
         /* The zero-copy bcast design is disabled when 
          * hybrid is used */ 
@@ -220,8 +230,13 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
             threshold = MPIDI_CH3I_CM_DEFAULT_ON_DEMAND_THRESHOLD;
         }
 #endif /*defined(RDMA_CM) && !defined(CKPT)*/
+        if (MPIDI_CH3I_Process.has_dpm) {
+            MPL_error_printf("Error: DPM is not supported with Hybrid builds.\n"
+                    "Please reconfigure MVAPICH2 library without --enable-hybrid option.\n");
+            MPIR_ERR_SETFATALANDJUMP(mpi_errno, MPI_ERR_OTHER, "**fail");
+        }
     } 
-#endif
+#endif /* #ifdef _ENABLE_UD_ */
 
     value = getenv("MV2_USE_XRC");
     if (value) {
@@ -244,6 +259,8 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
                 /* Enable on-demand */
                 threshold = 0;
             }
+            /* RGET is not supporpted with XRC. Use RPUT by default */
+            rdma_rndv_protocol = MV2_RNDV_PROTOCOL_RPUT;
         }
 #else
         if (atoi(value)) {
@@ -258,7 +275,12 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
     if (((value = getenv("MV2_USE_RDMA_CM")) != NULL
          || (value = getenv("MV2_USE_IWARP_MODE")) != NULL)
         && atoi(value) && !dpm) {
+#if defined (ROMIO_IME)
+        PRINT_INFO((pg_rank == 0), "Error: IME FS does not work with RDMA CM. "
+                                   "Proceeding without RDMA support.\n");
+#else
         MPIDI_CH3I_Process.cm_type = MPIDI_CH3I_CM_RDMA_CM;
+#endif
 #ifdef _ENABLE_XRC_
         USE_XRC = 0;
         value = getenv("MV2_USE_XRC");
@@ -269,8 +291,6 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
             }
         }
 #endif
-    } else {
-        rdma_cm_get_hca_type(&mv2_MPIDI_CH3I_RDMA_Process);
     }
 #endif /* defined(RDMA_CM) */
 
@@ -459,6 +479,37 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
                 }
                 break;
         }
+#if defined(RDMA_CM)
+    } else {
+        /* If SMP_ONLY, we need to get the HCA type */
+        rdma_cm_get_hca_type(&mv2_MPIDI_CH3I_RDMA_Process);
+#endif /*defined(RDMA_CM)*/
+    }
+
+    if ((value = getenv("MV2_RNDV_PROTOCOL")) != NULL) {
+        if (strncmp(value, "RPUT", 4) == 0) {
+            rdma_rndv_protocol = MV2_RNDV_PROTOCOL_RPUT;
+        } else if (strncmp(value, "RGET", 4) == 0) {
+            rdma_rndv_protocol = MV2_RNDV_PROTOCOL_RGET;
+        } else {
+            rdma_rndv_protocol = MV2_RNDV_PROTOCOL_R3;
+        }
+    }
+    if ((value = getenv("MV2_SMP_RNDV_PROTOCOL")) != NULL) {
+        if (strncmp(value, "RPUT", 4) == 0) {
+            smp_rndv_protocol = MV2_RNDV_PROTOCOL_RPUT;
+        } else if (strncmp(value, "RGET", 4) == 0) {
+            smp_rndv_protocol = MV2_RNDV_PROTOCOL_RGET;
+        } else if (strncmp(value, "R3", 2) == 0) {
+            smp_rndv_protocol = MV2_RNDV_PROTOCOL_R3;
+        } else {
+            MPL_usage_printf("MV2_SMP_RNDV_PROTOCOL "
+                    "must be one of: RPUT, RGET, R3\n");
+            smp_rndv_protocol = rdma_rndv_protocol;
+        }
+    }
+    if ((value = getenv("MV2_RNDV_IMMEDIATE")) != NULL) {
+        rdma_rndv_immediate = !!atoi(value);
     }
 #if defined(CKPT)
 #if defined(DISABLE_PTMALLOC)
@@ -484,7 +535,10 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
         MPIU_Free(conn_info);
     }
 
-    mpi_errno = MV2_collectives_arch_init(mv2_MPIDI_CH3I_RDMA_Process.heterogeneity);
+
+    struct coll_info colls_arch_hca[colls_max];
+
+    mpi_errno = MV2_collectives_arch_init(mv2_MPIDI_CH3I_RDMA_Process.heterogeneity, colls_arch_hca);
     if (mpi_errno != MPI_SUCCESS) {
         MPIR_ERR_POP(mpi_errno);
     }
@@ -538,7 +592,7 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
         mv2_show_env_info = atoi(value);
     }
     if (pg_rank == 0 && mv2_show_env_info) {
-        mv2_print_env_info(&mv2_MPIDI_CH3I_RDMA_Process);
+        mv2_print_env_info(&mv2_MPIDI_CH3I_RDMA_Process, colls_arch_hca);
     }
 
 #if defined(_MCST_SUPPORT_)
@@ -548,7 +602,7 @@ int MPIDI_CH3_Init(int has_parent, MPIDI_PG_t * pg, int pg_rank)
         srand(time(NULL) * pg_rank);
 
         /* initialize comm table */
-        for (p = 0; p <= MV2_MCAST_MAX_COMMS; p++) {
+        for (p = 0; p < MV2_MCAST_MAX_COMMS; p++) {
             comm_table[p] = NULL;
         }
         /* init mcast context */
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_isendv.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_isendv.c
index e6f9050..0039500 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_isendv.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_isendv.c
@@ -29,12 +29,8 @@ static inline int update_request(MPID_Request* sreq, MPL_IOV* iov, int count, in
     MPIDI_STATE_DECL(MPID_STATE_UPDATE_REQUEST);
     MPIDI_FUNC_ENTER(MPID_STATE_UPDATE_REQUEST);
     int mpi_errno = MPI_SUCCESS;
-    int i = 0;
 
-    for (i = 0; i < count; i++)
-    {
-        sreq->dev.iov[i] = iov[i];
-    }
+    MPIU_Memcpy(sreq->dev.iov, iov, count * sizeof(MPL_IOV));
 
     if (offset == 0)
     {
@@ -93,7 +89,10 @@ static inline int MPIDI_CH3_SMP_iSendv(MPIDI_VC_t * vc,
     MPIDI_STATE_DECL(MPID_STATE_MPIDI_CH3_SMP_ISENDV);
     MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3_SMP_ISENDV);
     int mpi_errno = MPI_SUCCESS;
-    DEBUG_PRINT("Entering %s\n", FUNCNAME);
+
+    PRINT_DEBUG(DEBUG_SHM_verbose>1,
+            "dst: %d, sreq: %p, niov: %d, iov[0].buf: %p, iov[0].len: %d\n",
+            vc->pg_rank, sreq, n_iov, iov[0].MPL_IOV_BUF, iov[0].MPL_IOV_LEN);
 
     /* Connection already formed.  If send queue is empty attempt to send data,
      * queuing any unsent data. */
@@ -205,8 +204,11 @@ int MPIDI_CH3_iSendv(MPIDI_VC_t * vc, MPID_Request * sreq, MPL_IOV * iov,
     }
 
 #ifdef  _ENABLE_UD_
+if(rdma_enable_hybrid)
+{
     int len;
     Calculate_IOV_len(iov, n_iov, len);
+}
 #endif 
 
     /*CM code*/
@@ -247,7 +249,7 @@ int MPIDI_CH3_iSendv(MPIDI_VC_t * vc, MPID_Request * sreq, MPL_IOV * iov,
         
         if (pkt_len > MRAIL_MAX_EAGER_SIZE
 #ifdef _ENABLE_UD_
-         || (!(vc->mrail.state & MRAILI_RC_CONNECTED) && pkt_len > MRAIL_MAX_UD_SIZE)
+         || (rdma_enable_hybrid && (!(vc->mrail.state & MRAILI_RC_CONNECTED) && pkt_len > MRAIL_MAX_UD_SIZE))
 #endif
         ) {
             MPIU_Memcpy(sreq->dev.iov, iov, n_iov * sizeof(MPL_IOV));
@@ -304,7 +306,7 @@ int MPIDI_CH3_iSendv(MPIDI_VC_t * vc, MPID_Request * sreq, MPL_IOV * iov,
 
         if (pkt_len > MRAIL_MAX_EAGER_SIZE
 #ifdef _ENABLE_UD_
-         || (!(vc->mrail.state & MRAILI_RC_CONNECTED) && pkt_len > MRAIL_MAX_UD_SIZE)
+         || (rdma_enable_hybrid && (!(vc->mrail.state & MRAILI_RC_CONNECTED) && pkt_len > MRAIL_MAX_UD_SIZE))
 #endif
         ) {
             MPIU_Memcpy(sreq->dev.iov, iov, n_iov * sizeof(MPL_IOV));
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsg.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsg.c
index 312f88f..691d6d6 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsg.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsg.c
@@ -194,12 +194,16 @@ int MPIDI_CH3_iStartMsg(MPIDI_VC_t * vc, void *pkt, MPIDI_msg_sz_t pkt_sz,
             /* TODO: Create an appropriate error message based on the value of errno
              * */
             sreq->status.MPI_ERROR = MPI_ERR_INTERN;
+            PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                    "Enqueue send to rank: %d, sreq: %p, type: %d, ch.reqtype: %d\n",
+                    vc->pg_rank, sreq, MPIDI_Request_get_type(sreq), sreq->ch.reqtype);
         }
     } else {
-        MPIDI_DBG_PRINTF((55, FCNAME,
-                          "send in progress, request enqueued"));
         sreq = create_request(pkt, pkt_sz, 0);
         MPIDI_CH3I_SendQ_enqueue(vc, sreq);
+        PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                "Eqnueue send to rank: %d, sreq: %p, type: %d, ch.reqtype: %d\n",
+                vc->pg_rank, sreq, MPIDI_Request_get_type(sreq), sreq->ch.reqtype);
     }
 
   fn_exit:
@@ -264,9 +268,7 @@ int MPIDI_CH3_SMP_iStartMsg(MPIDI_VC_t * vc, void *pkt,
 #endif  // CKPT
         if (nb != pkt_sz) 
         {
-            DEBUG_PRINT("send delayed, request enqueued\n");
             sreq = create_request(pkt, pkt_sz, nb);
-
             if(pkt_header->type == MPIDI_CH3_PKT_RNDV_R3_DATA)
             { 
                 sreq->ch.reqtype = REQUEST_RNDV_R3_HEADER;
@@ -274,6 +276,10 @@ int MPIDI_CH3_SMP_iStartMsg(MPIDI_VC_t * vc, void *pkt,
 
             MPIDI_CH3I_SMP_SendQ_enqueue_head(vc, sreq);
             vc->smp.send_active = sreq;
+
+            PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                    "send to %d delayed, request enqueued: %p, type: %d, pkt_sz: %d, ch.reqtype: %d\n",
+                    vc->pg_rank, sreq, MPIDI_Request_get_type(sreq), pkt_sz, sreq->ch.reqtype);
         }
 #if defined(DEBUG)
         else
@@ -282,13 +288,15 @@ int MPIDI_CH3_SMP_iStartMsg(MPIDI_VC_t * vc, void *pkt,
         }
 #endif /* defined(DEBUG) */
     } else {
-        MPIDI_DBG_PRINTF((55, FCNAME,
-                          "send in progress, request enqueued"));
         sreq = create_request(pkt, pkt_sz, 0);
-        if(pkt_header->type == MPIDI_CH3_PKT_RNDV_R3_DATA)
-            sreq->ch.reqtype = REQUEST_RNDV_R3_HEADER; 
+        if(pkt_header->type == MPIDI_CH3_PKT_RNDV_R3_DATA) {
+            sreq->ch.reqtype = REQUEST_RNDV_R3_HEADER;
+        }
 
         MPIDI_CH3I_SMP_SendQ_enqueue(vc, sreq);
+        PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                "send to %d delayed, request enqueued: %p, type: %d, pkt_sz: %d, ch.reqtype: %d\n",
+                vc->pg_rank, sreq, MPIDI_Request_get_type(sreq), pkt_sz, sreq->ch.reqtype);
 #ifdef CKPT  
 		MPIDI_CH3I_MRAILI_Pkt_comm_header* p = (MPIDI_CH3I_MRAILI_Pkt_comm_header*)pkt;
 		if( p->type >= MPIDI_CH3_PKT_CM_SUSPEND && 
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsgv.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsgv.c
index d2f2fa7..2f9f2b8 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsgv.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartmsgv.c
@@ -55,10 +55,8 @@ static inline MPID_Request * create_request(MPL_IOV * iov, int iov_count,
     sreq->kind = MPID_REQUEST_SEND;
     MV2_INC_NUM_POSTED_SEND();
 
-    for (i = 0; i < iov_count; i++)
-    {
-        sreq->dev.iov[i] = iov[i];
-    }
+    MPIU_Memcpy(sreq->dev.iov, iov, iov_count * sizeof(MPL_IOV));
+
     if (iov_offset == 0)
     {
 	/*
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartrndvmsg.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartrndvmsg.c
index a03e6c2..2d0b558 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartrndvmsg.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_istartrndvmsg.c
@@ -61,13 +61,7 @@ static inline void MPIDI_CH3_Prepare_rndv(MPIDI_VC_t *vc, MPID_Request *sreq)
     }
 #endif
 
-    if (SMP_INIT && vc->smp.local_nodes >= 0) { 
-        sreq->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
-        sreq->mrail.d_entry = NULL;
-    } else 
-    {
-        MPIDI_CH3I_MRAIL_Prepare_rndv(vc, sreq);
-    }
+    MPIDI_CH3I_MRAIL_Prepare_rndv(vc, sreq);
 
 #if defined(_ENABLE_CUDA_) && defined(HAVE_CUDA_IPC)
 fn_exit:
@@ -104,6 +98,11 @@ int MPIDI_CH3_iStartRndvMsg(MPIDI_VC_t * vc,
            write */
         MPIDI_CH3_Prepare_rndv(vc, sreq);
         MPIDI_CH3I_MRAIL_SET_PKT_RNDV(rndv_pkt, sreq);
+
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                "Sending RTS to: %d, sreq: %08x, protocol: %d, buf: %p, rndv_buf_alloc: %d\n",
+                vc->pg_rank, sreq, sreq->mrail.protocol, sreq->mrail.rndv_buf, sreq->mrail.rndv_buf_alloc);
+
         if(1 == sreq->mrail.rndv_buf_alloc) {
             MPIDI_CH3I_MRAIL_REVERT_RPUT(sreq);
             if (MV2_RNDV_PROTOCOL_RGET == rndv_pkt->rndv.protocol) {
@@ -127,7 +126,8 @@ int MPIDI_CH3_iStartRndvMsg(MPIDI_VC_t * vc,
             MPID_Request_release(send_req);
         }
     } else {
-        MPIDI_DBG_PRINTF((55, FCNAME, "send queue not empty, enqueuing"));
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                "Enqueuing RNDV msg to rank %d, sreq: %08x\n", vc->pg_rank, sreq);
         MPIDI_CH3I_SendQ_enqueue(vc, sreq);
     }
 
@@ -314,7 +314,11 @@ int MPIDI_CH3_iStartGetRndv(MPIDI_VC_t * vc,
            sizeof(MPL_IOV) * num_control);
 
     MPIDI_CH3_Prepare_rndv(vc, sreq);
-    MPIDI_CH3I_MRAIL_REVERT_RPUT(sreq);
+    if (IS_VC_SMP(vc)) {
+        sreq->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
+    } else {
+        sreq->mrail.protocol = MV2_RNDV_PROTOCOL_RPUT;
+    }
 
 #ifdef _ENABLE_UD_
     if(rdma_enable_hybrid && sreq->mrail.protocol == MV2_RNDV_PROTOCOL_UD_ZCOPY) {
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_progress.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_progress.c
index 512b927..68c8deb 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_progress.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_progress.c
@@ -56,6 +56,8 @@ do {                                                          \
 #define MAX_PROGRESS_HOOKS 4
 long int mv2_num_posted_send = 0;
 long int mv2_unexp_msg_recv  = 0;
+long int mv2_num_posted_send;
+long int mv2_unexp_msg_recv;
 
 typedef int (*progress_func_ptr_t) (int* made_progress);
 
@@ -1442,7 +1444,11 @@ static int handle_read_individual(MPIDI_VC_t* vc, vbuf* buffer, int* header_type
                 PRINT_DEBUG(DEBUG_CM_verbose>0, "NOOP Received, RDMA CM is setting the proper status on the client side for multirail.\n");
                 if (mv2_use_eager_fast_send &&
                     !(SMP_INIT && (vc->smp.local_nodes >= 0))) {
-                    vc->eager_fast_fn = mv2_eager_fast_send;
+                    if (likely(rdma_use_coalesce)) {
+                        vc->eager_fast_fn = mv2_eager_fast_coalesce_send;
+                    } else {
+                        vc->eager_fast_fn = mv2_eager_fast_send;
+                    }
                 }
             }
 
@@ -1471,25 +1477,25 @@ static int handle_read_individual(MPIDI_VC_t* vc, vbuf* buffer, int* header_type
     case MPIDI_CH3_PKT_ADDRESS:
     case MPIDI_CH3_PKT_ADDRESS_REPLY:
     case MPIDI_CH3_PKT_FLOW_CNTL_UPDATE:
-            DEBUG_PRINT("NOOP received, don't need to proceed\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose>2, "flow control received from: %d\n", vc->pg_rank);
         goto fn_exit;
     case MPIDI_CH3_PKT_PACKETIZED_SEND_DATA:
-            DEBUG_PRINT("Packetized data received, don't need to proceed\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1, "Packetized data received from: %d\n", vc->pg_rank);
             MPIDI_CH3_Packetized_recv_data(vc, buffer);
         goto fn_exit;
     case MPIDI_CH3_PKT_RNDV_R3_DATA:
-            DEBUG_PRINT("R3 data received, don't need to proceed\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1, "R3 data received from: %d\n", vc->pg_rank);
             MPIDI_CH3_Rendezvouz_r3_recv_data(vc, buffer);
         goto fn_exit;
     case MPIDI_CH3_PKT_RNDV_R3_ACK:
             MPIDI_CH3_Rendezvouz_r3_ack_recv(vc, (void*) header);
         goto fn_exit;
     case MPIDI_CH3_PKT_RPUT_FINISH:
-            DEBUG_PRINT("RPUT finish received, don't need to proceed\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1, "RPUT finish received from: %d\n", vc->pg_rank);
             MPIDI_CH3_Rendezvous_rput_finish(vc, (void*) header);
         goto fn_exit;
     case MPIDI_CH3_PKT_RGET_FINISH:
-            DEBUG_PRINT("RGET finish received\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1, "RGET finish received from: %d\n", vc->pg_rank);
             MPIDI_CH3_Rendezvous_rget_send_finish(vc, (void*) header);
         goto fn_exit;
 #ifdef _ENABLE_CUDA_
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_rndvtransfer.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_rndvtransfer.c
index aabeb92..ba8ad1f 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_rndvtransfer.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_rndvtransfer.c
@@ -27,6 +27,12 @@
 
 static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t *, MPID_Request *);
 
+#if defined(_SMP_CMA_)
+static int MPIDI_CH3_CMA_Rendezvous_push(MPIDI_VC_t *, MPID_Request *);
+extern int MPIDI_CH3I_SMP_do_cma_put(MPIDI_VC_t * vc, const void *src, void *dst, ssize_t len);
+extern int MPIDI_CH3I_SMP_do_cma_get(MPIDI_VC_t * vc, const void *src, void *dst, ssize_t len);
+#endif
+
 MPIDI_VC_t *flowlist;
 
 #undef DEBUG_PRINT
@@ -94,6 +100,11 @@ int MPIDI_CH3_Prepare_rndv_cts(MPIDI_VC_t * vc,
     }
 #endif
 
+    if (IS_VC_SMP(vc) && cts_pkt->type == MPIDI_CH3_PKT_RMA_RNDV_CLR_TO_SEND) {
+        rreq->mrail.protocol   = MV2_RNDV_PROTOCOL_R3;
+        cts_pkt->rndv.protocol = MV2_RNDV_PROTOCOL_R3;
+    }
+
     switch (rreq->mrail.protocol) {
     case MV2_RNDV_PROTOCOL_R3:
         {
@@ -117,7 +128,6 @@ int MPIDI_CH3_Prepare_rndv_cts(MPIDI_VC_t * vc,
             mpi_errno = -1;
             break;
         }
-        break;
 #ifdef _ENABLE_UD_
     case MV2_RNDV_PROTOCOL_UD_ZCOPY:
         {
@@ -373,7 +383,6 @@ int MPIDI_CH3_Rendezvous_push(MPIDI_VC_t * vc, MPID_Request * sreq)
 #endif
         && vc->smp.local_nodes != g_smpi.my_local_id)
     {
-        MPIU_Assert(sreq->mrail.protocol == MV2_RNDV_PROTOCOL_R3);
         MPIDI_CH3_SMP_Rendezvous_push(vc, sreq);
         return MPI_SUCCESS;
     }
@@ -406,6 +415,79 @@ int MPIDI_CH3_Rendezvous_push(MPIDI_VC_t * vc, MPID_Request * sreq)
     return MPI_SUCCESS;
 }
 
+#if defined(_SMP_CMA_)
+#undef FUNCNAME
+#define FUNCNAME MPIDI_CH3_CMA_Rendezvous_push
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+static int MPIDI_CH3_CMA_Rendezvous_push(MPIDI_VC_t * vc,
+                                                MPID_Request * sreq)
+{
+    int mpi_errno = MPI_SUCCESS;
+    int complete = 0, rail = -1;
+    void *src, *dst;
+    ssize_t len, offset;
+    int type = MPIDI_Request_get_type(sreq);
+    int my_lrank = MPIDI_Process.my_pg->ch.local_process_id;
+
+    MPIDI_STATE_DECL(MPID_STATE_MPIDI_CH3I_CMA_RNDV_PUSH);
+    MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3I_CMA_RNDV_PUSH);
+
+    PRINT_DEBUG(DEBUG_RNDV_verbose>2,
+            "req type: %d, protocol: %d, partner_id: %08x, iov count: %d, offset %llu, len: %llu\n", 
+            type, sreq->mrail.protocol, sreq->mrail.partner_id, sreq->dev.iov_count,
+            sreq->dev.iov_offset, sreq->dev.iov[0].MPL_IOV_LEN);
+
+    /* Non-contig sends are handled using the R3 protocol */
+    MPIU_Assert(sreq->dev.iov_count == 1);
+    MPIU_Assert(sreq->mrail.protocol == MV2_RNDV_PROTOCOL_RPUT ||
+                sreq->mrail.protocol == MV2_RNDV_PROTOCOL_RGET );
+
+    if (sreq->mrail.protocol == MV2_RNDV_PROTOCOL_RPUT) {
+        src = sreq->dev.iov[0].MPL_IOV_BUF;
+        len = sreq->dev.iov[0].MPL_IOV_LEN;
+        dst = sreq->mrail.remote_addr;
+
+        mpi_errno = MPIDI_CH3I_SMP_do_cma_put(vc, src, dst, len);
+        if (MPI_SUCCESS != mpi_errno) {
+            vc->ch.state = MPIDI_CH3I_VC_STATE_FAILED;
+            sreq->status.MPI_ERROR = MPI_ERR_INTERN;
+            MPID_Request_complete(sreq);
+            return mpi_errno;
+        }
+
+        MPIDI_CH3U_Handle_send_req(vc, sreq, &complete);
+        MRAILI_RDMA_Put_finish(vc, sreq, rail);
+        sreq->mrail.nearly_complete = 1;
+    } else if (sreq->mrail.protocol == MV2_RNDV_PROTOCOL_RGET) {
+        dst = sreq->dev.iov[0].MPL_IOV_BUF;
+        len = sreq->dev.iov[0].MPL_IOV_LEN;
+        src = sreq->mrail.remote_addr;
+
+        mpi_errno = MPIDI_CH3I_SMP_do_cma_get(vc, src, dst, len);
+        if (MPI_SUCCESS != mpi_errno) {
+            vc->ch.state = MPIDI_CH3I_VC_STATE_FAILED;
+            sreq->status.MPI_ERROR = MPI_ERR_INTERN;
+            MPID_Request_complete(sreq);
+            return mpi_errno;
+        }
+
+        sreq->mrail.nearly_complete = 1;
+        sreq->mrail.num_rdma_read_completions = 1;
+        MRAILI_RDMA_Get_finish(vc, sreq, rail);
+    } else {
+         mpi_errno =
+             MPIR_Err_create_code(mpi_errno, MPIR_ERR_FATAL, FCNAME,
+                              __LINE__, MPI_ERR_OTHER, "**notimpl", 0);
+        return mpi_errno;
+    }
+
+fn_exit:
+    MPIDI_FUNC_EXIT(MPID_STATE_MPIDI_CH3I_CMA_RNDV_PUSH);
+    return mpi_errno;
+}
+#endif
+
 #undef FUNCNAME
 #define FUNCNAME MPIDI_CH3_SMP_Rendezvous_push
 #undef FCNAME
@@ -426,6 +508,14 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
     MPIDI_STATE_DECL(MPID_STATE_MPIDI_CH3I_SMP_RNDV_PUSH);
     MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3I_SMP_RNDV_PUSH);
 
+    if (sreq->mrail.protocol != MV2_RNDV_PROTOCOL_R3) {
+#if defined(_SMP_CMA_)
+        if(g_smp_use_cma) {
+            return MPIDI_CH3_CMA_Rendezvous_push(vc, sreq);
+        }
+#endif
+    }
+
     MPIDI_Pkt_init(&pkt_head, MPIDI_CH3_PKT_RNDV_R3_DATA);
     pkt_head.receiver_req_id = sreq->mrail.partner_id;
     MPIDI_VC_FAI_send_seqnum(vc, seqnum);
@@ -480,6 +570,11 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
 
 #endif
 
+    PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+            "Sending R3 Data to %d, sreq: %08x, partner: %08x, niov: %d, cma: %p, limic: %p\n",
+            vc->pg_rank, sreq, sreq->mrail.partner_id, sreq->dev.iov_count,
+            pkt_head.csend_req_id, pkt_head.send_req_id);
+
     mpi_errno = MPIDI_CH3_iStartMsg(vc, &pkt_head,
                                     sizeof(MPIDI_CH3_Pkt_rndv_r3_data_t),
                                     &send_req);
@@ -507,7 +602,7 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
     }
 #endif
 
-    DEBUG_PRINT("r3 sent req is %p\n", sreq);
+    PRINT_DEBUG(DEBUG_RNDV_verbose>1, "R3 Data sent to %d, sreq: %08x\n", vc->pg_rank, sreq);
     if (MPIDI_CH3I_SMP_SendQ_empty(vc)) {
 #if defined(_ENABLE_CUDA_)
         if (rdma_enable_cuda && s_smp_cuda_pipeline) {
@@ -517,9 +612,10 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
 
         vc->smp.send_current_pkt_type = SMP_RNDV_MSG;
         for (;;) {
-            DEBUG_PRINT("iov count (sreq): %d, offset %d, len[1] %d\n",
-                        sreq->dev.iov_count, sreq->dev.iov_offset,
-                        sreq->dev.iov[0].MPL_IOV_LEN);
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                    "sreq: %08x, iov count: %d, offset %d, len[0]: %d\n",
+                    sreq, sreq->dev.iov_count, sreq->dev.iov_offset,
+                    sreq->dev.iov[0].MPL_IOV_LEN);
 
             if (vc->smp.send_current_pkt_type == SMP_RNDV_MSG) {
 #if defined(_ENABLE_CUDA_)
@@ -568,6 +664,9 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
             }
 
             if (nb > 0) {
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                        "Wrote R3 data, dest: %d, sreq: %08x, bytes: %d\n",
+                        vc->pg_rank, sreq, nb);
                 if (MPIDI_CH3I_Request_adjust_iov(sreq, nb)) {
 #if defined(_ENABLE_CUDA_)
                     if (iov_isdev) {
@@ -592,6 +691,9 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
                     sreq->mrail.nearly_complete = 1;
                     vc->smp.send_current_pkt_type = SMP_RNDV_MSG_CONT;
                     MV2_INC_NUM_POSTED_SEND();
+                    PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                            "Enqueue next R3 data, dest: %d, sreq: %08x\n",
+                            vc->pg_rank, sreq);
                     break;
                 }
             } else {
@@ -599,6 +701,9 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
                 MPIDI_CH3I_SMP_SendQ_enqueue_head(vc, sreq);
                 vc->smp.send_active = sreq;
                 sreq->mrail.nearly_complete = 1;
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                        "Enqueue R3 data, dest: %d, sreq: %08x\n",
+                        vc->pg_rank, sreq);
                 break;
             }
         }
@@ -606,7 +711,9 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
         sreq->ch.reqtype = REQUEST_RNDV_R3_DATA;
         MPIDI_CH3I_SMP_SendQ_enqueue(vc, sreq);
         sreq->mrail.nearly_complete = 1;
-        DEBUG_PRINT("Enqueue sreq %p", sreq);
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                "Enqueue R3 data, dest: %d, sreq: %08x\n",
+                vc->pg_rank, sreq);
     }
 
     MPIDI_FUNC_EXIT(MPID_STATE_MPIDI_CH3I_SMP_RNDV_PUSH);
@@ -620,7 +727,7 @@ static int MPIDI_CH3_SMP_Rendezvous_push(MPIDI_VC_t * vc,
 void MPIDI_CH3_Rendezvous_r3_push(MPIDI_VC_t * vc, MPID_Request * sreq)
 {
     vbuf *buf;
-    MPL_IOV iov[MPL_IOV_LIMIT + 1];
+    MPL_IOV iov[MPL_IOV_LIMIT + 1] = {0};
     int n_iov;
     int msg_buffered = 0;
     int nb = 0;
@@ -739,6 +846,7 @@ void MPIDI_CH3I_MRAILI_Process_rndv()
     MPID_Request *sreq;
     MPIDI_VC_t *pending_flowlist = NULL, *temp_vc = NULL;
     int need_vc_enqueue = 0;
+    int complete = 0;
 
     MPIDI_STATE_DECL(MPID_STATE_MPIDI_CH3I_PROCESS_RNDV);
     MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3I_PROCESS_RNDV);
@@ -778,12 +886,16 @@ void MPIDI_CH3I_MRAILI_Process_rndv()
             }
 #endif
             MPIDI_CH3_Rendezvous_push(flowlist, sreq);
-            DEBUG_PRINT("[process rndv] after rndv push\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                    "after rndv push, sreq: %08x, nearly_complete: %d, local_complete: %d, remote_complete: %d\n",
+                    sreq, sreq->mrail.nearly_complete, sreq->mrail.local_complete, sreq->mrail.remote_complete);
             if (1 != sreq->mrail.nearly_complete) {
                 break;
             }
-            DEBUG_PRINT
-                ("[process rndv] nearly complete, remove from list\n");
+            PRINT_DEBUG(DEBUG_RNDV_verbose, "sreq: %08x, protocol: %d, "
+                    "nearly_complete: %d, local_complete: %d, remote_complete: %d\n", 
+                    sreq, sreq->mrail.protocol, sreq->mrail.nearly_complete,
+                    sreq->mrail.local_complete, sreq->mrail.remote_complete);
             RENDEZVOUS_DONE(flowlist);
             sreq = flowlist->mrail.sreq_head;
         }
@@ -849,7 +961,7 @@ int MPIDI_CH3_Rendezvouz_r3_recv_data(MPIDI_VC_t * vc, vbuf * buffer)
         int rank;
         UPMI_GET_RANK(&rank);
 
-        DEBUG_PRINT( "[rank %d]get wrong req protocol, req %p, protocol %d\n", rank,
+        DEBUG_PRINT( "[rank %d]get wrong req protocol, req %08x, protocol %d\n", rank,
             rreq, rreq->mrail.protocol);
         MPIU_Assert(MV2_RNDV_PROTOCOL_R3 == rreq->mrail.protocol ||
                MV2_RNDV_PROTOCOL_RPUT == rreq->mrail.protocol);
@@ -970,6 +1082,9 @@ int MPIDI_CH3_Rendezvous_rget_send_finish(MPIDI_VC_t * vc,
     MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3I_RNDV_RGET_SEND_FINISH);
 
     MPID_Request_get_ptr(rget_pkt->sender_req_id, sreq);
+    PRINT_DEBUG(DEBUG_RNDV_verbose,
+            "Received RGET finish, sreq: %08x, protocol: %d, local: %d, remote: %d\n",
+            sreq, sreq->mrail.protocol, sreq->mrail.local_complete, sreq->mrail.remote_complete);
 
 #if defined (_ENABLE_CUDA_) && defined(HAVE_CUDA_IPC)
     cudaError_t cudaerr = cudaSuccess;
@@ -987,6 +1102,7 @@ int MPIDI_CH3_Rendezvous_rget_send_finish(MPIDI_VC_t * vc,
     }
 #endif
 
+    sreq->mrail.remote_complete = UINT32_MAX;
     if (!MPIDI_CH3I_MRAIL_Finish_request(sreq)) {
         return MPI_SUCCESS;
     }
@@ -1213,6 +1329,8 @@ int MPIDI_CH3_Rendezvous_rput_finish(MPIDI_VC_t * vc,
     MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3I_RNDV_RPUT_FINISH);
 
     MPID_Request_get_ptr(rf_pkt->receiver_req_id, rreq);
+    PRINT_DEBUG(DEBUG_RNDV_verbose, "Received RPUT finish, rreq: %08x, protocol: %d, local: %d, remote: %d\n",
+            rreq, rreq->mrail.protocol, rreq->mrail.local_complete, rreq->mrail.remote_complete);
 
 #if defined(_ENABLE_CUDA_)
     if (rdma_enable_cuda && rreq->mrail.cuda_transfer_mode != NONE 
@@ -1223,6 +1341,14 @@ int MPIDI_CH3_Rendezvous_rput_finish(MPIDI_VC_t * vc,
     } else 
 #endif
     {
+        if (IS_VC_SMP(vc)) {
+            rreq->mrail.remote_complete = UINT32_MAX;
+        } else {
+            rreq->mrail.remote_complete++;
+            if (rreq->mrail.remote_complete == rdma_num_rails) {
+                rreq->mrail.remote_complete = UINT32_MAX;
+            }
+        }
         if (!MPIDI_CH3I_MRAIL_Finish_request(rreq))
         {
             return MPI_SUCCESS;
@@ -1239,7 +1365,7 @@ int MPIDI_CH3_Rendezvous_rput_finish(MPIDI_VC_t * vc,
     MPIDI_CH3I_CR_req_dequeue(rreq);
 #endif /* defined(CKPT) */
 
-    if (rreq->mrail.remote_addr == NULL) {  
+    if (rreq->mrail.remote_addr == NULL) {
         MPIDI_CH3I_MRAILI_RREQ_RNDV_FINISH(rreq);
     }
 
@@ -1252,6 +1378,7 @@ int MPIDI_CH3_Rendezvous_rput_finish(MPIDI_VC_t * vc,
                                  __LINE__, MPI_ERR_OTHER, "**fail", 0);
     }
 
+    PRINT_DEBUG(DEBUG_RNDV_verbose, "rreq: %08x, complete: %d\n", rreq, complete);
     if (complete)
     {
         vc->ch.recv_active = NULL;
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_smp_progress.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_smp_progress.c
index e314213..9ffc61d 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_smp_progress.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_smp_progress.c
@@ -186,7 +186,7 @@ size_t g_size_pool = 0;
 /* SMP user parameters */
  
 int g_smp_eagersize;
-size_t s_smpi_length_queue;
+size_t s_smp_queue_length;
 int s_smp_num_send_buffer;
 int s_smp_batch_size;
 int s_smp_block_size;
@@ -656,14 +656,19 @@ static inline int MPIDI_CH3I_SMP_Process_header(MPIDI_VC_t* vc, MPIDI_CH3_Pkt_t*
 #if defined(_SMP_CMA_)
         }
 #endif
-    vc->smp.recv_current_pkt_type = SMP_RNDV_MSG;
+        vc->smp.recv_current_pkt_type = SMP_RNDV_MSG;
 
-    MPID_Request* rreq = NULL;
+        MPID_Request* rreq = NULL;
         MPID_Request_get_ptr(((MPIDI_CH3_Pkt_rndv_r3_data_t*) pkt)->receiver_req_id, rreq);
-    PRINT_DEBUG(DEBUG_SHM_verbose>1, "R3 data received, don't need to proceed\n");
-    vc->smp.recv_active = rreq;
-    goto fn_exit;
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1, "R3 data received from: %d, rreq: %08x\n", vc->pg_rank, rreq);
+        vc->smp.recv_active = rreq;
+        goto fn_exit;
+    } else if (pkt->type == MPIDI_CH3_PKT_RPUT_FINISH) {
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1, "RPUT FINISH received from: %d\n", vc->pg_rank);
+        MPIDI_CH3_Rendezvous_rput_finish(vc, (MPIDI_CH3_Pkt_rput_finish_t *) pkt);
+        goto fn_exit;
     } else if (pkt->type == MPIDI_CH3_PKT_RGET_FINISH) {
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1, "RGET FINISH received from: %d\n", vc->pg_rank);
         MPIDI_CH3_Rendezvous_rget_send_finish(vc, (MPIDI_CH3_Pkt_rget_finish_t *) pkt);
         goto fn_exit;
     }
@@ -769,6 +774,9 @@ int MPIDI_CH3I_SMP_write_progress(MPIDI_PG_t *pg)
 */
         while (vc->smp.send_active != NULL) {
                 MPID_Request *req = vc->smp.send_active;
+                PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                        "smp send active, vc->rank: %d, req: %08x, type: %d, ch.reqtype: %d\n",
+                        vc->pg_rank, req, MPIDI_Request_get_type(req), req->ch.reqtype);
 
                 if(req->dev.iov_offset >= req->dev.iov_count) {
                     MPIR_ERR_SETFATALANDJUMP1(mpi_errno, MPI_ERR_OTHER, "**fail",
@@ -847,10 +855,13 @@ int MPIDI_CH3I_SMP_write_progress(MPIDI_PG_t *pg)
                 MPIR_ERR_POP(mpi_errno);
             }
 
-            PRINT_DEBUG(DEBUG_SHM_verbose>1, "shm_writev returned %d", nb);
+            PRINT_DEBUG(DEBUG_SHM_verbose>1, "req: %p, shm_writev returned %d\n", req, nb);
 
             if (nb > 0)
             {
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                        "Wrote R3 data, dest: %d, req: %08x, bytes: %d\n",
+                        vc->pg_rank, req, nb);
                     if (MPIDI_CH3I_Request_adjust_iov(req, nb))
                     {
                         /* Write operation complete */
@@ -875,8 +886,9 @@ int MPIDI_CH3I_SMP_write_progress(MPIDI_PG_t *pg)
 							  if( !MPIDI_CH3I_SMP_SendQ_empty(vc) ){
                             	  MPIDI_CH3I_SMP_SendQ_dequeue(vc);
 							  }
-                              PRINT_DEBUG(DEBUG_SHM_verbose>1, "Dequeue request from sendq %p, now head %p\n",
-                                req, vc->smp.sendq_head);
+                              PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                                      "Dequeue request from sendq: %08x, now head %08x\n",
+                                      req, vc->smp.sendq_head);
 #ifdef CKPT
 						      MPIDI_CH3I_MRAILI_Pkt_comm_header* p = 
 								 (MPIDI_CH3I_MRAILI_Pkt_comm_header*)(&(req->dev.pending_pkt));
@@ -972,8 +984,8 @@ int MPIDI_CH3I_SMP_read_progress (MPIDI_PG_t* pg)
 
 #if defined(_SMP_CMA_)
     struct cma_header c_header;
-#else                                                                                                                       
-    int c_header;                                                                                                            
+#else
+    int c_header;
 #endif
 
     int use_limic = 0;
@@ -1017,6 +1029,8 @@ int MPIDI_CH3I_SMP_read_progress (MPIDI_PG_t* pg)
                 use_cma = 0;
                 use_limic = 0;
 
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1, "vc rank: %d, pkt_head: %p, limic: %d, cma: %d\n",
+                                                   vc->pg_rank, pkt_head, use_limic, use_cma);
                 MPIR_T_PVAR_COUNTER_INC(MV2, mv2_smp_read_progress_poll_success, 1);
                 mpi_errno = MPIDI_CH3I_SMP_Process_header(vc, pkt_head, &index, &l_header, &c_header,
                         &use_limic, &use_cma);
@@ -1036,6 +1050,10 @@ int MPIDI_CH3I_SMP_read_progress (MPIDI_PG_t* pg)
 
         if (vc->smp.recv_active)
         {
+            struct MPID_Request * req = vc->smp.recv_active;
+            PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                    "smp recv active, rank: %d, req: %08x, type: %d, ch.reqtype: %d, pkt_type: %d\n",
+                    vc->pg_rank, req, MPIDI_Request_get_type(req), req->ch.reqtype, vc->smp.recv_current_pkt_type);
             poll_flag = 1;
 #if defined(_ENABLE_CUDA_)
             if (rdma_enable_cuda && s_smp_cuda_pipeline) {
@@ -1121,6 +1139,9 @@ int MPIDI_CH3I_SMP_read_progress (MPIDI_PG_t* pg)
                     vc->smp.recv_active->dev.iov[vc->smp.recv_active->dev.iov_offset + 1].MPL_IOV_LEN, nb);
 
             if (nb > 0) {
+                PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                        "Read %d bytes from rank: %d, req: %08x, cma: %d, limic: %d\n",
+                        nb, vc->pg_rank, vc->smp.recv_active, use_cma, use_limic);
                 if (MPIDI_CH3I_Request_adjust_iov(vc->smp.recv_active, nb)) {
 #if defined(_ENABLE_CUDA_)
                     if (iov_isdev
@@ -1225,7 +1246,7 @@ int MPIDI_CH3I_SMP_read_progress (MPIDI_PG_t* pg)
                         vc->smp.recv_current_pkt_type = SMP_RNDV_MSG_CONT;
 
                         vc->smp.use_limic = 0;
-                        vc->smp.use_cma = 0;
+                        vc->smp.use_cma   = 0;
 #if defined(_SMP_CMA_)
                         if (use_cma) {
                             vc->smp.use_cma = 1;
@@ -1578,7 +1599,7 @@ void MPIDI_CH3I_set_smp_only()
             return;
         }
         g_smpi.only_one_device = 1;
-        SMP_ONLY = 1;
+        SMP_ONLY = 0;
     }
 }
 
@@ -1854,9 +1875,9 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
 #if defined(_SMP_CMA_)
     size_t cma_test_buffer_offset;
 #endif /* defined(_SMP_CMA_) */
-#if defined(_X86_64_)
+#if defined(__x86_64__)
     volatile char tmpchar ATTRIBUTE((unused));
-#endif /* defined(_X86_64_) */
+#endif /* defined(__x86_64__) */
 
     /* Set SMP params based on architecture */
     rdma_set_smp_parameters(&mv2_MPIDI_CH3I_RDMA_Process);
@@ -1886,13 +1907,13 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
     g_smp_eagersize = g_smp_eagersize + 1;
 
     PRINT_DEBUG(DEBUG_SHM_verbose>1, "smp eager size %d\n, smp queue length %zu\n",
-                g_smp_eagersize, s_smpi_length_queue);
+                g_smp_eagersize, s_smp_queue_length);
 
-    if (g_smp_eagersize > s_smpi_length_queue / 2) {
+    if (g_smp_eagersize > s_smp_queue_length / 2) {
        MPIR_ERR_SETFATALANDJUMP1(mpi_errno, MPI_ERR_OTHER, "**fail",
            "**fail %s", "MV2_SMP_EAGERSIZE should not exceed half of "
-           "MV2_SMPI_LENGTH_QUEUE. Note that MV2_SMP_EAGERSIZE "
-           "and MV2_SMPI_LENGTH_QUEUE are set in KBytes.");
+           "MV2_SMP_QUEUE_LENGTH. Note that MV2_SMP_EAGERSIZE "
+           "and MV2_SMP_QUEUE_LENGTH are set in KBytes.");
     }
 
     /* Initialize variables before setting up shmem regions */
@@ -1901,7 +1922,7 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
     g_smpi.mmap_ptr = NULL; 
     g_smpi.send_buf_pool_ptr = NULL;
     g_smpi.available_queue_length =
-          (s_smpi_length_queue - g_smp_eagersize - sizeof(size_t));
+          (s_smp_queue_length - g_smp_eagersize - sizeof(size_t));
 
     /* Compute the size of shmem files */
     pid_len = g_smpi.num_local_nodes * sizeof(size_t);
@@ -1916,15 +1937,15 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
 
     g_size_shmem = (SMPI_CACHE_LINE_SIZE + sh_size + pagesize 
           + (g_smpi.num_local_nodes * (g_smpi.num_local_nodes - 1) 
-          * (SMPI_ALIGN(s_smpi_length_queue + pagesize))));
+          * (SMPI_ALIGN(s_smp_queue_length + pagesize))));
 
     MPIR_T_PVAR_LEVEL_INC(MV2, mv2_smp_eager_total_buffer, 
             ((g_smpi.num_local_nodes - 1) 
-             * (SMPI_ALIGN(s_smpi_length_queue + pagesize))));
+             * (SMPI_ALIGN(s_smp_queue_length + pagesize))));
            
     MPIR_T_PVAR_LEVEL_INC(MV2, mv2_smp_eager_avail_buffer, 
             ((g_smpi.num_local_nodes - 1) 
-             * (SMPI_ALIGN(s_smpi_length_queue + pagesize))));
+             * (SMPI_ALIGN(s_smp_queue_length + pagesize))));
 
 #if defined (_ENABLE_CUDA_) && defined(HAVE_CUDA_IPC)
     cu_ipc_len = sizeof(smpi_cu_ipc_attr) * g_smpi.num_local_nodes *
@@ -2079,20 +2100,20 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
         if ( i == g_smpi.my_local_id)
             continue;
         g_smpi_shmem->rqueues_limits_s[i].first = 
-            SMPI_ALIGN(pagesize + (pagesize + s_smpi_length_queue) *
+            SMPI_ALIGN(pagesize + (pagesize + s_smp_queue_length) *
                 (i * (g_smpi.num_local_nodes - 1) + 
                 (g_smpi.my_local_id > i ? (g_smpi.my_local_id - 1) : g_smpi.my_local_id)));
         g_smpi_shmem->rqueues_limits_r[i].first = 
-            SMPI_ALIGN(pagesize + (pagesize + s_smpi_length_queue) * 
+            SMPI_ALIGN(pagesize + (pagesize + s_smp_queue_length) * 
                 (g_smpi.my_local_id * (g_smpi.num_local_nodes - 1) + 
                 (i > g_smpi.my_local_id ? (i - 1): i)));
         g_smpi_shmem->rqueues_limits_s[i].last =
-            SMPI_ALIGN(pagesize + (pagesize + s_smpi_length_queue) * 
+            SMPI_ALIGN(pagesize + (pagesize + s_smp_queue_length) * 
                 (i * (g_smpi.num_local_nodes - 1) + 
                 (g_smpi.my_local_id > i ? (g_smpi.my_local_id - 1) : g_smpi.my_local_id)) +
                 g_smpi.available_queue_length);
         g_smpi_shmem->rqueues_limits_r[i].last =
-            SMPI_ALIGN(pagesize + (pagesize + s_smpi_length_queue) * 
+            SMPI_ALIGN(pagesize + (pagesize + s_smp_queue_length) * 
                 (g_smpi.my_local_id * (g_smpi.num_local_nodes - 1) + 
                 (i > g_smpi.my_local_id ? (i - 1): i)) + 
                 g_smpi.available_queue_length);
@@ -2169,7 +2190,7 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
         MPIDI_CH3I_SHMEM_COLL_Unlink();
     }
 
-#if defined(_X86_64_)
+#if defined(__x86_64__)
     /*
      * Okay, here we touch every page in the shared memory region.
      * We do this to get the pages allocated so that they are local
@@ -2194,7 +2215,7 @@ int MPIDI_CH3I_SMP_init(MPIDI_PG_t *pg)
            }
        }
     }
-#endif /* defined(_X86_64_) */
+#endif /* defined(__x86_64__) */
 
     s_current_ptr = (void **) MPIU_Malloc(sizeof(void *) * g_smpi.num_local_nodes);
     if (!s_current_ptr) {
@@ -3702,6 +3723,9 @@ int mv2_smp_fast_write_contig(MPIDI_VC_t* vc, const void *buf,
         MPIDI_CH3I_SMP_SendQ_enqueue_head(vc, sreq);
         vc->smp.send_active = sreq;
         *sreq_p = sreq;
+        PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                "smp buffer not available, dst: %d, request enqueued: %p, type: %d, ch.reqtype: %d\n",
+                vc->pg_rank, sreq, MPIDI_Request_get_type(sreq), sreq->ch.reqtype);
     }
 
 fn_fail:
@@ -5525,5 +5549,113 @@ void MPIDI_CH3I_SMP_send_comp(void *header,
 
 #endif /* _SMP_LIMIC_ */
 
+#if defined(_SMP_CMA_)
+#undef FUNCNAME
+#define FUNCNAME MPIDI_CH3I_SMP_do_cma_get
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+static pid_t MPIDI_CH3I_SMP_get_pid(MPIDI_VC_t *vc)
+{
+    pid_t pid;
+    MPIU_Assert(IS_VC_SMP(vc));
+    pid = g_smpi_shmem->pid[vc->smp.local_nodes];
+    return pid;
+}
+
+#undef FUNCNAME
+#define FUNCNAME MPIDI_CH3I_SMP_do_cma_get
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+int MPIDI_CH3I_SMP_do_cma_get(MPIDI_VC_t *vc, const void *src, void *dst, ssize_t len)
+{
+    pid_t pid;
+    ssize_t nbytes, total = 0;
+    struct iovec local, remote;
+    int mpi_errno = MPI_SUCCESS;
+
+    local.iov_base = dst;
+    local.iov_len = len;
+    remote.iov_base = (void *)src;
+    remote.iov_len = len;
+
+    MPIDI_STATE_DECL(MPIDI_CH3I_SMP_DO_CMA_GET);
+    MPIDI_FUNC_ENTER(MPIDI_CH3I_SMP_DO_CMA_GET);
+
+    pid = MPIDI_CH3I_SMP_get_pid(vc);
+    PRINT_DEBUG(DEBUG_RNDV_verbose > 0,
+            "CMA read from rank: %d, pid: %ld, src: %p, dst: %p, len: %ld\n",
+            vc->pg_rank, pid, src, dst, len);
+
+    do {
+        total += nbytes = process_vm_readv(pid, &local, 1, &remote, 1, 0);
+        PRINT_DEBUG(DEBUG_RNDV_verbose > 2,
+                "CMA read from rank: %d, nbytes: %ld, len: %ld, remaining: %ld\n",
+                vc->pg_rank, nbytes, len, len - total);
+
+        if (nbytes < 0) {
+            MPIR_ERR_SETFATALANDJUMP1(mpi_errno, MPI_ERR_OTHER,
+                    "**fail", "**fail %s",
+                    "process_vm_readv fail");
+        }
+
+        local.iov_base  += nbytes;
+        local.iov_len   -= nbytes;
+        remote.iov_base += nbytes;
+        remote.iov_len  -= nbytes;
+    } while (total < len);
+
+    MPIDI_FUNC_EXIT(MPIDI_CH3I_SMP_DO_CMA_GET);
+fn_fail:
+    return mpi_errno;
+}
+
+#undef FUNCNAME
+#define FUNCNAME MPIDI_CH3I_SMP_do_cma_get
+#undef FCNAME
+#define FCNAME MPL_QUOTE(FUNCNAME)
+int MPIDI_CH3I_SMP_do_cma_put(MPIDI_VC_t *vc, const void *src, void *dst, ssize_t len)
+{
+    pid_t pid;
+    ssize_t nbytes, total = 0;
+    struct iovec local, remote;
+    int mpi_errno = MPI_SUCCESS;
+
+    local.iov_base = (void *)src;
+    local.iov_len = len;
+    remote.iov_base = dst;
+    remote.iov_len = len;
+
+    MPIDI_STATE_DECL(MPIDI_CH3I_SMP_DO_CMA_PUT);
+    MPIDI_FUNC_ENTER(MPIDI_CH3I_SMP_DO_CMA_PUT);
+
+    pid = MPIDI_CH3I_SMP_get_pid(vc);
+    PRINT_DEBUG(DEBUG_RNDV_verbose > 0,
+            "CMA write to rank: %d, pid: %ld, src: %p, dst: %p, len: %ld\n",
+            vc->pg_rank, pid, src, dst, len);
+
+    do {
+        total += nbytes = process_vm_writev(pid, &local, 1, &remote, 1, 0);
+        PRINT_DEBUG(DEBUG_RNDV_verbose > 2,
+                "CMA write to rank: %d, nbytes: %ld, len: %ld, remaining: %ld\n",
+                vc->pg_rank, nbytes, len, len - total);
+
+        if (nbytes < 0) {
+            MPIR_ERR_SETFATALANDJUMP1(mpi_errno, MPI_ERR_OTHER,
+                    "**fail", "**fail %s",
+                    "process_vm_writev fail");
+        }
+
+        local.iov_base  += nbytes;
+        local.iov_len   -= nbytes;
+        remote.iov_base += nbytes;
+        remote.iov_len  -= nbytes;
+    } while (total < len);
+
+    MPIDI_FUNC_EXIT(MPIDI_CH3I_SMP_DO_CMA_PUT);
+fn_fail:
+    return mpi_errno;
+}
+
+#endif /* _SMP_CMA_ */
 
 /* vi:set sw=4 */
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ch3_win_fns.c b/src/mpid/ch3/channels/mrail/src/rdma/ch3_win_fns.c
index e600032..b48a67c 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ch3_win_fns.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ch3_win_fns.c
@@ -671,10 +671,14 @@ static int MPIDI_CH3I_Win_gather_info(void *base, MPI_Aint size, int disp_unit,
             comm_rank, win_ptr, comm_ptr);
 #endif 
 
+#if !defined(_OSU_MVAPICH_)
+    /* In default MVAPICH2, communicator will be shared among RMA windows if applicable
+     * (see function `win_init`), so no need to free 2-level comm here  */
     if((*win_ptr)->comm_ptr->dev.ch.shmem_coll_ok == 1 && node_comm_ptr != NULL) {
         mpi_errno = free_2level_comm((*win_ptr)->comm_ptr);
         if (mpi_errno) MPIR_ERR_POP(mpi_errno); 
     }
+#endif
 
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/ibv_sharp.c b/src/mpid/ch3/channels/mrail/src/rdma/ibv_sharp.c
index e023a92..dc56125 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/ibv_sharp.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/ibv_sharp.c
@@ -96,8 +96,6 @@ void  mv2_get_sharp_datatype(MPI_Datatype  mpi_datatype, struct
     }
 
     *dt_size_out = dt_size;
-
-    return dt_size;
 }
 
 enum sharp_reduce_op mv2_get_sharp_reduce_op(MPI_Op mpi_op) 
@@ -223,8 +221,7 @@ int mv2_sharp_coll_init(sharp_conf_t *sharp_conf, int rank)
         PRINT_ERROR("SHARP initialization failed. Continuing without SHARP support. Errno: %d (%s) \n", mpi_errno, sharp_coll_strerror(mpi_errno));
         mpi_errno = MPI_ERR_INTERN;
         goto fn_exit;
-    }
-    PRINT_DEBUG(DEBUG_Sharp_verbose, "sharp was initialized successfully \n");
+    } 
 
 fn_exit:
     MPIU_Free(init_spec);
@@ -249,7 +246,7 @@ int sharp_get_hca_name_and_port ()
     dev_list = ibv_get_device_list(&num_devices);
     for(i=0; i<num_devices; i++){
         hca_type = mv2_get_hca_type(dev_list[i]);
-        if(MV2_IS_INTEL_CARD(hca_type) || MV2_IS_QLE_CARD(hca_type)) {
+        if(!MV2_IS_IB_CARD(hca_type)) {
             PRINT_ERROR( "Unable to get the device name, please set MV2_SHARP_HCA_NAME and MV2_SHARP_PORT and rerun the program\n");
             mpi_errno = MPI_ERR_INTERN;
             MPIR_ERR_POP(mpi_errno);
@@ -281,7 +278,9 @@ finished_query:
         MPIR_ERR_POP(mpi_errno);
     }  
 
-    ibv_free_device_list(dev_list);
+    if (dev_list) {
+        ibv_free_device_list(dev_list);
+    }
     return 0;
 #else
     PRINT_ERROR( "Unable to get the device name, please set MV2_SHARP_HCA_NAME and MV2_SHARP_PORT, then rerun the program. ");
@@ -298,14 +297,7 @@ static char * sharp_get_kvs_id ()
     int  i = 0;
     char * id_str = MPIU_Malloc(100);
     MPIU_Memset(id_str, 0, 100);
-    char KVSname[100] = {0};
-    UPMI_KVS_GET_MY_NAME(KVSname, 100); /* set kvsname as job id */
-    for (i = 4; i < 100; i++) {
-        if (KVSname[i] == '_') break; /* format is like kvs_906_storage03.cluster_26667_0 */
-        if (KVSname[i] > 48 && KVSname[i] < 57) {
-            id_str[i-4] = KVSname[i];
-        }
-    }
+    UPMI_KVS_GET_MY_NAME(id_str, 100); /* set kvsname as job id */
     return id_str;
 }
 
@@ -346,7 +338,7 @@ int mv2_setup_sharp_env(sharp_conf_t *sharp_conf, MPI_Comm comm)
     
     /* set kvsname as job id */  
     sharp_conf->jobid = sharp_get_kvs_id();
-    PRINT_DEBUG(DEBUG_Sharp_verbose, "sharp_conf->jobid = %s and dev_list =  %s", sharp_conf->jobid, dev_list); 
+    PRINT_DEBUG(DEBUG_Sharp_verbose>2, "sharp_conf->jobid = %s and dev_list =  %s\n", sharp_conf->jobid, dev_list); 
     
     MPI_Comm_rank(comm, &(sharp_conf->rank));
     MPI_Comm_size(comm, &(sharp_conf->size));
diff --git a/src/mpid/ch3/channels/mrail/src/rdma/mpid_mrail_rndv.c b/src/mpid/ch3/channels/mrail/src/rdma/mpid_mrail_rndv.c
index 330e337..549945b 100644
--- a/src/mpid/ch3/channels/mrail/src/rdma/mpid_mrail_rndv.c
+++ b/src/mpid/ch3/channels/mrail/src/rdma/mpid_mrail_rndv.c
@@ -47,6 +47,9 @@ int MPID_MRAIL_RndvSend (
     MPIDI_STATE_DECL(MPID_STATE_MRAIL_RNDVSEND);
     MPIDI_FUNC_ENTER(MPID_STATE_MRAIL_RNDVSEND);
 	
+    PRINT_DEBUG(DEBUG_RNDV_verbose,
+            "Rndv Send to rank: %d, tag: %d, context: %d, buf: %p, size: %llu, contig: %d\n",
+            rank, tag, comm->context_id + context_offset, buf, data_sz, dt_contig);
     MPIU_DBG_MSG_D(CH3_OTHER,VERBOSE,
 		   "sending rndv RTS, data_sz=" MPIDI_MSG_SZ_FMT, data_sz);
 	    
@@ -95,6 +98,11 @@ int MPID_MRAIL_RndvSend (
 	sreq->dev.OnFinal = 0;
 	mpi_errno = MPIDI_CH3U_Request_load_send_iov(sreq, &sreq->dev.iov[0],
 						     &sreq->dev.iov_count);
+    /* Fallback to R3 for non-contig transfers */
+    if (IS_VC_SMP(vc)) {
+        sreq->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
+        MPIDI_CH3I_MRAIL_FREE_RNDV_BUFFER(sreq);
+    }
 #if defined(_ENABLE_CUDA_)
     if (rdma_enable_cuda && sreq->dev.OnDataAvail == 
                         MPIDI_CH3_ReqHandler_pack_cudabuf) {
@@ -158,6 +166,11 @@ int MPID_MRAIL_RndvRecv (MPIDI_VC_t* vc, MPID_Request* rreq)
     /* A rendezvous request-to-send (RTS) message has arrived.  We need
        to send a CTS message to the remote process. */
     
+    PRINT_DEBUG(DEBUG_RNDV_verbose,
+            "Rndv Recv from rank: %d, tag: %d, context: %d, buf: %p, size: %llu\n",
+            rreq->dev.match.parts.rank, rreq->dev.match.parts.tag,
+            rreq->dev.match.parts.context_id, rreq->dev.user_buf, rreq->dev.recv_data_sz);
+
     if (rreq->dev.recv_data_sz == 0) {
 	MPID_Request_complete(rreq);
     }
@@ -171,7 +184,11 @@ int MPID_MRAIL_RndvRecv (MPIDI_VC_t* vc, MPID_Request* rreq)
 	}
     }
 
-    mpi_errno = MPIDI_CH3_iStartRndvTransfer (vc, rreq);
+    if (MPIDI_CH3_RECV_REQ_IS_READ(rreq)) {
+        mpi_errno = MPIDI_CH3_RecvRndv(vc, rreq);
+    } else {
+        mpi_errno = MPIDI_CH3_iStartRndvTransfer (vc, rreq);
+    }
 
     if (mpi_errno != MPI_SUCCESS) {
 	MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,
diff --git a/src/mpid/ch3/channels/psm/src/ch3_win_fns.c b/src/mpid/ch3/channels/psm/src/ch3_win_fns.c
index 52f70c1..7969630 100644
--- a/src/mpid/ch3/channels/psm/src/ch3_win_fns.c
+++ b/src/mpid/ch3/channels/psm/src/ch3_win_fns.c
@@ -173,13 +173,6 @@ int MPIDI_CH3_SHM_Win_free(MPID_Win ** win_ptr)
             MPIR_ERR_POP(mpi_errno);
 
         MPIU_SHMW_Hnd_finalize(&(*win_ptr)->shm_mutex_segment_handle);
-        /* if node_comm is not comm_self, it is a copy of shmcomm_ptr, let's release it here */
-        MPID_Comm *commself_ptr = NULL;
-        MPID_Comm_get_ptr( MPI_COMM_SELF, commself_ptr );
-        if (node_comm_ptr != commself_ptr) {
-            MPIR_Comm_release((*win_ptr)->node_comm_ptr);
-            (*win_ptr)->node_comm_ptr = NULL;
-        }
     }
 
     /* Free shared memory region for window info */
@@ -687,16 +680,6 @@ static int MPIDI_CH3I_Win_gather_info(void *base, MPI_Aint size, int disp_unit,
     psm_prepost_1sc();
     MPIR_Barrier_impl((*win_ptr)->comm_ptr, &errflag);
 
-    if((*win_ptr)->comm_ptr->dev.ch.shmem_coll_ok == 1 && node_comm_ptr != NULL) {
-        /* make a copy of shmcomm_ptr to be used later for barrier
-         * NOTE: perform SHM-based collective on this communucator may result in undeterministic behavior */
-        MPIR_Comm_copy(node_comm_ptr, node_comm_ptr->local_size, &((*win_ptr)->node_comm_ptr));
-
-        mpi_errno = free_2level_comm((*win_ptr)->comm_ptr);
-        if (mpi_errno) MPIR_ERR_POP(mpi_errno);
-        node_comm_ptr = NULL;
-    }
-
   fn_exit:
     MPIU_CHKLMEM_FREEALL();
     MPIDI_RMA_FUNC_EXIT(MPID_STATE_MPIDI_CH3I_WIN_GATHER_INFO);
@@ -717,7 +700,7 @@ static int MPIDI_CH3I_Win_allocate_shm(MPI_Aint size, int disp_unit, MPID_Info *
     int mpi_errno = MPI_SUCCESS;
     void **base_pp = (void **) base_ptr;
     int i, node_size, node_rank;
-    MPID_Comm *node_comm_ptr;
+    MPID_Comm *node_comm_ptr = NULL;
     MPI_Aint *node_sizes;
     MPIR_Errflag_t errflag = MPIR_ERR_NONE;
     int noncontig = FALSE;
diff --git a/src/mpid/ch3/channels/psm/src/psm_entry.c b/src/mpid/ch3/channels/psm/src/psm_entry.c
index 09220e6..0eeabff 100755
--- a/src/mpid/ch3/channels/psm/src/psm_entry.c
+++ b/src/mpid/ch3/channels/psm/src/psm_entry.c
@@ -20,6 +20,8 @@
 #include <mv2_arch_hca_detect.h>
 #include <upmi.h>
 
+extern int g_mv2_num_cpus;
+
 volatile unsigned int MPIDI_CH3I_progress_completion_count = 0; //ODOT: what is this ?
 volatile int MPIDI_CH3I_progress_blocked = FALSE;
 volatile int MPIDI_CH3I_progress_wakeup_signalled = FALSE;
@@ -171,8 +173,10 @@ static MPID_CommOps comm_fns = {
     split_type
 };
 
-void mv2_print_env_info(void)
+void mv2_print_env_info(struct coll_info *colls_arch_hca)
 {
+    int i = 0;
+
     mv2_arch_type arch_type = MV2_GET_ARCH(g_mv2_arch_hca_type);
     mv2_hca_type hca_type = MV2_GET_HCA(g_mv2_arch_hca_type);
     mv2_cpu_family_type family_type = mv2_get_cpu_family();
@@ -194,10 +198,18 @@ void mv2_print_env_info(void)
             mv2_shm_rndv_thresh);
     fprintf(stderr, "\tHFI Eagersize                  : %d\n",
             mv2_hfi_rndv_thresh);
+    fprintf(stderr, "\t%s                  : %s %s\n", "Tuning Table:", mv2_get_arch_name(colls_arch_hca[0].arch_type), mv2_get_hca_name(colls_arch_hca[0].hca_type));
     fprintf(stderr,
             "---------------------------------------------------------------------\n");
-    fprintf(stderr,
-            "---------------------------------------------------------------------\n");
+
+    if (atoi(getenv("MV2_SHOW_ENV_INFO")) >= 3) {
+        fprintf(stderr, "\nCollective Tuning Tables\n");
+        fprintf(stderr, "\t%-20s %-40s %-40s\n", "Collective", "Architecture", "Interconnect");
+        for(i = 0; i < colls_max; i++) {
+            fprintf(stderr, "\t%-20s %-40s %-40s\n", collective_names[i], mv2_get_arch_name(colls_arch_hca[i].arch_type), mv2_get_hca_name(colls_arch_hca[i].hca_type));
+        }
+        fprintf(stderr, "\n---------------------------------------------------------------------\n");
+    }
 }
 
 #undef FUNCNAME
@@ -212,8 +224,8 @@ mv2_arch_hca_type MV2_get_arch_hca_type(void)
 #if defined(HAVE_LIBIBVERBS)
     int num_devices = 0, i;
     struct ibv_device **dev_list = NULL;
-    mv2_arch_type arch_type = mv2_get_arch_type();
     mv2_hca_type hca_type = 0;
+    mv2_arch_type arch_type = 0;
     dev_list = ibv_get_device_list(&num_devices);
 
     for(i=0; i<num_devices; i++){
@@ -225,8 +237,16 @@ mv2_arch_hca_type MV2_get_arch_hca_type(void)
     if(i == num_devices)
         hca_type = MV2_HCA_ANY;
 
-    g_mv2_arch_hca_type = (uint64_t)arch_type << 32 | hca_type;
-    ibv_free_device_list(dev_list);
+    arch_type = mv2_get_arch_type();
+    g_mv2_arch_hca_type = arch_type;
+    g_mv2_arch_hca_type <<= 16;
+    g_mv2_arch_hca_type |= hca_type;
+    g_mv2_arch_hca_type <<= 16;
+    g_mv2_arch_hca_type |= g_mv2_num_cpus;
+
+    if (dev_list) {
+        ibv_free_device_list(dev_list);
+    }
 #else
     g_mv2_arch_hca_type = mv2_get_arch_hca_type(NULL);
 #endif
@@ -286,7 +306,8 @@ int psm_doinit(int has_parent, MPIDI_PG_t *pg, int pg_rank)
      * Its ok to pass heterogeneity as 0. We anyway fall-back to the 
      * basic case for PSM */ 
     heterogeneity = !mv2_homogeneous_cluster;
-    mpi_errno = MV2_collectives_arch_init(heterogeneity); 
+    struct coll_info colls_arch_hca[colls_max];
+    mpi_errno = MV2_collectives_arch_init(heterogeneity, colls_arch_hca); 
     if (mpi_errno != MPI_SUCCESS) {
         MPIR_ERR_POP(mpi_errno);
     }
@@ -428,7 +449,7 @@ int psm_doinit(int has_parent, MPIDI_PG_t *pg, int pg_rank)
     psm_other_init(pg);
 
     if(0==pg_rank && g_mv2_show_env_info){
-        mv2_print_env_info();
+        mv2_print_env_info(colls_arch_hca);
     }
 
     mpi_errno = MPIDI_CH3U_Comm_register_destroy_hook(MPIDI_CH3I_comm_destroy, NULL);
diff --git a/src/mpid/ch3/include/mpid_rma_issue.h b/src/mpid/ch3/include/mpid_rma_issue.h
index f5aaf55..61350b8 100644
--- a/src/mpid/ch3/include/mpid_rma_issue.h
+++ b/src/mpid/ch3/include/mpid_rma_issue.h
@@ -229,7 +229,7 @@ static int issue_from_origin_buffer(MPIDI_RMA_Op_t * rma_op, MPIDI_VC_t * vc,
     MPI_Datatype target_datatype;
     MPID_Datatype *target_dtp = NULL, *origin_dtp = NULL;
     int is_origin_contig;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int iovcnt = 0;
     MPID_Request *req = NULL;
     MPI_Aint dt_true_lb;
@@ -1289,7 +1289,7 @@ static int issue_get_op(MPIDI_RMA_Op_t * rma_op, MPID_Win * win_ptr,
     MPID_Request *req = NULL;
     MPIDI_CH3_Ext_pkt_get_derived_t *ext_hdr_ptr = NULL;
     MPI_Aint ext_hdr_sz = 0;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     MPIDI_STATE_DECL(MPID_STATE_ISSUE_GET_OP);
 #if defined(CHANNEL_MRAIL)
     MPI_Aint type_size, origin_type_size;
diff --git a/src/mpid/ch3/include/mpidimpl.h b/src/mpid/ch3/include/mpidimpl.h
index 7f5a61b..94e17f7 100644
--- a/src/mpid/ch3/include/mpidimpl.h
+++ b/src/mpid/ch3/include/mpidimpl.h
@@ -118,6 +118,8 @@ typedef struct MPIDI_PG
     /* Number of processes in the process group */
     int size;
 
+    int is_spawned;
+
     /* VC table.  At present this is a pointer to an array of VC structures. 
        Someday we may want make this a pointer to an array
        of VC references.  Thus, it is important to use MPIDI_PG_Get_vc() 
@@ -450,24 +452,27 @@ extern MPIDI_Process_t MPIDI_Process;
 }
 
 #define MPIDI_REQUEST_TYPE_MASK (0xF << MPIDI_REQUEST_TYPE_SHIFT)
-#define MPIDI_REQUEST_TYPE_SHIFT 4
+#define MPIDI_REQUEST_TYPE_SHIFT 5
 #define MPIDI_REQUEST_TYPE_RECV 0
 #define MPIDI_REQUEST_TYPE_SEND 1
 #define MPIDI_REQUEST_TYPE_RSEND 2
 #define MPIDI_REQUEST_TYPE_SSEND 3
 /* We need a BSEND type for persistent bsends (see mpid_startall.c) */
 #define MPIDI_REQUEST_TYPE_BSEND 4
-#define MPIDI_REQUEST_TYPE_PUT_RECV 5                    /* target is receiving PUT data */
-#define MPIDI_REQUEST_TYPE_GET_RESP 6                    /* target is sending GET response data */
-#define MPIDI_REQUEST_TYPE_ACCUM_RECV 7                  /* target is receiving ACC data */
-#define MPIDI_REQUEST_TYPE_PUT_RECV_DERIVED_DT 8         /* target is receiving derived DT info for PUT data */
-#define MPIDI_REQUEST_TYPE_GET_RECV_DERIVED_DT 9         /* target is receiving derived DT info for GET data */
-#define MPIDI_REQUEST_TYPE_ACCUM_RECV_DERIVED_DT 10      /* target is receiving derived DT info for ACC data */
-#define MPIDI_REQUEST_TYPE_GET_ACCUM_RECV 11             /* target is receiving GACC data */
-#define MPIDI_REQUEST_TYPE_GET_ACCUM_RECV_DERIVED_DT 12  /* target is receiving derived DT info for GACC data */
-#define MPIDI_REQUEST_TYPE_GET_ACCUM_RESP 13             /* target is sending GACC response data */
-#define MPIDI_REQUEST_TYPE_FOP_RECV 14                   /* target is receiving FOP data */
-#define MPIDI_REQUEST_TYPE_FOP_RESP 15                   /* target is sending FOP response data */
+#define MPIDI_REQUEST_TYPE_ISEND 5
+#define MPIDI_REQUEST_TYPE_IRECV 6
+
+#define MPIDI_REQUEST_TYPE_PUT_RECV 7                     /* target is receiving PUT data */
+#define MPIDI_REQUEST_TYPE_GET_RESP 8                     /* target is sending GET response data */
+#define MPIDI_REQUEST_TYPE_ACCUM_RECV 9                   /* target is receiving ACC data */
+#define MPIDI_REQUEST_TYPE_PUT_RECV_DERIVED_DT 10         /* target is receiving derived DT info for PUT data */
+#define MPIDI_REQUEST_TYPE_GET_RECV_DERIVED_DT 11         /* target is receiving derived DT info for GET data */
+#define MPIDI_REQUEST_TYPE_ACCUM_RECV_DERIVED_DT 12       /* target is receiving derived DT info for ACC data */
+#define MPIDI_REQUEST_TYPE_GET_ACCUM_RECV 13              /* target is receiving GACC data */
+#define MPIDI_REQUEST_TYPE_GET_ACCUM_RECV_DERIVED_DT 14   /* target is receiving derived DT info for GACC data */
+#define MPIDI_REQUEST_TYPE_GET_ACCUM_RESP 15              /* target is sending GACC response data */
+#define MPIDI_REQUEST_TYPE_FOP_RECV 16                    /* target is receiving FOP data */
+#define MPIDI_REQUEST_TYPE_FOP_RESP 17                    /* target is sending FOP response data */
 
 
 #define MPIDI_Request_get_type(req_)						\
@@ -843,7 +848,7 @@ typedef struct MPIDI_VC
     int (* eager_fast_fn)(struct MPIDI_VC* vc, const void * buf, MPIDI_msg_sz_t data_sz,
                             int rank, int tag, MPID_Comm * comm, int context_offset, MPID_Request **sreq_p);
     int (* eager_fast_rfp_fn)(struct MPIDI_VC* vc, const void * buf, MPIDI_msg_sz_t data_sz,
-                            int rank, int tag, MPID_Comm * comm, int context_offset);
+                            int rank, int tag, MPID_Comm * comm, int context_offset, MPID_Request **sreq_p);
 
     /* eager message threshold */
     int eager_max_msg_sz;
@@ -2219,4 +2224,11 @@ int MPIDI_CH3I_Progress_deactivate_hook(int id);
 #define MPIDI_CH3U_Append_pkt_size()
 #endif
 
+#if defined(CHANNEL_MRAIL)
+#define IS_VC_SMP(_vc) \
+    (SMP_INIT && (_vc)->smp.local_nodes >= 0)
+#else
+#define IS_VC_SMP(_vc) (0)
+#endif
+
 #endif /* !defined(MPICH_MPIDIMPL_H_INCLUDED) */
diff --git a/src/mpid/ch3/include/mpidpre.h b/src/mpid/ch3/include/mpidpre.h
index 28aaaa5..bf1fae5 100644
--- a/src/mpid/ch3/include/mpidpre.h
+++ b/src/mpid/ch3/include/mpidpre.h
@@ -423,6 +423,9 @@ typedef struct MPIDI_Request {
     int iov_count;
     size_t iov_offset;
 
+    /* In case of chunked Send, how many chunks have been sent */
+    int chunk_count;
+
     /* OnDataAvail is the action to take when data is now available.
        For example, when an operation described by an iov has 
        completed.  This replaces the MPIDI_CA_t (completion action)
diff --git a/src/mpid/ch3/src/ch3u_eager.c b/src/mpid/ch3/src/ch3u_eager.c
index 358ad29..df170a5 100644
--- a/src/mpid/ch3/src/ch3u_eager.c
+++ b/src/mpid/ch3/src/ch3u_eager.c
@@ -283,6 +283,7 @@ int MPIDI_CH3_EagerContigSend( MPID_Request **sreq_p,
    We may need a nonblocking (cancellable) version of this, which will 
    have a smaller payload.
 */
+
 #undef FUNCNAME
 #define FUNCNAME MPIDI_EagerContigShortSend
 #undef FCNAME
@@ -306,22 +307,17 @@ int MPIDI_CH3_EagerContigShortSend( MPID_Request **sreq_p,
     MPID_Seqnum_t seqnum = 0;
 #endif /* defined(CHANNEL_MRAIL) && defined(MPID_USE_SEQUENCE_NUMBERS) */
     
-    MPIU_DBG_MSG_FMT(CH3_OTHER,VERBOSE,(MPIU_DBG_FDEST,
-       "sending contiguous short eager message, data_sz=" MPIDI_MSG_SZ_FMT,
-					data_sz));
+    /*PRINT_DEBUG(DEBUG_SHM_verbose>1,
+            "sending contiguous short eager message to rank: %d, data_sz: %d, sreq: %p\n",
+            rank, data_sz, sreq);*/
 	    
 #if defined(CHANNEL_MRAIL)
     {
         MPIDI_Comm_get_vc_set_active(comm, rank, &vc);
 
-        if (vc->eager_fast_rfp_fn &&
-            !(unlikely(num_rdma_buffer < 2 ||
-             vc->mrail.rfp.phead_RDMA_send == vc->mrail.rfp.ptail_RDMA_send ||
-             vc->mrail.rfp.RDMA_send_buf[vc->mrail.rfp.phead_RDMA_send].padding == BUSY_FLAG ||
-             ((data_sz + sizeof(MPIDI_CH3_Pkt_eager_send_t)) > MRAIL_MAX_RDMA_FP_SIZE))
-            )) {
-            mpi_errno = vc->eager_fast_rfp_fn(vc, buf, data_sz, rank, 
-				                                tag, comm, context_offset);
+        if (vc->eager_fast_rfp_fn) {
+            mpi_errno = vc->eager_fast_rfp_fn(vc, buf, data_sz, rank,
+				                                tag, comm, context_offset, sreq_p);
         } else {
             mpi_errno = vc->eager_fast_fn(vc, buf, data_sz, rank, 
 				                            tag, comm, context_offset, sreq_p);
@@ -382,6 +378,9 @@ int MPIDI_CH3_EagerContigShortSend( MPID_Request **sreq_p,
          * progress engine is racy.  The start call above is protected by
          * vc CS, but the progress engine is protected by MPIDCOMM.  So
          * we can't just extend the CS type below this point... what's the fix? */
+        PRINT_DEBUG(DEBUG_SHM_verbose>1,
+                "eager send to %d delayed, request enqueued: %p, type: %d ch.reqtype: %d\n",
+                rank, sreq, MPIDI_Request_get_type(sreq), sreq->ch.reqtype);
 	MPIDI_Request_set_seqnum(sreq, seqnum);
 	MPIDI_Request_set_type(sreq, MPIDI_REQUEST_TYPE_SEND);
     }
diff --git a/src/mpid/ch3/src/ch3u_handle_recv_req.c b/src/mpid/ch3/src/ch3u_handle_recv_req.c
index 4b1f72e..17139b1 100644
--- a/src/mpid/ch3/src/ch3u_handle_recv_req.c
+++ b/src/mpid/ch3/src/ch3u_handle_recv_req.c
@@ -61,6 +61,7 @@ int MPIDI_CH3U_Handle_recv_req(MPIDI_VC_t * vc, MPID_Request * rreq, int *comple
     if (!reqFn) {
 #if defined(CHANNEL_MRAIL)
         if(MPIDI_Request_get_type(rreq) != MPIDI_REQUEST_TYPE_RECV
+           && MPIDI_Request_get_type(rreq) != MPIDI_REQUEST_TYPE_IRECV
            && MPIDI_Request_get_type(rreq) != MPIDI_REQUEST_TYPE_ACCUM_RECV
            && MPIDI_Request_get_type(rreq) != MPIDI_REQUEST_TYPE_GET_ACCUM_RECV) {
             MPIR_ERR_SETFATALANDJUMP1(mpi_errno, MPI_ERR_OTHER, "**fail",
@@ -68,7 +69,8 @@ int MPIDI_CH3U_Handle_recv_req(MPIDI_VC_t * vc, MPID_Request * rreq, int *comple
           "MPIDI_Request_get_type(rreq) != MPIDI_REQUEST_TYPE_RECV");
         }
 #else /* defined(CHANNEL_MRAIL) */
-        MPIU_Assert(MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_RECV);
+        MPIU_Assert((MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_RECV) ||
+                    (MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_IRECV));
 #endif /* defined(CHANNEL_MRAIL) */
         mpi_errno = MPID_Request_complete(rreq);
         if (mpi_errno != MPI_SUCCESS) {
@@ -329,7 +331,7 @@ int MPIDI_CH3_ReqHandler_GaccumRecvComplete(MPIDI_VC_t * vc, MPID_Request * rreq
     MPIDI_CH3_Pkt_t upkt;
     MPIDI_CH3_Pkt_get_accum_resp_t *get_accum_resp_pkt = &upkt.get_accum_resp;
     MPID_Request *resp_req;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int iovcnt;
     int is_contig;
     MPI_Datatype basic_type;
@@ -561,12 +563,13 @@ int MPIDI_CH3_ReqHandler_FOPRecvComplete(MPIDI_VC_t * vc, MPID_Request * rreq, i
     MPID_Win *win_ptr = NULL;
     MPI_Aint type_size;
     MPID_Request *resp_req = NULL;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int iovcnt;
     MPIDI_CH3_Pkt_t upkt;
     MPIDI_CH3_Pkt_fop_resp_t *fop_resp_pkt = &upkt.fop_resp;
     int is_contig;
     int is_empty_origin = FALSE;
+    int reqtype;
     MPIU_CHKPMEM_DECL(1);
     MPIDI_STATE_DECL(MPID_STATE_MPIDI_CH3_REQHANDLER_FOPRECVCOMPLETE);
 
@@ -577,7 +580,9 @@ int MPIDI_CH3_ReqHandler_FOPRecvComplete(MPIDI_VC_t * vc, MPID_Request * rreq, i
         is_empty_origin = TRUE;
     }
 
-    MPIU_Assert(MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_FOP_RECV);
+    reqtype = MPIDI_Request_get_type(rreq);
+    MPIU_Assert(reqtype == MPIDI_REQUEST_TYPE_RECV ||
+                reqtype == MPIDI_REQUEST_TYPE_FOP_RECV);
 
     MPID_Win_get_ptr(rreq->dev.target_win_handle, win_ptr);
 
@@ -1185,7 +1190,7 @@ int MPIDI_CH3_ReqHandler_GetDerivedDTRecvComplete(MPIDI_VC_t * vc,
 
 #if defined (CHANNEL_PSM)
     {
-	MPL_IOV iov[MPL_IOV_LIMIT];
+	MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     	/* GET_RESP packet. send packet & data. Pack if needed */
 	iov[0].MPL_IOV_BUF = (MPL_IOV_BUF_CAST) get_resp_pkt;
 	iov[0].MPL_IOV_LEN = sizeof(*get_resp_pkt);
@@ -1265,8 +1270,7 @@ int MPIDI_CH3_ReqHandler_GetDerivedDTRecvComplete(MPIDI_VC_t * vc,
         }
         /* --END ERROR HANDLING-- */
 #if defined(CHANNEL_MRAIL)
-    } else if (sreq->mrail.protocol == MV2_RNDV_PROTOCOL_RPUT 
-            || sreq->mrail.protocol == MV2_RNDV_PROTOCOL_R3) {
+    } else { 
         sreq->dev.iov_count = MPL_IOV_LIMIT;
         mpi_errno = MPIDI_CH3U_Request_load_send_iov(sreq,sreq->dev.iov,&sreq->dev.iov_count);
 
@@ -1276,10 +1280,6 @@ int MPIDI_CH3_ReqHandler_GetDerivedDTRecvComplete(MPIDI_VC_t * vc,
            MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**ch3|loadsendiov");
         }
     }
-    else
-    {
-        MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**ch3|loadrecviov");
-    }
 #endif //defined(CHANNEL_MRAIL)
 
     /* mark receive data transfer as complete and decrement CC in receive
@@ -1545,7 +1545,7 @@ static inline int perform_get_in_lock_queue(MPID_Win * win_ptr,
     MPI_Aint type_size;
     size_t len;
     int iovcnt;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int is_contig;
     int mpi_errno = MPI_SUCCESS;
 
@@ -1720,7 +1720,7 @@ static inline int perform_get_acc_in_lock_queue(MPID_Win * win_ptr,
     MPI_Aint type_size;
     size_t len;
     int iovcnt;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int is_contig;
     int mpi_errno = MPI_SUCCESS;
     MPI_Aint type_extent;
@@ -1911,7 +1911,7 @@ static inline int perform_fop_in_lock_queue(MPID_Win * win_ptr,
     MPIDI_CH3_Pkt_fop_t *fop_pkt = &((target_lock_entry->pkt).fop);
     MPID_Request *resp_req = NULL;
     MPI_Aint type_size;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int iovcnt;
     int is_contig;
     int mpi_errno = MPI_SUCCESS;
diff --git a/src/mpid/ch3/src/ch3u_handle_send_req.c b/src/mpid/ch3/src/ch3u_handle_send_req.c
index 26fa7f9..878dc54 100644
--- a/src/mpid/ch3/src/ch3u_handle_send_req.c
+++ b/src/mpid/ch3/src/ch3u_handle_send_req.c
@@ -30,6 +30,10 @@ int MPIDI_CH3U_Handle_send_req(MPIDI_VC_t * vc, MPID_Request * sreq, int *comple
 
     MPIDI_FUNC_ENTER(MPID_STATE_MPIDI_CH3U_HANDLE_SEND_REQ);
 
+    PRINT_DEBUG(DEBUG_SHM_verbose>1,
+            "vc: %p, rank: %d, sreq: %p, type: %d, onDataAvail: %p\n",
+            vc, vc->pg_rank, sreq, MPIDI_Request_get_type(sreq), sreq->dev.OnDataAvail);
+
     /* Use the associated function rather than switching on the old ca field */
     /* Routines can call the attached function directly */
     reqFn = sreq->dev.OnDataAvail;
@@ -72,7 +76,7 @@ int MPIDI_CH3_ReqHandler_GetSendComplete(MPIDI_VC_t * vc ATTRIBUTE((unused)),
 #if defined(CHANNEL_MRAIL)
     if (MV2_RNDV_PROTOCOL_R3 == sreq->mrail.protocol && 
         (sreq->dev.recv_data_sz + sizeof(MPIDI_CH3_Pkt_get_resp_t))> vc->eager_max_msg_sz) {
-        MPL_IOV iov[1];
+        MPL_IOV iov[1] = {0};
         int iovcnt;
         MPIDI_CH3_Pkt_t upkt;
         MPID_Request *resp_req;
@@ -204,9 +208,10 @@ int MPIDI_CH3_ReqHandler_GaccumSendComplete(MPIDI_VC_t * vc, MPID_Request * rreq
     MPID_Win_get_ptr(rreq->dev.target_win_handle, win_ptr);
 
 #if defined(CHANNEL_MRAIL)
-    if (MV2_RNDV_PROTOCOL_R3 == rreq->mrail.protocol && 
-        (rreq->dev.recv_data_sz + sizeof(MPIDI_CH3_Pkt_get_accum_resp_t))> vc->eager_max_msg_sz) {
-        MPL_IOV iov[1];
+    /* If R3 is used, we need to send MPIDI_CH3_PKT_GET_ACCUM_RESP pkt acting like FIN,
+     * so the origin process can handle it properly */
+    if (MV2_RNDV_PROTOCOL_R3 == rreq->mrail.protocol) {
+        MPL_IOV iov[1] = {0};
         int iovcnt;
         MPIDI_CH3_Pkt_t upkt;
         MPID_Request *resp_req;
diff --git a/src/mpid/ch3/src/ch3u_recvq.c b/src/mpid/ch3/src/ch3u_recvq.c
index 13de370..918a181 100644
--- a/src/mpid/ch3/src/ch3u_recvq.c
+++ b/src/mpid/ch3/src/ch3u_recvq.c
@@ -847,7 +847,7 @@ MPID_Request * MPIDI_CH3U_Recvq_FDP_or_AEU(MPIDI_Message_match * match,
         /* Reset the error bits if we unset it earlier. */
         if (error_bit_masked) MPIR_TAG_SET_ERROR_BIT(match->parts.tag);
         if (proc_failure_bit_masked) MPIR_TAG_SET_PROC_FAILURE_BIT(match->parts.tag);
-	rreq->dev.match	= *match;
+	MPIU_Memcpy(&rreq->dev.match, match, sizeof(MPIDI_Message_match));
 	rreq->dev.next	= NULL;
 	if (recvq_unexpected_tail != NULL) {
 	    recvq_unexpected_tail->dev.next = rreq;
diff --git a/src/mpid/ch3/src/ch3u_request.c b/src/mpid/ch3/src/ch3u_request.c
index 9172a41..a9d01e0 100644
--- a/src/mpid/ch3/src/ch3u_request.c
+++ b/src/mpid/ch3/src/ch3u_request.c
@@ -102,12 +102,13 @@ MPID_Request * MPID_Request_create(void)
         req->dev.target_lock_queue_entry = NULL;
 	req->dev.dataloop	   = NULL;
 	req->dev.iov_offset        = 0;
+	req->dev.chunk_count       = 0;
         req->dev.flags             = MPIDI_CH3_PKT_FLAG_NONE;
         req->dev.resp_request_handle = MPI_REQUEST_NULL;
         req->dev.user_buf          = NULL;
         req->dev.OnDataAvail       = NULL;
         req->dev.OnFinal           = NULL;
-        req->dev.user_buf          = NULL;
+        req->dev.datatype          = NULL;
         req->dev.drop_data         = FALSE;
         req->dev.tmpbuf            = NULL;
         req->dev.ext_hdr_ptr       = NULL;
@@ -642,10 +643,12 @@ int MPIDI_CH3U_Request_load_recv_iov(MPID_Request * const rreq)
 	    rreq->dev.iov[0].MPL_IOV_LEN = data_sz;
 #if defined (CHANNEL_PSM)
 	    MPIU_Assert((MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_RECV) || 
+                    (MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_IRECV) ||
                     (MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_ACCUM_RECV) ||
                     (MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_GET_ACCUM_RECV));
 #else
-	    MPIU_Assert(MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_RECV);
+	    MPIU_Assert((MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_RECV) ||
+                    (MPIDI_Request_get_type(rreq) == MPIDI_REQUEST_TYPE_IRECV));
 #endif
 	    /* Eventually, use OnFinal for this instead */
 	    rreq->dev.OnDataAvail = rreq->dev.OnFinal;
diff --git a/src/mpid/ch3/src/ch3u_rma_pkthandler.c b/src/mpid/ch3/src/ch3u_rma_pkthandler.c
index ae1881a..4fd3a98 100644
--- a/src/mpid/ch3/src/ch3u_rma_pkthandler.c
+++ b/src/mpid/ch3/src/ch3u_rma_pkthandler.c
@@ -559,7 +559,7 @@ int MPIDI_CH3_PktHandler_Get(MPIDI_VC_t * vc, MPIDI_CH3_Pkt_t * pkt, void *data,
 {
     MPIDI_CH3_Pkt_get_t *get_pkt = &pkt->get;
     MPID_Request *req = NULL;
-    MPL_IOV iov[MPL_IOV_LIMIT];
+    MPL_IOV iov[MPL_IOV_LIMIT] = {0};
     int complete = 0;
     char *data_buf = NULL;
     MPIDI_msg_sz_t data_len;
@@ -1254,7 +1254,7 @@ int MPIDI_CH3_PktHandler_GetAccumulate(MPIDI_VC_t * vc, MPIDI_CH3_Pkt_t * pkt, v
         MPID_Request *resp_req = NULL;
         MPIDI_CH3_Pkt_t upkt;
         MPIDI_CH3_Pkt_get_accum_resp_t *get_accum_resp_pkt = &upkt.get_accum_resp;
-        MPL_IOV iov[MPL_IOV_LIMIT];
+        MPL_IOV iov[MPL_IOV_LIMIT] = {0};
         int iovcnt;
         MPI_Aint type_size;
 
@@ -2164,7 +2164,8 @@ int MPIDI_CH3_PktHandler_Get_AccumResp(MPIDI_VC_t * vc, MPIDI_CH3_Pkt_t * pkt, v
 #if defined(CHANNEL_MRAIL)
     MPID_Datatype_get_size_macro(req->dev.datatype, type_size);
     data_len = type_size * req->dev.user_count;
-    if ((data_len + sizeof(MPIDI_CH3_Pkt_get_accum_resp_t)) > vc->eager_max_msg_sz) {
+    /* if origin's data is sent by using RNDV, we shall expect RNDV to be used for data in RESP pkt */
+    if ((data_len + sizeof(MPIDI_CH3_Pkt_get_accum_rndv_t)) > vc->eager_max_msg_sz) {
         /*if data length + packet header was larger than eager size,
          * rndv protocol should have been used*/
         MPIDI_CH3I_MRAILI_RREQ_RNDV_FINISH(req);
diff --git a/src/mpid/ch3/src/ch3u_rndv.c b/src/mpid/ch3/src/ch3u_rndv.c
index a0fcc41..40dcd9a 100644
--- a/src/mpid/ch3/src/ch3u_rndv.c
+++ b/src/mpid/ch3/src/ch3u_rndv.c
@@ -18,14 +18,28 @@
 #include "mpidimpl.h"
 #ifdef CHANNEL_MRAIL
 #include "mpid_mrail_rndv.h"
+#include "mpidi_ch3_impl.h"
 #endif
 
 
+MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2,expected_recvs_rendezvous);
+
 /*
  * This file contains the implementation of the rendezvous protocol
  * for MPI point-to-point messaging.
  */
 
+static inline int mv2_is_dt_contig(MPID_Request *req) {
+    int dt_contig = 1;
+    if (req->dev.datatype &&
+            HANDLE_GET_KIND(req->dev.datatype) != HANDLE_KIND_BUILTIN) {
+        MPID_Datatype * dt_ptr = NULL;
+        MPID_Datatype_get_ptr(req->dev.datatype, dt_ptr);
+        dt_contig = dt_ptr->is_contig;
+    }
+    return dt_contig;
+}
+
 #undef FUNCNAME
 #define FUNCNAME MPIDI_CH3_RndvSend
 #undef FCNAME
@@ -179,6 +193,156 @@ int MPIDI_CH3_RndvSend( MPID_Request **sreq_p, const void * buf, MPI_Aint count,
     MPIDI_Request_set_msg_type((rreq_), (msg_type_));		\
 }
 
+#if defined(CHANNEL_MRAIL)
+void mv2_select_rndv_protocol(
+        MPIDI_VC_t *vc,
+        MPID_Request *rreq,
+        MPIDI_CH3_Pkt_rndv_req_to_send_t * rts_pkt)
+{
+    int protocol = rts_pkt->rndv.protocol;
+    int dt_contig = mv2_is_dt_contig(rreq);
+
+    if (protocol == MV2_RNDV_PROTOCOL_R3 || rreq->dev.iov_count > 1 || !dt_contig) {
+        /* Fallback to R3 for non-contiguous transfers */
+        protocol = MV2_RNDV_PROTOCOL_R3;
+    }
+    rreq->mrail.protocol = rts_pkt->rndv.protocol = protocol;
+}
+
+int MPIDI_CH3_PktHandler_SMP_RTS( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt,
+					MPIDI_msg_sz_t *buflen, MPID_Request **rreqp )
+{
+    int found, k;
+    int mpi_errno = MPI_SUCCESS;
+    MPID_Request * rreq;
+    MPID_Seqnum_t seqnum;
+    MPIDI_CH3_Pkt_rndv_req_to_send_t * rts_pkt = &pkt->rndv_req_to_send;
+
+    MPID_THREAD_CS_ENTER(POBJ, MPIR_THREAD_POBJ_MSGQ_MUTEX);
+    if (*rreqp == NULL) {
+        rreq = MPIDI_CH3U_Recvq_FDP_or_AEU(&rts_pkt->match, &found);
+        MPIR_ERR_CHKANDJUMP1(!rreq, mpi_errno,MPI_ERR_OTHER, "**nomemreq", "**nomemuereq %d", MPIDI_CH3U_Recvq_count_unexp());
+
+        if (found) {
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1, "posted request found, "
+                    "rreq: %08x, rank: %d, tag: %d, context: %d, protocol: %d, recv_sz: %llu\n",
+                    rreq, rreq->dev.match.parts.rank, rreq->dev.match.parts.tag, 
+                    rreq->dev.match.parts.context_id, rreq->mrail.protocol, rreq->dev.recv_data_sz);
+        } else if (MPID_cc_get(rreq->cc) == 0) {
+            *rreqp = NULL;
+            goto fn_fail;
+        }
+
+        set_request_info(rreq, rts_pkt, MPIDI_REQUEST_RNDV_MSG);
+        MPID_THREAD_CS_EXIT(POBJ, MPIR_THREAD_POBJ_MSGQ_MUTEX);
+
+        *buflen = sizeof(MPIDI_CH3_Pkt_t);
+        mv2_select_rndv_protocol(vc, rreq, rts_pkt);
+    } else {
+        found = 1;
+        rreq = *rreqp;
+        *buflen = sizeof(MPIDI_CH3_Pkt_t);
+        set_request_info(rreq, rts_pkt, MPIDI_REQUEST_RNDV_MSG);
+        mv2_select_rndv_protocol(vc, rreq, rts_pkt);
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                "Saved RTS, sreq: %08x, rank: %d, tag: %d, context: %d, protocol: %d, data_sz: %llu\n",
+                rts_pkt->sender_req_id, rts_pkt->match.parts.rank, rts_pkt->match.parts.tag, 
+                rts_pkt->match.parts.context_id, rts_pkt->rndv.protocol, rts_pkt->data_sz);
+    }
+
+    if (found) {
+
+        if(MV2_RNDV_PROTOCOL_RGET == rts_pkt->rndv.protocol) {
+
+            MPIDI_CH3I_MRAIL_SET_REQ_REMOTE_RNDV(rreq, rts_pkt);
+
+            mpi_errno = MPIDI_CH3U_Post_data_receive_found(rreq);
+            if (mpi_errno != MPI_SUCCESS && rreq != NULL) {
+                MPIR_ERR_SETANDJUMP(mpi_errno, MPI_ERR_OTHER,"**ch3|loadsendiov");
+            }
+
+            mpi_errno = MPIDI_CH3_Prepare_rndv_get(vc, rreq);
+            if (mpi_errno != MPI_SUCCESS) {
+                MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**ch3|rndv");
+            }
+
+            if (!rdma_rndv_immediate) {
+                RENDEZVOUS_IN_PROGRESS(vc, rreq);
+                rreq->mrail.nearly_complete = 0;
+                PUSH_FLOWLIST(vc);
+            } else {
+                mpi_errno = MPIDI_CH3_Rendezvous_push(vc, rreq);
+                if (mpi_errno != MPI_SUCCESS && rreq != NULL) {
+                    MPIR_ERR_SETANDJUMP(mpi_errno,
+                            MPI_ERR_OTHER,"**ch3|senddata");
+                }
+            }
+        } 
+        
+        if (MV2_RNDV_PROTOCOL_RPUT == rts_pkt->rndv.protocol ||
+            MV2_RNDV_PROTOCOL_R3   == rts_pkt->rndv.protocol) {
+
+            MPID_Request * cts_req;
+            MPIDI_CH3_Pkt_t upkt;
+            MPIDI_CH3_Pkt_rndv_clr_to_send_t * cts_pkt = &upkt.rndv_clr_to_send;
+
+            MPIDI_Pkt_init(cts_pkt, MPIDI_CH3_PKT_RNDV_CLR_TO_SEND);
+            cts_pkt->sender_req_id = rts_pkt->sender_req_id;
+            cts_pkt->receiver_req_id = rreq->handle;
+            cts_pkt->recv_sz = 0;
+
+            MPIDI_VC_FAI_send_seqnum(vc, seqnum);
+            MPIDI_Pkt_set_seqnum(cts_pkt, seqnum);
+
+            mpi_errno = MPIDI_CH3U_Post_data_receive_found(rreq);
+            if (mpi_errno != MPI_SUCCESS && rreq != NULL) {
+                MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**ch3|loadsendiov");
+            }
+
+            if (rreq->dev.OnDataAvail == NULL) {
+                for (k=0; k < rreq->dev.iov_count; ++k) {
+                    cts_pkt->recv_sz += rreq->dev.iov[k].MPL_IOV_LEN;
+                }
+            } else {
+                cts_pkt->recv_sz = rreq->dev.segment_size;
+            }
+
+            mpi_errno = MPIDI_CH3_Prepare_rndv_cts(vc, cts_pkt, rreq);
+            if (mpi_errno != MPI_SUCCESS) {
+                MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**ch3|rndv");
+            }
+
+            PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                    "sending CTS to rank: %d, buf_addr: %p, recv_sz: %llu, protocol: %d\n",
+                    vc->pg_rank, cts_pkt->rndv.buf_addr, cts_pkt->recv_sz, cts_pkt->rndv.protocol);
+
+            MPID_THREAD_CS_ENTER(POBJ, vc->pobj_mutex);
+            mpi_errno = MPIDI_CH3_iStartMsg(vc, cts_pkt, sizeof(*cts_pkt), &cts_req);
+            MPID_THREAD_CS_EXIT(POBJ, vc->pobj_mutex);
+            if (mpi_errno != MPI_SUCCESS) {
+                MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,
+                        "**ch3|ctspkt");
+            }
+            if (cts_req != NULL) {
+                MPID_Request_release(cts_req);
+            }
+        }
+    } else {
+        MV2_INC_NUM_POSTED_RECV();
+        PRINT_DEBUG(DEBUG_RNDV_verbose>1,
+                "unexpected request allocated, rreq: %08x, sreq: %08x\n",
+                rreq, rts_pkt->sender_req_id);
+        MPIU_Memcpy(&rreq->ch.pkt, pkt, sizeof(MPIDI_CH3_Pkt_t));
+        MPIDI_CH3_Progress_signal_completion();
+    }
+
+ fn_exit:
+    *rreqp = NULL;
+ fn_fail:
+    return mpi_errno;
+}
+#endif
+
 #undef FUNCNAME
 #define FUNCNAME MPIDI_CH3_PktHandler_RndvReqToSend
 #undef FCNAME
@@ -191,6 +355,17 @@ int MPIDI_CH3_PktHandler_RndvReqToSend( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt, vo
     MPIDI_CH3_Pkt_rndv_req_to_send_t * rts_pkt = &pkt->rndv_req_to_send;
     int mpi_errno = MPI_SUCCESS;
     
+#if defined(CHANNEL_MRAIL)
+    PRINT_DEBUG(DEBUG_RNDV_verbose,
+            "received RTS, sreq: %08x, rank: %d, tag: %d, context: %d, protocol: %d, data_sz: %llu\n",
+            rts_pkt->sender_req_id, rts_pkt->match.parts.rank, rts_pkt->match.parts.tag, 
+            rts_pkt->match.parts.context_id, rts_pkt->rndv.protocol, rts_pkt->data_sz);
+
+    if (IS_VC_SMP(vc)) {
+        return MPIDI_CH3_PktHandler_SMP_RTS(vc, pkt, buflen, rreqp);
+    }
+#endif
+
     MPIU_DBG_MSG_FMT(CH3_OTHER,VERBOSE,(MPIU_DBG_FDEST,
  "received rndv RTS pkt, sreq=0x%08x, rank=%d, tag=%d, context=%d, data_sz=" MPIDI_MSG_SZ_FMT,
 	      rts_pkt->sender_req_id, rts_pkt->match.parts.rank, 
@@ -237,7 +412,7 @@ int MPIDI_CH3_PktHandler_RndvReqToSend( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt, vo
 #endif /* defined(CHANNEL_MRAIL) && defined(MPID_USE_SEQUENCE_NUMBERS) */
 	
 	MPIU_DBG_MSG(CH3_OTHER,VERBOSE,"posted request found");	
-	
+        MPIR_T_PVAR_COUNTER_INC(MV2, expected_recvs_rendezvous, 1);	
 #if defined(CHANNEL_MRAIL)
 #if defined (_ENABLE_CUDA_) && defined (HAVE_CUDA_IPC)
         /*initialize IPC buffers if not initialized*/
@@ -412,6 +587,47 @@ int MPIDI_CH3_PktHandler_RndvReqToSend( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt, vo
     return mpi_errno;
 }
 
+#if defined(CHANNEL_MRAIL)
+int MPIDI_CH3_PktHandler_SMP_CTS( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt,
+					MPIDI_msg_sz_t *buflen, MPID_Request **rreqp )
+{
+    int i, mpi_errno = MPI_SUCCESS;
+    MPIDI_CH3_Pkt_rndv_clr_to_send_t * cts_pkt = &pkt->rndv_clr_to_send;
+    MPID_Request * sreq;
+    MPIDI_msg_sz_t recv_size;
+
+    MPIU_Assert(pkt->type == MPIDI_CH3_PKT_RNDV_CLR_TO_SEND);
+    MPID_Request_get_ptr(cts_pkt->sender_req_id, sreq);
+    MPIU_Assert(sreq != NULL);
+
+    recv_size = cts_pkt->recv_sz;
+    for (i = 0; i < sreq->dev.iov_count ; i ++) {
+        if (recv_size < sreq->dev.iov[i].MPL_IOV_LEN) {
+            fprintf(stderr, "Warning! Rndv Receiver is expecting %lu Bytes "
+                    "But, is receiving %lu Bytes \n", 
+                    sreq->dev.iov[i].MPL_IOV_LEN, recv_size);
+            sreq->dev.iov[i].MPL_IOV_LEN = recv_size;
+            sreq->dev.iov_count = i + 1;
+            break;
+        } else {
+            recv_size -= sreq->dev.iov[i].MPL_IOV_LEN;
+        }
+    }
+    sreq->mrail.rndv_buf_sz = cts_pkt->recv_sz;
+    sreq->mrail.protocol = cts_pkt->rndv.protocol;
+
+    mpi_errno = MPIDI_CH3_Rndv_transfer(vc, sreq, NULL, cts_pkt, NULL);
+    if (mpi_errno != MPI_SUCCESS) {
+        MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**ch3|senddata");
+    }
+    *rreqp = NULL;
+    *buflen = sizeof(MPIDI_CH3_Pkt_t);
+
+fn_fail:
+    return mpi_errno;
+}
+#endif
+
 #undef FUNCNAME
 #define FUNCNAME MPIDI_CH3_PktHandler_RndvClrToSend
 #undef FCNAME
@@ -435,6 +651,16 @@ int MPIDI_CH3_PktHandler_RndvClrToSend( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt, vo
     MPID_Datatype * dt_ptr;
 #endif /* defined(CHANNEL_MRAIL) */
     
+#if defined(CHANNEL_MRAIL)
+    PRINT_DEBUG(DEBUG_RNDV_verbose,
+            "received CTS, seqnum: %d, sender_req_id: %08x, receiver_req_id: %08x, protocol: %d\n",
+            cts_pkt->seqnum, cts_pkt->sender_req_id, cts_pkt->receiver_req_id, cts_pkt->rndv.protocol);
+
+    if (IS_VC_SMP(vc) && pkt->type == MPIDI_CH3_PKT_RNDV_CLR_TO_SEND) {
+        return MPIDI_CH3_PktHandler_SMP_CTS(vc, pkt, buflen, rreqp);
+    }
+#endif
+
     MPIU_DBG_MSG(CH3_OTHER,VERBOSE,"received rndv CTS pkt");
     
     MPID_Request_get_ptr(cts_pkt->sender_req_id, sreq);
@@ -469,6 +695,11 @@ int MPIDI_CH3_PktHandler_RndvClrToSend( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt, vo
                 recv_size -= sreq->dev.iov[i].MPL_IOV_LEN;
         }
         sreq->mrail.rndv_buf_sz = cts_pkt->recv_sz;
+    } else if (IS_VC_SMP(vc)) {
+        /* Used for one-sided communications */
+        sreq->mrail.protocol   = MV2_RNDV_PROTOCOL_R3;
+        cts_pkt->rndv.protocol = MV2_RNDV_PROTOCOL_R3;
+        MPIDI_CH3I_MRAIL_FREE_RNDV_BUFFER(sreq);
     }
 
     mpi_errno = MPIDI_CH3_Rndv_transfer(vc, sreq, NULL,
@@ -507,7 +738,7 @@ int MPIDI_CH3_PktHandler_RndvClrToSend( MPIDI_VC_t *vc, MPIDI_CH3_Pkt_t *pkt, vo
     
     if (dt_contig) 
     {
-	MPL_IOV iov[MPL_IOV_LIMIT];
+	MPL_IOV iov[MPL_IOV_LIMIT] = {0};
 
 	MPIU_DBG_MSG_FMT(CH3_OTHER,VERBOSE,(MPIU_DBG_FDEST,
 		    "sending contiguous rndv data, data_sz=" MPIDI_MSG_SZ_FMT, 
@@ -620,6 +851,14 @@ int MPIDI_CH3_RecvRndv( MPIDI_VC_t * vc, MPID_Request *rreq )
     /* The channel will be performing the rendezvous */
     
 #if defined(CHANNEL_MRAIL)
+    if (IS_VC_SMP(vc)) {
+        MPIDI_msg_sz_t buflen;
+        MPIU_Assert(rreq != NULL);
+        return MPIDI_CH3_PktHandler_SMP_RTS(vc, &(rreq->ch.pkt), &buflen, &rreq);
+    }
+#endif
+
+#if defined(CHANNEL_MRAIL)
     if (rreq->dev.recv_data_sz == 0) {
 	MPID_Request_complete(rreq);
 #else /* defined(CHANNEL_MRAIL) */
diff --git a/src/mpid/ch3/src/mpid_abort.c b/src/mpid/ch3/src/mpid_abort.c
index 8b5209c..f569a94 100644
--- a/src/mpid/ch3/src/mpid_abort.c
+++ b/src/mpid/ch3/src/mpid_abort.c
@@ -132,6 +132,8 @@ int MPID_Abort(MPID_Comm * comm, int mpi_errno, int exit_code,
 
     /* FIXME: This should not use an ifelse chain. Either define the function
        by name or set a function pointer */
+    if(!MPIDI_Process.my_pg->is_spawned)
+    {
 #ifdef MPIDI_CH3_IMPLEMENTS_ABORT
     MPIDI_CH3_Abort(exit_code, error_msg);
 #elif defined(MPIDI_DEV_IMPLEMENTS_ABORT)
@@ -147,6 +149,11 @@ int MPID_Abort(MPID_Comm * comm, int mpi_errno, int exit_code,
     MPL_exit(exit_code);
     
     return MPI_ERR_INTERN;
+    }
+    else
+    {
+        return MPI_SUCCESS;
+    }
 }
 
 #ifdef MPIDI_DEV_IMPLEMENTS_ABORT
diff --git a/src/mpid/ch3/src/mpid_imrecv.c b/src/mpid/ch3/src/mpid_imrecv.c
index 0a648cf..e40cf2b 100644
--- a/src/mpid/ch3/src/mpid_imrecv.c
+++ b/src/mpid/ch3/src/mpid_imrecv.c
@@ -150,7 +150,11 @@ int MPID_Imrecv(void *buf, int count, MPI_Datatype datatype,
     else if (MPIDI_Request_get_msg_type(rreq) == MPIDI_REQUEST_RNDV_MSG)
     {
         MPIDI_Comm_get_vc_set_active(comm, rreq->dev.match.parts.rank, &vc);
-
+#if defined (CHANNEL_MRAIL)
+        if (IS_VC_SMP(vc)) {
+            rreq->mrail.protocol = MV2_RNDV_PROTOCOL_R3;
+        }
+#endif
         mpi_errno = vc->rndvRecv_fn(vc, rreq);
         if (mpi_errno) MPIR_ERR_POP(mpi_errno);
         if (HANDLE_GET_KIND(datatype) != HANDLE_KIND_BUILTIN)
diff --git a/src/mpid/ch3/src/mpid_init.c b/src/mpid/ch3/src/mpid_init.c
index 8bbd380..51af254 100644
--- a/src/mpid/ch3/src/mpid_init.c
+++ b/src/mpid/ch3/src/mpid_init.c
@@ -331,6 +331,7 @@ int MPID_Init(int *argc, char ***argv, int requested, int *provided,
     if (mpi_errno) {
 	MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER, "**ch3|ch3_init");
     }
+    pg->is_spawned=has_parent;
 
     /* Create the string that will cache the last group of failed processes
      * we received from PMI */
@@ -577,10 +578,10 @@ int MPID_Init(int *argc, char ***argv, int requested, int *provided,
         }
         if ((value = getenv("OMP_NUM_THREADS")) != NULL) {
             int _temp = atoi(value);
-            if ((_temp > 0) && mv2_enable_affinity && (0 == pg_rank)
+            if ((_temp > 1) && mv2_enable_affinity && (0 == pg_rank)
                 && thread_warning && (mv2_binding_level == LEVEL_CORE)) {
                 fprintf(stderr, "Warning: Process to core binding is enabled and"
-                        " OMP_NUM_THREADS is set to non-zero (%d) value\nIf"
+                        " OMP_NUM_THREADS is greater than one (%d).\nIf"
                         " your program has OpenMP sections, this can cause"
                         " over-subscription of cores and consequently poor"
                         " performance\nTo avoid this, please re-run your"
diff --git a/src/mpid/ch3/src/mpid_irecv.c b/src/mpid/ch3/src/mpid_irecv.c
index 8d97da7..6ea6f53 100644
--- a/src/mpid/ch3/src/mpid_irecv.c
+++ b/src/mpid/ch3/src/mpid_irecv.c
@@ -17,6 +17,9 @@
 
 #include "mpidimpl.h"
 
+MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2,unexpected_recvs_rendezvous);
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN(MV2,mv2_pt2pt_mpid_irecv);
+
 #undef FUNCNAME
 #define FUNCNAME MPID_Irecv
 #undef FCNAME
@@ -25,6 +28,8 @@ int MPID_Irecv(void * buf, MPI_Aint count, MPI_Datatype datatype, int rank, int
 	       MPID_Comm * comm, int context_offset,
                MPID_Request ** request)
 {
+    MPIR_T_PVAR_COUNTER_BUCKET_INC(MV2,mv2_pt2pt_mpid_irecv,count,datatype);
+
     MPID_Request * rreq;
     int found;
     int mpi_errno = MPI_SUCCESS;
@@ -107,6 +112,7 @@ int MPID_Irecv(void * buf, MPI_Aint count, MPI_Datatype datatype, int rank, int
 	MPID_THREAD_CS_EXIT(POBJ, MPIR_THREAD_POBJ_MSGQ_MUTEX);
 	MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**nomemreq");
     }
+    MPIDI_Request_set_type(rreq, MPIDI_REQUEST_TYPE_IRECV);
 
 #ifdef _ENABLE_CUDA_
     int device_buf = 0;
@@ -201,7 +207,8 @@ int MPID_Irecv(void * buf, MPI_Aint count, MPI_Datatype datatype, int rank, int
 	}
 	else if (MPIDI_Request_get_msg_type(rreq) == MPIDI_REQUEST_RNDV_MSG)
 	{
-	    MPIDI_Comm_get_vc_set_active(comm, rreq->dev.match.parts.rank, &vc);
+	 MPIR_T_PVAR_COUNTER_INC(MV2, unexpected_recvs_rendezvous, 1);   
+         MPIDI_Comm_get_vc_set_active(comm, rreq->dev.match.parts.rank, &vc);
 
 #ifdef _ENABLE_CUDA_
         if (rdma_enable_cuda) {
diff --git a/src/mpid/ch3/src/mpid_isend.c b/src/mpid/ch3/src/mpid_isend.c
index 5977c9e..0c6b2f9 100644
--- a/src/mpid/ch3/src/mpid_isend.c
+++ b/src/mpid/ch3/src/mpid_isend.c
@@ -17,6 +17,8 @@
 
 #include "mpidimpl.h"
 
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN(MV2,mv2_pt2pt_mpid_isend);
+
 /* FIXME: HOMOGENEOUS SYSTEMS ONLY -- no data conversion is performed */
 
 /* FIXME: The routines MPID_Isend, MPID_Issend, MPID_Irsend are nearly 
@@ -46,6 +48,9 @@ int MPID_Isend(const void * buf, MPI_Aint count, MPI_Datatype datatype, int rank
 	       int tag, MPID_Comm * comm, int context_offset,
                MPID_Request ** request)
 {
+
+    MPIR_T_PVAR_COUNTER_BUCKET_INC(MV2,mv2_pt2pt_mpid_isend,count,datatype);
+
     MPIDI_msg_sz_t data_sz;
     int dt_contig;
     MPI_Aint dt_true_lb;
@@ -161,8 +166,8 @@ skip_self_send:
 
     if (sreq == NULL) {
         MPIDI_Request_create_sreq(sreq, mpi_errno, goto fn_exit);
-        MPIDI_Request_set_type(sreq, MPIDI_REQUEST_TYPE_SEND);
     }
+    MPIDI_Request_set_type(sreq, MPIDI_REQUEST_TYPE_ISEND);
 
     if (data_sz == 0)
     {
diff --git a/src/mpid/ch3/src/mpid_recv.c b/src/mpid/ch3/src/mpid_recv.c
index 6a2cb90..f9cc5a5 100644
--- a/src/mpid/ch3/src/mpid_recv.c
+++ b/src/mpid/ch3/src/mpid_recv.c
@@ -18,6 +18,9 @@
 
 #include "mpidimpl.h"
 
+MPIR_T_PVAR_ULONG2_COUNTER_DECL_EXTERN(MV2,unexpected_recvs_rendezvous);
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN(MV2,mv2_pt2pt_mpid_recv); 
+
 #undef FUNCNAME
 #define FUNCNAME MPID_Recv
 #undef FCNAME
@@ -26,6 +29,8 @@ int MPID_Recv(void * buf, MPI_Aint count, MPI_Datatype datatype, int rank, int t
 	      MPID_Comm * comm, int context_offset,
 	      MPI_Status * status, MPID_Request ** request)
 {
+    MPIR_T_PVAR_COUNTER_BUCKET_INC(MV2,mv2_pt2pt_mpid_recv,count,datatype);
+
     /* FIXME: in the common case, we want to simply complete the message
        and make as few updates as possible.
        Note in addition that this routine is used only by MPI_Recv (a
@@ -115,6 +120,7 @@ int MPID_Recv(void * buf, MPI_Aint count, MPI_Datatype datatype, int rank, int t
 	MPID_THREAD_CS_EXIT(POBJ, MPIR_THREAD_POBJ_MSGQ_MUTEX);
 	MPIR_ERR_SETANDJUMP(mpi_errno,MPI_ERR_OTHER,"**nomemreq");
     }
+    MPIDI_Request_set_type(rreq, MPIDI_REQUEST_TYPE_RECV);
 
 #ifdef _ENABLE_CUDA_
     if (rdma_enable_cuda) {
@@ -209,6 +215,7 @@ int MPID_Recv(void * buf, MPI_Aint count, MPI_Datatype datatype, int rank, int t
 	}
 	else if (MPIDI_Request_get_msg_type(rreq) == MPIDI_REQUEST_RNDV_MSG)
 	{
+        MPIR_T_PVAR_COUNTER_INC(MV2, unexpected_recvs_rendezvous, 1);
 #if defined(CHANNEL_MRAIL)
         MPIDI_Comm_get_vc(comm, rreq->dev.match.parts.rank, &vc);
         mpi_errno = MPIDI_CH3_RecvRndv( vc, rreq );
diff --git a/src/mpid/ch3/src/mpid_rma.c b/src/mpid/ch3/src/mpid_rma.c
index 7b6b7e5..3ebcf08 100644
--- a/src/mpid/ch3/src/mpid_rma.c
+++ b/src/mpid/ch3/src/mpid_rma.c
@@ -287,9 +287,13 @@ static int win_init(MPI_Aint size, int disp_unit, int create_flavor, int model,
     MPIR_ERR_CHKANDJUMP1(!(*win_ptr), mpi_errno, MPI_ERR_OTHER, "**nomem",
                          "**nomem %s", "MPID_Win_mem");
 
+#ifdef _OSU_MVAPICH_	
+    win_comm_ptr = comm_ptr;
+#else
     mpi_errno = MPIR_Comm_dup_impl(comm_ptr, &win_comm_ptr);
     if (mpi_errno)
         MPIR_ERR_POP(mpi_errno);
+#endif
 
     MPIU_Object_set_ref(*win_ptr, 1);
 
@@ -384,7 +388,6 @@ static int win_init(MPI_Aint size, int disp_unit, int create_flavor, int model,
         (*win_ptr)->target_pool_start[i].pool_type = MPIDI_RMA_POOL_WIN;
         MPL_DL_APPEND((*win_ptr)->target_pool_head, &((*win_ptr)->target_pool_start[i]));
     }
-
     (*win_ptr)->num_slots = MPIR_MIN(MPIR_CVAR_CH3_RMA_SLOTS_SIZE, MPIR_Comm_size(win_comm_ptr));
     MPIU_CHKPMEM_MALLOC((*win_ptr)->slots, MPIDI_RMA_Slot_t *,
                         sizeof(MPIDI_RMA_Slot_t) * (*win_ptr)->num_slots, mpi_errno, "RMA slots");
diff --git a/src/mpid/ch3/src/mpid_send.c b/src/mpid/ch3/src/mpid_send.c
index 11dcb30..424be2f 100644
--- a/src/mpid/ch3/src/mpid_send.c
+++ b/src/mpid/ch3/src/mpid_send.c
@@ -17,6 +17,8 @@
 
 #include "mpidimpl.h"
 
+MPIR_T_PVAR_ULONG2_COUNTER_BUCKET_DECL_EXTERN(MV2,mv2_pt2pt_mpid_send);
+
 /* FIXME - HOMOGENEOUS SYSTEMS ONLY -- no data conversion is performed */
 
 /*
@@ -30,6 +32,9 @@ int MPID_Send(const void * buf, MPI_Aint count, MPI_Datatype datatype, int rank,
 	      int tag, MPID_Comm * comm, int context_offset,
 	      MPID_Request ** request)
 {
+
+    MPIR_T_PVAR_COUNTER_BUCKET_INC(MV2,mv2_pt2pt_mpid_send,count,datatype);
+
     MPIDI_msg_sz_t data_sz;
     int dt_contig;
     MPI_Aint dt_true_lb;
diff --git a/src/mpid/ch3/src/mpidi_rma.c b/src/mpid/ch3/src/mpidi_rma.c
index 78d4550..07dd221 100644
--- a/src/mpid/ch3/src/mpidi_rma.c
+++ b/src/mpid/ch3/src/mpidi_rma.c
@@ -211,10 +211,12 @@ int MPID_Win_free(MPID_Win ** win_ptr)
     MPIU_Free((*win_ptr)->rank_mapping);
 #endif /* CHANNEL_PSM */
 
+#ifndef _OSU_MVAPICH_
     comm_ptr = (*win_ptr)->comm_ptr;
     mpi_errno = MPIR_Comm_free_impl(comm_ptr);
     if (mpi_errno)
         MPIR_ERR_POP(mpi_errno);
+#endif
 
     if ((*win_ptr)->basic_info_table != NULL)
         MPIU_Free((*win_ptr)->basic_info_table);
diff --git a/src/pm/jsm/subconfigure.m4 b/src/pm/jsm/subconfigure.m4
index 96716c8..6bcd9ef 100644
--- a/src/pm/jsm/subconfigure.m4
+++ b/src/pm/jsm/subconfigure.m4
@@ -37,15 +37,20 @@ if test "x$with_pmi" = "xpmi4pmix"; then
                      [PAC_PREPEND_FLAG([-lpmi],[LIBS])
                       PAC_PREPEND_FLAG([-Wl,-rpath,$with_pmi4pmix/lib -L$with_pmi4pmix/lib -lpmi], [WRAPPER_LIBS])],
                      [AC_MSG_ERROR([could not find the pmi4pmix libpmi. Please use --with-pmi4pmix to point to the correct location. Configure aborted])])
-        AC_CHECK_FUNCS([PMI_Ibarrier], [AC_DEFINE([HAVE_PMI_IBARRIER], [1], [Define if pmi client supports PMI_Ibarrier])])
-        AC_CHECK_FUNCS([PMI_Wait], [AC_DEFINE([HAVE_PMI_WAIT], [1], [Define if pmi client supports PMI_Wait])])
-        AC_CHECK_FUNCS([PMI2_KVS_Ifence], [AC_DEFINE([HAVE_PMI2_KVS_IFENCE], [1], [Define if pmi client supports PMI2_KVS_Ifence])])
-        AC_CHECK_FUNCS([PMI2_KVS_Wait], [AC_DEFINE([HAVE_PMI2_KVS_WAIT], [1], [Define if pmi client supports PMI2_KVS_Wait])])
-        AC_CHECK_FUNCS([PMI2_Iallgather], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER], [1], [Define if pmi client supports PMI2_Iallgather])])
-        AC_CHECK_FUNCS([PMI2_Iallgather_wait], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER_WAIT], [1], [Define if pmi client supports PMI2_Iallgather_wait])])
-        AC_CHECK_FUNCS([PMI2_SHMEM_Iallgather], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER], [1], [Define if pmi client supports PMI2_SHMEM_Iallgather])])
-        AC_CHECK_FUNCS([PMI2_SHMEM_Iallgather_wait], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER_WAIT], [1], [Define if pmi client supports PMI2_SHMEM_Iallgather_wait])])
+    else
+        AC_CHECK_LIB([pmi], [PMI_Init],
+                     [PAC_PREPEND_FLAG([-lpmi],[LIBS])
+                      PAC_PREPEND_FLAG([-lpmi], [WRAPPER_LIBS])],
+                     [AC_MSG_ERROR([could not find the pmi4pmix libpmi. Please use --with-pmi4pmix to point to the correct location. Configure aborted])])
     fi
+    AC_CHECK_FUNCS([PMI_Ibarrier], [AC_DEFINE([HAVE_PMI_IBARRIER], [1], [Define if pmi client supports PMI_Ibarrier])])
+    AC_CHECK_FUNCS([PMI_Wait], [AC_DEFINE([HAVE_PMI_WAIT], [1], [Define if pmi client supports PMI_Wait])])
+    AC_CHECK_FUNCS([PMI2_KVS_Ifence], [AC_DEFINE([HAVE_PMI2_KVS_IFENCE], [1], [Define if pmi client supports PMI2_KVS_Ifence])])
+    AC_CHECK_FUNCS([PMI2_KVS_Wait], [AC_DEFINE([HAVE_PMI2_KVS_WAIT], [1], [Define if pmi client supports PMI2_KVS_Wait])])
+    AC_CHECK_FUNCS([PMI2_Iallgather], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER], [1], [Define if pmi client supports PMI2_Iallgather])])
+    AC_CHECK_FUNCS([PMI2_Iallgather_wait], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER_WAIT], [1], [Define if pmi client supports PMI2_Iallgather_wait])])
+    AC_CHECK_FUNCS([PMI2_SHMEM_Iallgather], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER], [1], [Define if pmi client supports PMI2_SHMEM_Iallgather])])
+    AC_CHECK_FUNCS([PMI2_SHMEM_Iallgather_wait], [AC_DEFINE([HAVE_PMI2_SHMEM_IALLGATHER_WAIT], [1], [Define if pmi client supports PMI2_SHMEM_Iallgather_wait])])
 else
     AC_MSG_ERROR([Selected PMI ($with_pmi) is not compatible with jsm. Please reconfigure after setting --with-pmi=pmi4pmix.])
 fi
diff --git a/src/pm/mpirun/mpirun_rsh.c b/src/pm/mpirun/mpirun_rsh.c
index 1aa751b..89a201e 100644
--- a/src/pm/mpirun/mpirun_rsh.c
+++ b/src/pm/mpirun/mpirun_rsh.c
@@ -2363,6 +2363,7 @@ void child_handler(int signal)
 {
     int status, pid;
     static int count = 0;
+    int is_dpm_signal = 0;
 
     int check_mpirun = 1;
     list_pid_mpirun_t *curr = dpm_mpirun_pids;
@@ -2376,6 +2377,8 @@ void child_handler(int signal)
             pid = waitpid(-1, &status, WNOHANG);
         } while (pid == -1 && errno == EINTR);
 
+        is_dpm_signal = 0;
+
         // Debug output
         PRINT_DEBUG(DEBUG_Fork_verbose, "waitpid return pid = %d\n", pid);
         if (pid >= 0) {
@@ -2426,6 +2429,7 @@ void child_handler(int signal)
         if (check_mpirun) {
             while (curr != NULL) {
                 if (pid == curr->pid) {
+                    is_dpm_signal = 1;
                     if (prev == NULL)
                         dpm_mpirun_pids = (list_pid_mpirun_t *) curr->next;
                     else
@@ -2474,7 +2478,7 @@ void child_handler(int signal)
             continue;
         }
 #endif
-        if (!WIFEXITED(status) || WEXITSTATUS(status)) {
+        if (!is_dpm_signal && (!WIFEXITED(status) || WEXITSTATUS(status))) {
             /*
              * mpirun_rsh did not successfully accept the connections of each
              * mpispawn before one of the processes terminated abnormally or
diff --git a/src/pm/mpirun/mpispawn.c b/src/pm/mpirun/mpispawn.c
index 9941977..75cfa7b 100644
--- a/src/pm/mpirun/mpispawn.c
+++ b/src/pm/mpirun/mpispawn.c
@@ -336,7 +336,7 @@ char *obtain_host_list_from_file()
     return host_list;
 }
 
-void find_children (int id, int degree, int size, int children[degree])
+void find_children (int id, int degree, int size, int child[degree])
 {
     size_t c_start = degree * id + 1;
     size_t i;
@@ -346,14 +346,14 @@ void find_children (int id, int degree, int size, int children[degree])
     }
 
     for (i = 0; i < degree; i++) {
-        children[i] = -1;
+        child[i] = -1;
     }
 
     if (c_start < size) {
         i = (degree > size - c_start) ? size - c_start : degree;
 
         while (i--) {
-            children[i] = c_start + i;
+            child[i] = c_start + i;
         }
     }
 }
diff --git a/src/pm/mpirun/mpispawn_tree.h b/src/pm/mpirun/mpispawn_tree.h
index 8612eda..ad34339 100644
--- a/src/pm/mpirun/mpispawn_tree.h
+++ b/src/pm/mpirun/mpispawn_tree.h
@@ -27,7 +27,7 @@
 
 #define MT_MAX_LEVEL    4
 #define MT_MIN_DEGREE   4
-#define MT_DEFAULT_DEGREE   8
+#define MT_DEFAULT_DEGREE   4
 #define MT_MAX_DEGREE   512
 
 typedef struct {
diff --git a/src/util/mem/mpit.c b/src/util/mem/mpit.c
index 68e3cbe..55ca383 100644
--- a/src/util/mem/mpit.c
+++ b/src/util/mem/mpit.c
@@ -34,15 +34,15 @@
         posix_memalign(a, b, c)
 #else
 #   define mpit_malloc(a, line, file)           \
-        malloc(a)
+        malloc((size_t)a)
 #   define mpit_calloc(a, b, line, file)        \
-        calloc(a, b)
+        calloc((size_t)a, (size_t)b)
 #   define mpit_free(a, line, file)             \
-        free(a)
+        free((void *)a)
 #   define mpit_strdup(a, line, file)           \
         strdup(a)
 #   define mpit_realloc(a, b, line, file)       \
-        realloc(a, b)
+        realloc((void *)a, (size_t)b)
 #   define mpit_memalign(a, b, c, line, file)   \
         posix_memalign(a, b, c)
 #endif
@@ -80,12 +80,16 @@ static int initialized = 0;
 static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
 static pthread_mutex_t oracle_mutex = PTHREAD_MUTEX_INITIALIZER;
 
+extern int mv2_enable_pvar_mem;
+
 void Real_Free (void *ptr);
 
 static inline void
 increment_malloc_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_malloc_calls, 1);
@@ -94,15 +98,18 @@ increment_malloc_counter (void)
     else {
         unaccounted_malloc++;
     }
-
+ 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 static inline void
 increment_calloc_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
-
+    MPIU_THREAD_CHECK_END
+   
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_calloc_calls, 1);
     }
@@ -111,13 +118,16 @@ increment_calloc_counter (void)
         unaccounted_calloc++;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 static inline void
 increment_realloc_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_realloc_calls, 1);
@@ -127,13 +137,16 @@ increment_realloc_counter (void)
         unaccounted_realloc++;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 static inline void
 increment_free_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_free_calls, 1);
@@ -143,13 +156,16 @@ increment_free_counter (void)
         unaccounted_free++;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 static inline void
 increment_memalign_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_memalign_calls, 1);
@@ -159,13 +175,16 @@ increment_memalign_counter (void)
         unaccounted_memalign++;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 static inline void
 increment_memalign_free_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_memalign_free_calls, 1);
@@ -175,13 +194,16 @@ increment_memalign_free_counter (void)
         unaccounted_memalign_free++;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 static inline void
 increment_strdup_counter (void)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_COUNTER_INC(MV2, num_strdup_calls, 1);
@@ -191,8 +213,9 @@ increment_strdup_counter (void)
         unaccounted_strdup++;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 
 static int
@@ -243,10 +266,12 @@ static MPIT_MEMORY_T *
 oracle_insert (void * ptr, size_t size)
 {
     MPIT_MEMORY_T * mptr = mpit_malloc(sizeof (MPIT_MEMORY_T), __LINE__,
-            __FILE__);
+            __FILE__); 
     void * result;
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&oracle_mutex);
+    MPIU_THREAD_CHECK_END
 
     if (mptr) {
         mptr->addr = ptr;
@@ -256,7 +281,9 @@ oracle_insert (void * ptr, size_t size)
         fflush(stdout);
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&oracle_mutex);
+    MPIU_THREAD_CHECK_END
 
     return mptr;
 }
@@ -268,10 +295,14 @@ oracle_find (void * ptr)
     MPIT_MEMORY_T * mptr;
     void * result;
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&oracle_mutex);
+    MPIU_THREAD_CHECK_END
     result = tfind(&m, &oracle, ptr_cmp);
     mptr = result ? *(MPIT_MEMORY_T **)result : NULL;
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&oracle_mutex);
+    MPIU_THREAD_CHECK_END
 
     return mptr;
 }
@@ -279,16 +310,22 @@ oracle_find (void * ptr)
 static void
 oracle_delete (MPIT_MEMORY_T * ptr)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&oracle_mutex);
+    MPIU_THREAD_CHECK_END
     tdelete(ptr, &oracle, ptr_cmp);
     mpit_free(ptr, __LINE__, __FILE__);
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&oracle_mutex);
+    MPIU_THREAD_CHECK_END
 }
 
 static inline void
 increment_counter (signed long size)
 {
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
 
     if (initialized) {
         MPIR_T_PVAR_LEVEL_INC(MV2, mem_allocated, size);
@@ -300,8 +337,9 @@ increment_counter (signed long size)
         unaccounted += size;
     }
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 void
 MPIT_MEM_REGISTER_PVARS (void)
@@ -396,7 +434,9 @@ MPIT_MEM_REGISTER_PVARS (void)
             "MEM", /* category name */
             "Number of MPIT_memalign_free calls");
 
+    MPIU_THREAD_CHECK_BEGIN 
     pthread_mutex_lock(&mutex);
+    MPIU_THREAD_CHECK_END
     initialized = 1;
     MPIR_T_PVAR_LEVEL_INC(MV2, mem_allocated, unaccounted);
     MPIR_T_PVAR_ULONG2_HIGHWATERMARK_UPDATE(MV2, mem_allocated,
@@ -411,35 +451,53 @@ MPIT_MEM_REGISTER_PVARS (void)
     MPIR_T_PVAR_COUNTER_INC(MV2, num_memalign_free_calls,
             unaccounted_memalign_free);
 
+    MPIU_THREAD_CHECK_BEGIN
     pthread_mutex_unlock(&mutex);
-}
+    MPIU_THREAD_CHECK_END}
 
 void *
 MPIT_malloc (size_t size, int lineno, char const * filename)
 {
-    increment_malloc_counter();
-    void * ptr = mpit_malloc(size, lineno, filename);
+    void *ptr;
 
-    if (ptr) {
-        increment_counter(size);
-        oracle_insert(ptr, size);
+    if(mv2_enable_pvar_mem)	
+    {
+        ptr = mpit_malloc(size, lineno, filename);
+
+        if (ptr) {
+            increment_counter(size);
+            oracle_insert(ptr, size);
+        }    
+    }
+    else
+    {
+        ptr = mpit_malloc(size, lineno, filename);
     }
 
     return ptr;
 }
 
 void *
-MPIT_calloc (size_t nelements, size_t elementSize, int lineno, char const *
-        filename)
+MPIT_calloc (size_t nelements, size_t elementSize, int lineno, char const *filename)
 {
-    increment_calloc_counter();
-    void * ptr = mpit_calloc(nelements, elementSize, lineno, filename);
-    size_t size = nelements * elementSize;
+    void *ptr;
 
-    if (ptr) {
-        increment_counter(size);
-        oracle_insert(ptr, size);
+    if(mv2_enable_pvar_mem)
+    {
+        increment_calloc_counter();
+        ptr = mpit_calloc(nelements, elementSize, lineno, filename);
+ 
+        size_t size = nelements * elementSize;
+
+        if (ptr) {
+           increment_counter(size);
+           oracle_insert(ptr, size);
+        }
     }
+    else
+    {
+        ptr = mpit_calloc(nelements, elementSize, lineno, filename);
+    }      
 
     return ptr;
 }
@@ -448,27 +506,44 @@ int
 MPIT_memalign (void ** ptr, size_t alignment, size_t size, int lineno, char
         const * filename)
 {
-    increment_memalign_counter();
-    int rv = mpit_memalign(ptr, alignment, size, lineno, filename);
-
-    if (!rv) {
-        increment_counter(size);
-        oracle_insert(*ptr, size);
+    int rv;
+
+    if(mv2_enable_pvar_mem)
+    {
+        increment_memalign_counter();
+    
+        rv = mpit_memalign(ptr, alignment, size, lineno, filename);
+   
+        if (!rv) {
+            increment_counter(size);
+            oracle_insert(*ptr, size);
+        }
+    }
+    else
+    {
+        rv = mpit_memalign(ptr, alignment, size, lineno, filename);
     }
-
     return rv;
 }
 
 char *
 MPIT_strdup (const char * s, int lineno, char const * filename)
 {
-    increment_strdup_counter();
-    char * ptr = mpit_strdup(s, lineno, filename);
-    size_t size = strlen(s);
+    char *ptr;
 
-    if (ptr) {
-        increment_counter(size);
-        oracle_insert(ptr, size);
+    if(mv2_enable_pvar_mem)
+    {
+        increment_strdup_counter();
+        ptr = mpit_strdup(s, lineno, filename);
+        size_t size = strlen(s);
+        if (ptr) {
+            increment_counter(size);
+            oracle_insert(ptr, size);
+        }
+    }
+    else
+    {
+        ptr = mpit_strdup(s, lineno, filename);        
     }
 
     return ptr;
@@ -477,91 +552,118 @@ MPIT_strdup (const char * s, int lineno, char const * filename)
 void *
 MPIT_realloc (void * ptr, size_t size, int lineno, char const * filename)
 {
-    increment_realloc_counter();
-    if (ptr) {
-        MPIT_MEMORY_T * mptr = oracle_find(ptr);
-        size_t oldsize;
-
-        MPIU_Assert(NULL != mptr);
-        oldsize = mptr->size;
-
-        ptr = mpit_realloc(ptr, size, lineno, filename);
-        if (ptr) {
-            oracle_delete(mptr);
-            oracle_insert(ptr, size);
-            increment_counter(size - oldsize);
+    if(mv2_enable_pvar_mem)
+    {
+        increment_realloc_counter();
+    
+        if (ptr) 
+        {
+            MPIT_MEMORY_T * mptr = oracle_find(ptr);
+            size_t oldsize;
+            MPIU_Assert(NULL != mptr);
+            oldsize = mptr->size;
+            ptr = mpit_realloc(ptr, size, lineno, filename);
+            if (ptr) {
+                oracle_delete(mptr);
+                oracle_insert(ptr, size);
+                increment_counter(size - oldsize);
+            }
+            else if (!size) {
+                oracle_delete(mptr);
+                increment_counter(size - oldsize);
+            }
         }
-
-        else if (!size) {
-            oracle_delete(mptr);
-            increment_counter(size - oldsize);
+        else 
+        {
+            ptr = mpit_realloc(ptr, size, lineno, filename);
+            if (ptr) {
+                oracle_insert(ptr, size);
+                increment_counter(size);
+            }
         }
     }
-
-    else {
+    else
+    {
         ptr = mpit_realloc(ptr, size, lineno, filename);
-        if (ptr) {
-            oracle_insert(ptr, size);
-            increment_counter(size);
-        }
     }
-
     return ptr;
 }
 
 void
 MPIT_free (void * ptr, int lineno, char const * filename)
 {
-    increment_free_counter();
-    size_t oldsize = 0;
+    if(mv2_enable_pvar_mem)
+    {
+        increment_free_counter();
+        size_t oldsize = 0;
 
-    if (ptr) {
-        MPIT_MEMORY_T * mptr = oracle_find(ptr);
+        if (ptr) {
+            MPIT_MEMORY_T * mptr = oracle_find(ptr);
 
-        if (mptr) {
-            oldsize = mptr->size;
-            oracle_delete(mptr);
+            if (mptr) {
+                oldsize = mptr->size;
+                oracle_delete(mptr);
+            }
         }
-    }
 
-    mpit_free(ptr, lineno, filename);
-    increment_counter(0 - oldsize);
+        mpit_free(ptr, lineno, filename);
+        increment_counter(0 - oldsize);        
+    }
+    else
+    {
+        mpit_free(ptr, lineno, filename);
+    }    
 }
 
 void
 MPIT_memalign_free (void * ptr, int lineno, char const * filename)
 {
-    increment_memalign_free_counter();
-    size_t oldsize = 0;
+    if(mv2_enable_pvar_mem)
+    {
+        increment_memalign_free_counter();
+        size_t oldsize = 0;
 
-    if (ptr) {
-        MPIT_MEMORY_T * mptr = oracle_find(ptr);
+        if (ptr) {
+            MPIT_MEMORY_T * mptr = oracle_find(ptr);
 
-        if (mptr) {
-            oldsize = mptr->size;
-            oracle_delete(mptr);
+            if (mptr) {
+                oldsize = mptr->size;
+                oracle_delete(mptr);
+            }
         }
-    }
 
-    Real_Free(ptr);
-    increment_counter(0 - oldsize);
+        Real_Free(ptr);
+        increment_counter(0 - oldsize); 
+    }
+    else
+    {
+        Real_Free(ptr);
+    }
 }
 
 void
 MPIT_shmdt (void * ptr, int lineno, char const * filename)
 {
-    increment_memalign_free_counter();
-    size_t oldsize = 0;
+    if(mv2_enable_pvar_mem)
+    {
+        increment_memalign_free_counter();
+        size_t oldsize = 0;
 
-    if (ptr) {
-        MPIT_MEMORY_T * mptr = oracle_find(ptr);
+        if (ptr) {
+            MPIT_MEMORY_T * mptr = oracle_find(ptr);
 
-        if (mptr) {
-            oldsize = mptr->size;
-            oracle_delete(mptr);
+            if (mptr) {
+                oldsize = mptr->size;
+                oracle_delete(mptr);
+            }
         }
+
+        shmdt(ptr);
+        increment_counter(0 - oldsize);  
+    }
+    else
+    {
+        shmdt(ptr);
     }
 
-    shmdt(ptr);
-    increment_counter(0 - oldsize);
 }
diff --git a/test/mpi/coll/bcast.c b/test/mpi/coll/bcast.c
index f465d01..96c0c69 100644
--- a/test/mpi/coll/bcast.c
+++ b/test/mpi/coll/bcast.c
@@ -76,7 +76,7 @@ int main(int argc, char *argv[])
                         }
                         err = MTestCheckRecv(0, &recvtype);
                         if (err) {
-                            errs += errs;
+                            errs += err;
                         }
                     }
                 }
diff --git a/test/mpi/rma/accpscw1.c b/test/mpi/rma/accpscw1.c
index 67ab3b4..ba7311d 100644
--- a/test/mpi/rma/accpscw1.c
+++ b/test/mpi/rma/accpscw1.c
@@ -88,7 +88,7 @@ int main(int argc, char *argv[])
                      * transfering data, as a send/recv pair */
                     err = MTestCheckRecv(0, &recvtype);
                     if (err) {
-                        errs += errs;
+                        errs += err;
                     }
                 }
                 else {
diff --git a/test/mpi/rma/putpscw1.c b/test/mpi/rma/putpscw1.c
index d46c8f9..19f35ab 100644
--- a/test/mpi/rma/putpscw1.c
+++ b/test/mpi/rma/putpscw1.c
@@ -88,7 +88,7 @@ int main(int argc, char *argv[])
                      * transfering data, as a send/recv pair */
                     err = MTestCheckRecv(0, &recvtype);
                     if (err) {
-                        errs += errs;
+                        errs += err;
                     }
                 }
                 else {
diff --git a/test/mpi/template.c b/test/mpi/template.c
index 2eb46d5..b505b92 100644
--- a/test/mpi/template.c
+++ b/test/mpi/template.c
@@ -63,7 +63,7 @@ int main(int argc, char *argv[])
                     }
                     err = MTestCheckRecv(&status, &recvtype);
                     if (err) {
-                        errs += errs;
+                        errs += err;
                     }
                     MTestFreeDatatype(&recvtype);
                 }
