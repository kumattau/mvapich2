#!/bin/bash

# Most variables here can be overridden by exporting them in the environment
# before running this script.  Default values have been provided if the
# environment variable is not already set.

source ./make.mvapich2.def

# The target architecture.  If not exported outside of this script,
# it will be found automatically or prompted for if necessary.
# Supported: "_IA32_", "_IA64_", "_EM64T_", "_X86_64_", "SOLARIS"
if [ -z "$ARCH" ]; then
    arch
fi

if [ $ARCH = "MAC_OSX" ]; then
    die_setup "MVAPICH2 uDAPL is not supported on this architecture: $ARCH."
fi

# Mandatory variables.  All are checked except CXX and F90.
DAT_LIB=$1
DAT_INCLUDE=$2
PREFIX=${PREFIX:-/usr/local/mvapich2}
export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export F77=${F77:-g77}
export F90=${F90:-}

# To use Sun Studio compilers on Solaris, please uncomment the lines below
# To build shared library, you also need to add -KPIC to the compiler options
#export SUNP=/opt/SUNWspro/bin
#export CC="$SUNP/cc -xO3 -xtarget=opteron -xarch=amd64"
#export CXX="$SUNP/CC -xO3 -xtarget=opteron -xarch=amd64"
#export F77="$SUNP/f77 -xO3 -xtarget=opteron -xarch=amd64"
#export F90="$SUNP/f90 -xO3 -xtarget=opteron -xarch=amd64"
#export LDFLAG="-xtarget=opteron -xarch=amd64"

# Check mandatory variable settings.
if [ -z "$DAT_LIB" ] || [ -z "$DAT_INCLUDE" ] || [ -z "$PREFIX" ] || [ -z "$CC" ] || [ -z "$F77" ]; then
    echo "usage:  make.mvapich2.udapl [dapl_library_path] [dapl_include_path]"
    die_setup "Please set mandatory variables in this script or the environment."
elif [ ! -d $DAT_LIB ]; then
    die_setup "DAT_LIB directory $DAT_LIB does not exist."
elif [ ! -d $DAT_INCLUDE ]; then
    die_setup "DAT_INCLUDE directory $DAT_INCLUDE does not exist."
fi

# Set this to override automatic optimization setting (-03 on Intel and
# Solaris with CC=gcc, -x03 on Solaris otherwise).
OPT_FLAG=${OPT_FLAG:-}

if [ -z "$OPT_FLAG" ]; then
    if [ $ARCH = "SOLARIS" ]; then
	if [[ "$CC" == *gcc* ]]; then
	    OPT_FLAG=-O3
	else
	    OPT_FLAG=-xO3
	fi
    else
	OPT_FLAG=-O2
    fi
fi

export MPI_F90FLAGS=$OPT_FLAG

# DAPL version
if [ $ARCH = "SOLARIS" ]; then
    DAPL_VERSION=_V1_
else
    DAPL_VERSION=${DAPL_VERSION:-}
    if [ -z "$DAPL_VERSION" ]; then
        prompt_dapl_version
    fi

    if [ $DAPL_VERSION == "_V1_" ]; then
        if [ ! -d $DAT_INCLUDE/dat ]; then
            die_setup "$DAT_INCLUDE/dat/ does not exist, please check if you need to use DAPL v2.0."
        fi
    else
        if [ ! -d $DAT_INCLUDE/dat2 ]; then
            die_setup "$DAT_INCLUDE/dat2/ does not exist, please check if you need to use DAPL v1.2."
        fi
    fi
fi

# Cluster size.
# Supported: "_SMALL_CLUSTER", "_MEDIUM_CLUSTER", and "_LARGE_CLUSTER"
VCLUSTER=${VCLUSTER:-}

if [ -z "$VCLUSTER" ]; then
    prompt_vcluster
fi

# I/O Bus type.
# Supported: "_PCI_X_" and "_PCI_EX_"
IO_BUS=${IO_BUS:-}

if [ -z "$IO_BUS" ]; then
    prompt_io_bus
fi

# Link speed rate.
# Supported: "_DDR_" and "_SDR_" (PCI-Express)
#            "_SDR_" (PCI-X)
LINKS=${LINKS:-}

if [ -z "$LINKS" ]; then
    prompt_link
fi

# Default uDAPL provider interface.
# Supported: the name of the default uDAPL provider interface.
#            Suggested: ib0 for Linux, ibd0 for Solaris
DAPL_DEFAULT_PROVIDER=${DAPL_DEFAULT_PROVIDER:-}

if [ -z "$DAPL_DEFAULT_PROVIDER" ]; then
    prompt_udapl_provider
fi

# Whether or not to build with ROMIO MPI I/O support.  Disabled by default.
# Enable with "yes".
ROMIO=${ROMIO:-}

if [ "$ROMIO" = "yes" ]; then
    ROMIO="--enable-romio"
else
    ROMIO="--disable-romio"
fi

# Whether or not to build with shared library support.  Disabled by default.
# Enabled with "yes".
SHARED_LIBS=${SHARED_LIBS:-}

if [ "$SHARED_LIBS" = "yes" ]; then
    if [ $ARCH = "SOLARIS" ]; then
	if [[ "$CC" == *gcc* ]]; then
	    echo "Shared libraries are not supported on Solaris using gcc."
	    echo "Using static libraries instead."
	    SHARED_LIBS=""
	else
	    SHARED_LIBS="--enable-sharedlibs=solaris86-cc"
	fi
    else
	SHARED_LIBS="--enable-sharedlibs=gcc"
    fi
else
    SHARED_LIBS=""
fi

if [ $ARCH = "SOLARIS" ]; then
    export MAKE=gmake
    export PATH=/usr/xpg4/bin:/usr/ucb:/usr/sbin:/usr/ccs/bin:/usr/sfw/bin:$PATH
    export LIBS=${LIBS:--L${DAT_LIB} -L/usr/ucblib/amd64 -lsocket -lnsl -lresolv -lpthread -ldat -lrt}
else
    export MAKE=make
    if [ $DAPL_VERSION = "_V1_" ]; then
        export LIBS=${LIBS:--L${DAT_LIB} -lpthread -ldat}
    else
        export LIBS=${LIBS:--L${DAT_LIB} -lpthread -ldat2}
    fi
fi

export LD_LIBRARY_PATH=${DAT_LIB}:/usr/ucblib/amd64:$LD_LIBRARY_PATH
export FFLAGS=${FFLAGS:--L${DAT_LIB}}
export CFLAGS=${CFLAGS:--D${ARCH} -D${DAPL_VERSION} -D_SMP_ -DRDMA_FAST_PATH -DUSE_HEADER_CACHING -DLAZY_MEM_UNREGISTER  -DONE_SIDED -DMPIDI_CH3_CHANNEL_RNDV -DMPID_USE_SEQUENCE_NUMBERS -D${VCLUSTER} -D${IO_BUS} -D${LINKS} -DDAPL_DEFAULT_PROVIDER=\"\\\"$DAPL_DEFAULT_PROVIDER\\\"\" -I${DAT_INCLUDE} $OPT_FLAG}

if [ $ARCH = "SOLARIS" ]; then
	export CFLAGS="${CFLAGS} -DDISABLE_PTMALLOC"   
fi

# Prelogue
make distclean &>/dev/null
rm -rf *.cache *.log *.status lib bin
set -o pipefail

# Configure MVAPICH2
echo "Configuring MVAPICH2..."
./configure  --prefix=${PREFIX} \
    --with-device=osu_ch3:mrail --with-rdma=udapl --with-pm=mpd \
    ${ROMIO} ${SHARED_LIBS} --without-mpe 2>&1 |tee config-mine.log
ret=$?
tail config-mine.log
test $ret = 0 ||  die "configuration."

# Build MVAPICH2
echo "Building MVAPICH2..."
$MAKE 2>&1 |tee make-mine.log 
ret=$?
tail make-mine.log
test $ret = 0 ||  die "building MVAPICH2."

# Install MVAPICH2
echo "MVAPICH2 installation..."
rm -f install-mine.log 
$MAKE install 2>&1 |tee install-mine.log
ret=$?
tail install-mine.log
test $ret = 0 ||  die "installing MVAPICH2."

# Epilogue
echo "Congratulations on successfully building MVAPICH2. Please send your feedback to mvapich-discuss@cse.ohio-state.edu." 
