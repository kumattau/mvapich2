#!/bin/bash

source ./make.mvapich2.def
source ./make.mvapich2.detect

arch

# Mandatory variables.  All are checked except CXX and F90.
export OPEN_IB_HOME=/usr/local
PREFIX=/usr/local/mvapich2

export CC=gcc
export CXX=g++
export F77=g77
export F90=$F77

if [ $ARCH = "SOLARIS" ]; then
    die_setup "MVAPICH2 VAPI is not supported on Solaris."
elif [ $ARCH = "MAC_OSX" ]; then
    MTHOME=/usr/SmallTree
    export F77=/usr/local/bin/g77
    export F90=/usr/local/bin/g77
    export MAC_OSX=yes
    SUPPRESS="-multiply_defined suppress"
fi

if [ $HCA_COMPILE_FLAG = "_MLX_PCI_X_" ]; then
	HAVE_SRQ=""
else
	HAVE_SRQ="-DSRQ"
fi

# Check mandatory variable settings.
if [ -z $OPEN_IB_HOME ] || [ -z $PREFIX ] || [ -z $CC ] || [ -z $F77 ]; then
    die_setup "Please set mandatory variables in this script."
elif [ ! -d $OPEN_IB_HOME ]; then
    die_setup "MTHOME directory $OPEN_IB_HOME does not exist."
elif [ -d $OPEN_IB_HOME/lib ]; then
    OPEN_IB_LIB=$OPEN_IB_HOME/lib
elif [ -d $OPEN_IB_HOME/lib64 ]; then
    OPEN_IB_LIB=$OPEN_IB_HOME/lib64
else
    die_setup "Could not find the MTHOME/lib directory."
fi

# Whether to use an optimized queue pair exchange scheme.  This is not
# checked for a setting in in the script.  It must be set here explicitly.
# Supported: "-DUSE_MPD_RING" and "" (to disable)
HAVE_MPD_RING="-DUSE_MPD_RING"

# Set this to override automatic optimization setting (-03).
OPT_FLAG=

if [ -z $OPT_FLAG ]; then
    OPT_FLAG=-O2
fi

# Whether or not to build with multi-thread support
# Building with this option the MVAPICH2 will be thread-safe but it may suffer
# slight performance penalty in single-threaded case
# This option is default to no
# Supported: "yes" or ""
MULTI_THREAD=""

if [ ! -z $MULTI_THREAD ]; then
	MULTI_THREAD="--enable-threads=multiple"
fi

export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
export LIBS="-L${OPEN_IB_LIB} -libverbs -lpthread $SUPPRESS"
export FFLAGS="-L${OPEN_IB_LIB}"
export CFLAGS="-D${ARCH} -DUSE_INLINE -D_SMP_ -DADAPTIVE_RDMA_FAST_PATH \
-DUSE_HEADER_CACHING -D_GNU_SOURCE ${HAVE_SRQ} -DUSE_HEADER_CACHING -DLAZY_MEM_UNREGISTER \
-DONE_SIDED $SUPPRESS -D${HCA_COMPILE_FLAG} -DMPID_USE_SEQUENCE_NUMBERS \
${HAVE_MPD_RING} -D_GNU_SOURCE -I${OPEN_IB_HOME}/include $OPT_FLAG"

# Prelogue
make distclean &>/dev/null
rm -rf *.cache *.log *.status lib bin

# Configure MVAPICH2
# If you are configuring with tcp/ip stack, please use:
# ./configure --with-device=ch3:sock 

echo "Configuring MVAPICH2..."
./configure  --prefix=${PREFIX} ${MULTI_THREAD} \
    --with-device=osu_ch3:mrail --with-rdma=gen2 --with-pm=mpd \
    --disable-romio --without-mpe 2>&1 |tee config-mine.log
ret=$?
tail config-mine.log
test $ret = 0 ||  die "configuration."

# Build MVAPICH2
echo "Building MVAPICH2..."
make 2>&1 |tee make-mine.log 
ret=$?
tail make-mine.log
test $ret = 0 ||  die "building MVAPICH2."

# Install MVAPICH2
echo "MVAPICH2 installation..."
rm -f install-mine.log 
make install 2>&1 |tee install-mine.log
ret=$?
tail install-mine.log
test $ret = 0 ||  die "installing MVAPICH2."

# Epilogue
echo "Congratulations on successfully building MVAPICH2. Please send your feedback to mvapich-discuss@cse.ohio-state.edu." 
