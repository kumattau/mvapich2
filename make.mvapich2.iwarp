#!/bin/bash

# Most variables here can be overridden by exporting them in the environment
# before running this script.  Default values have been provided if the
# environment variable is not already set.

source ./make.mvapich2.def

# The target architecture.  If not exported outside of this script,
# it will be found automatically or prompted for if necessary.
# Supported: "_IA32_", "_IA64_", "_EM64T_", "_X86_64_"
#
if [ -z "$ARCH" ]; then
    arch
fi

# Mandatory variables.  All are checked except CXX and F90.
export OPEN_IB_HOME=${OPEN_IB_HOME:-/usr/local/ofed}
PREFIX=${PREFIX:-/usr/local/mvapich2}

export CC=${CC:-gcc}
export CXX=${CXX:-g++}
export F77=${F77:-g77}
export F90=${F90:-$F77}

if [ $ARCH = "SOLARIS" ] || [ $ARCH = "MAC_OSX" ]; then
    die_setup "MVAPICH2 Gen2 is not supported on this architecture: $ARCH."
fi

# Check mandatory variable settings.
if [ -z "$OPEN_IB_HOME" ] || [ -z "$PREFIX" ] || [ -z "$CC" ] || [ -z "$F77" ]; then
    die_setup "Please set mandatory variables in this script."
elif [ ! -d $OPEN_IB_HOME ]; then
    die_setup "MTHOME directory $OPEN_IB_HOME does not exist."
elif [ -d $OPEN_IB_HOME/lib64 ]; then
    OPEN_IB_LIB=$OPEN_IB_HOME/lib64
elif [ -d $OPEN_IB_HOME/lib ]; then
    OPEN_IB_LIB=$OPEN_IB_HOME/lib
else
    die_setup "Could not find the OPEN_IB_HOME/lib64 or OPEN_IB_HOME/lib directory."
fi

# Set this to override automatic optimization setting (-O2).
OPT_FLAG=${OPT_FLAG:--O2}

# PTMALLOC support for MVAPICH2 memory hooks.  Enabling this will allow
# MVAPICH2 to release memory to the Operating System (when registration
# cache is enabled).  Enabled by default.  Disable with "no".
PTMALLOC=${PTMALLOC:-}

if [ "$PTMALLOC" = "no" ]; then
    if [ "$ENABLE_CKPT" = "yes" ]; then
        die_setup "Checkpoint-Restart requires PTMALLOC support."
    fi

    PTMALLOC="-DDISABLE_PTMALLOC"
else
    PTMALLOC=""
fi

# Whether or not to build rdma-cm support. Disabled by default.
# Enable with "yes". Please uncomment RDMA_CM_DEVICE for iWARP
# support.
RDMA_CM_SUPPORT=${RDMA_CM_SUPPORT:-"yes"}

if [ "$RDMA_CM_SUPPORT" = "yes" ]; then
    if [ "$ENABLE_CKPT" = "yes" ]; then
        die_setup "Checkpoint-Restart does not support rdma-cm."
    fi

    RDMA_CM_LIBS="-lrdmacm"
    RDMA_CM_DEVICE="-DRDMA_CM_RNIC"
    RDMA_CM_FLAG="-DRDMA_CM ${RDMA_CM_DEVICE}"
fi

if [ -n "$RDMA_CM_DEVICE" ]; then
    COLL_FLAG=""
else
    COLL_FLAG="-D_SHMEM_COLL_"
fi

# Whether or not to build with ROMIO MPI I/O support.  Disabled by default.
# Enable with "yes".
ROMIO=${ROMIO:-}

if [ "$ROMIO" = "yes" ]; then
    ROMIO="--enable-romio"
else
    ROMIO="--disable-romio"
fi

# Whether or not to build with shared library support.  Disabled by default.
# Enabled with "yes".
SHARED_LIBS=${SHARED_LIBS:-}

if [ "$SHARED_LIBS" = "yes" ]; then
    SHARED_LIBS="--enable-sharedlibs=gcc"
else
    SHARED_LIBS=""
fi

export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
export LIBS=${LIBS:--L${OPEN_IB_LIB} ${BLCR_LIB} ${RDMA_CM_LIBS} -libverbs -libumad -lpthread}
export FFLAGS=${FFLAGS:--L${OPEN_IB_LIB}}
export CFLAGS=${CFLAGS:--D${ARCH} ${SMP_FLAG} -DUSE_HEADER_CACHING ${PTMALLOC} -DONE_SIDED -DMPID_USE_SEQUENCE_NUMBERS ${BLCR_INC} -I${OPEN_IB_HOME}/include $OPT_FLAG ${RDMA_CM_FLAG} ${CR_FLAG} ${COLL_FLAG}}

# Prelogue
make distclean &>/dev/null
rm -rf *.cache *.log *.status lib bin

# Configure MVAPICH2
# If you are configuring with tcp/ip stack, please use:
# ./configure --with-device=ch3:sock 

echo "Configuring MVAPICH2..."
./configure  --prefix=${PREFIX} ${MULTI_THREAD} \
    --with-device=osu_ch3:mrail --with-rdma=gen2 --with-pm=mpd \
    ${ROMIO} ${SHARED_LIBS} --without-mpe 2>&1 |tee config-mine.log
ret=$?
tail config-mine.log
test $ret = 0 ||  die "configuration."

# Build MVAPICH2
echo "Building MVAPICH2..."
make 2>&1 |tee make-mine.log 
ret=$?
tail make-mine.log
test $ret = 0 ||  die "building MVAPICH2."

# Install MVAPICH2
echo "MVAPICH2 installation..."
rm -f install-mine.log 
make install 2>&1 |tee install-mine.log
ret=$?
tail install-mine.log
test $ret = 0 ||  die "installing MVAPICH2."

# Epilogue
echo "Congratulations on successfully building MVAPICH2. Please send your feedback to mvapich-discuss@cse.ohio-state.edu." 
